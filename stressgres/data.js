window.BENCHMARK_DATA = {
  "lastUpdate": 1756927790923,
  "repoUrl": "https://github.com/paradedb/paradedb",
  "entries": {
    "pg_search single-server.toml Performance - TPS": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755715366715,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1116.4887244249749,
            "unit": "median tps",
            "extra": "avg tps: 1115.1909350751087, max tps: 1119.7814567276114, count: 55310"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2456.5874448060495,
            "unit": "median tps",
            "extra": "avg tps: 2452.060805170511, max tps: 2598.528907822059, count: 55310"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1207.608238549296,
            "unit": "median tps",
            "extra": "avg tps: 1199.9283244493497, max tps: 1214.1541553935713, count: 55310"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1008.083315094636,
            "unit": "median tps",
            "extra": "avg tps: 1001.9484392304518, max tps: 1014.7259384910247, count: 55310"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 155.78190326345612,
            "unit": "median tps",
            "extra": "avg tps: 156.9076067934636, max tps: 162.11418622133576, count: 110620"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 158.18108691163968,
            "unit": "median tps",
            "extra": "avg tps: 156.6596247253203, max tps: 160.0890634072344, count: 55310"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 57.40801504088193,
            "unit": "median tps",
            "extra": "avg tps: 54.859603289900086, max tps: 583.3573968259524, count: 55310"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755715422036,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1162.6878606159319,
            "unit": "median tps",
            "extra": "avg tps: 1155.3722936269817, max tps: 1167.9343047346053, count: 55231"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2843.830276680142,
            "unit": "median tps",
            "extra": "avg tps: 2804.0848300007947, max tps: 2851.9283117369077, count: 55231"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1151.0065816402027,
            "unit": "median tps",
            "extra": "avg tps: 1146.1170965665438, max tps: 1153.891016188779, count: 55231"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1004.5746533709743,
            "unit": "median tps",
            "extra": "avg tps: 993.2911211559402, max tps: 1012.735325886529, count: 55231"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 162.12949942297377,
            "unit": "median tps",
            "extra": "avg tps: 161.31456872114617, max tps: 163.69407453786187, count: 110462"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 142.18153908276003,
            "unit": "median tps",
            "extra": "avg tps: 142.02986276537774, max tps: 152.43018629418535, count: 55231"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 47.094914826155176,
            "unit": "median tps",
            "extra": "avg tps: 52.837871470249326, max tps: 664.8746079733093, count: 55231"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755715436960,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1217.475730917366,
            "unit": "median tps",
            "extra": "avg tps: 1215.240557921323, max tps: 1230.6982033635647, count: 55099"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2780.1117902708056,
            "unit": "median tps",
            "extra": "avg tps: 2765.816630729908, max tps: 2810.2185000234135, count: 55099"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1268.7229714541638,
            "unit": "median tps",
            "extra": "avg tps: 1262.8097455546767, max tps: 1274.6844554633963, count: 55099"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1054.8883289594573,
            "unit": "median tps",
            "extra": "avg tps: 1044.1330939698348, max tps: 1059.8597090152662, count: 55099"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 178.5516853793432,
            "unit": "median tps",
            "extra": "avg tps: 181.18751664006533, max tps: 191.5890441161113, count: 110198"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 153.31724143822922,
            "unit": "median tps",
            "extra": "avg tps: 152.48426975306273, max tps: 154.5186720356855, count: 55099"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 42.55842851199229,
            "unit": "median tps",
            "extra": "avg tps: 49.05609402960742, max tps: 867.716603757213, count: 55099"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755715446463,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1244.2922152013737,
            "unit": "median tps",
            "extra": "avg tps: 1242.1228332046906, max tps: 1267.3932401326927, count: 55183"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2633.008264535682,
            "unit": "median tps",
            "extra": "avg tps: 2624.487771500032, max tps: 2664.7198652100897, count: 55183"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1185.2814399845097,
            "unit": "median tps",
            "extra": "avg tps: 1184.8611840253259, max tps: 1214.7395614944787, count: 55183"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1047.8483463672392,
            "unit": "median tps",
            "extra": "avg tps: 1040.7394068776596, max tps: 1055.7212425433822, count: 55183"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 162.20104535697016,
            "unit": "median tps",
            "extra": "avg tps: 174.85557994528193, max tps: 191.79265747394686, count: 110366"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 137.47579599739996,
            "unit": "median tps",
            "extra": "avg tps: 137.1767647275256, max tps: 150.32382457642606, count: 55183"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 250.86569596715174,
            "unit": "median tps",
            "extra": "avg tps: 205.48229741327762, max tps: 761.5415428527042, count: 55183"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755715493319,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1256.533949601907,
            "unit": "median tps",
            "extra": "avg tps: 1251.7578175243382, max tps: 1262.976571597613, count: 55217"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2953.7122027014025,
            "unit": "median tps",
            "extra": "avg tps: 2928.228941037981, max tps: 2968.189532060059, count: 55217"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1264.0377204656168,
            "unit": "median tps",
            "extra": "avg tps: 1259.0557652682796, max tps: 1268.1811857862056, count: 55217"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 911.8524745792212,
            "unit": "median tps",
            "extra": "avg tps: 912.994584302596, max tps: 989.9209911059633, count: 55217"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 174.3220018512833,
            "unit": "median tps",
            "extra": "avg tps: 173.72196838279933, max tps: 176.45752290097963, count: 110434"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 153.665897232315,
            "unit": "median tps",
            "extra": "avg tps: 153.33059768920103, max tps: 154.35617079938731, count: 55217"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 49.85233888733582,
            "unit": "median tps",
            "extra": "avg tps: 57.597267362257355, max tps: 793.9828801411384, count: 55217"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755715525169,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 299.6220425416693,
            "unit": "median tps",
            "extra": "avg tps: 301.2070678049899, max tps: 535.8897792153914, count: 55218"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2441.851324866876,
            "unit": "median tps",
            "extra": "avg tps: 2426.197242481759, max tps: 2660.075708414737, count: 55218"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 308.0274382350238,
            "unit": "median tps",
            "extra": "avg tps: 308.7554000291646, max tps: 484.9810922127007, count: 55218"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 270.69217839050253,
            "unit": "median tps",
            "extra": "avg tps: 270.5547535156572, max tps: 435.7596386437051, count: 55218"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 152.51531877818124,
            "unit": "median tps",
            "extra": "avg tps: 151.59025240758297, max tps: 156.76027218151694, count: 110436"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 141.10866810515418,
            "unit": "median tps",
            "extra": "avg tps: 139.79167372747094, max tps: 141.92587129093184, count: 55218"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 4.691854040091016,
            "unit": "median tps",
            "extra": "avg tps: 9.154715502252817, max tps: 1197.557461800911, count: 55218"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755724630781,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1236.9292335316463,
            "unit": "median tps",
            "extra": "avg tps: 1233.524412519379, max tps: 1253.5770036312992, count: 55222"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2629.109684444998,
            "unit": "median tps",
            "extra": "avg tps: 2624.555260620635, max tps: 2669.727683715839, count: 55222"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1232.654276024278,
            "unit": "median tps",
            "extra": "avg tps: 1228.826761757374, max tps: 1237.8518422287007, count: 55222"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 962.1956564282336,
            "unit": "median tps",
            "extra": "avg tps: 960.538969808775, max tps: 980.1198636626364, count: 55222"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 173.88419493135433,
            "unit": "median tps",
            "extra": "avg tps: 172.68319383182833, max tps: 177.0443126329157, count: 110444"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 153.14472299369265,
            "unit": "median tps",
            "extra": "avg tps: 152.04433761675043, max tps: 154.68931800019038, count: 55222"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 29.700515659945825,
            "unit": "median tps",
            "extra": "avg tps: 48.244038153433124, max tps: 728.3347717945077, count: 55222"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T13:19:49-04:00",
          "tree_id": "26f07dc326d4e53d8df249d9268a911b9d59d86b",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755724678921,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1196.7346449020963,
            "unit": "median tps",
            "extra": "avg tps: 1187.5956456683123, max tps: 1199.6634355633337, count: 55406"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2344.1602478820437,
            "unit": "median tps",
            "extra": "avg tps: 2342.369512406594, max tps: 2578.312813974043, count: 55406"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1191.1761791597755,
            "unit": "median tps",
            "extra": "avg tps: 1184.8377426330624, max tps: 1197.3227829464684, count: 55406"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1053.3238647193473,
            "unit": "median tps",
            "extra": "avg tps: 1041.185542385324, max tps: 1056.5833387132138, count: 55406"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 154.71034742815846,
            "unit": "median tps",
            "extra": "avg tps: 153.30064546920698, max tps: 161.7505011591701, count: 110812"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 131.53934241236516,
            "unit": "median tps",
            "extra": "avg tps: 131.7307831394826, max tps: 141.0300759913331, count: 55406"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 63.61371081441365,
            "unit": "median tps",
            "extra": "avg tps: 78.752304280384, max tps: 801.319934195607, count: 55406"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755724987564,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 304.56972497639225,
            "unit": "median tps",
            "extra": "avg tps: 305.8191110015292, max tps: 528.954264742586, count: 55305"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2427.837860900668,
            "unit": "median tps",
            "extra": "avg tps: 2426.646081436125, max tps: 2595.163158497585, count: 55305"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 303.0872330182266,
            "unit": "median tps",
            "extra": "avg tps: 304.4124755940173, max tps: 506.45055948606205, count: 55305"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 248.5751317746758,
            "unit": "median tps",
            "extra": "avg tps: 250.1883663921892, max tps: 388.18352276624546, count: 55305"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 155.22648019662353,
            "unit": "median tps",
            "extra": "avg tps: 155.559491785663, max tps: 159.38046010205116, count: 110610"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 137.47805275232005,
            "unit": "median tps",
            "extra": "avg tps: 136.44195468161516, max tps: 142.59301330799713, count: 55305"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 4.746050810671489,
            "unit": "median tps",
            "extra": "avg tps: 8.87791559524838, max tps: 1133.171440906809, count: 55305"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755725039390,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1084.0767931626222,
            "unit": "median tps",
            "extra": "avg tps: 1082.3479983227169, max tps: 1090.8473801144446, count: 55285"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2844.6019772452682,
            "unit": "median tps",
            "extra": "avg tps: 2806.4354406134757, max tps: 2852.5974983741553, count: 55285"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1182.9875738386045,
            "unit": "median tps",
            "extra": "avg tps: 1172.7220771926984, max tps: 1189.409145698208, count: 55285"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1034.3083597082002,
            "unit": "median tps",
            "extra": "avg tps: 1023.1894045701273, max tps: 1039.4448406402678, count: 55285"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 155.40121192429842,
            "unit": "median tps",
            "extra": "avg tps: 155.65064615676448, max tps: 159.50883259001134, count: 110570"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 137.299482352109,
            "unit": "median tps",
            "extra": "avg tps: 137.2478414265768, max tps: 142.51725955271812, count: 55285"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 42.47563402926256,
            "unit": "median tps",
            "extra": "avg tps: 51.37275116939526, max tps: 749.9242576499773, count: 55285"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755725056203,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1253.4582174287848,
            "unit": "median tps",
            "extra": "avg tps: 1248.0184449338062, max tps: 1257.7005136141838, count: 55283"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2829.772465511342,
            "unit": "median tps",
            "extra": "avg tps: 2820.5896456797573, max tps: 2873.5278340592004, count: 55283"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1242.479811588259,
            "unit": "median tps",
            "extra": "avg tps: 1238.4990908769014, max tps: 1246.8223702643456, count: 55283"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1060.933563140538,
            "unit": "median tps",
            "extra": "avg tps: 1052.1223545680352, max tps: 1064.8904284525995, count: 55283"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 179.352740445096,
            "unit": "median tps",
            "extra": "avg tps: 180.55419280309465, max tps: 185.1156494021371, count: 110566"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 158.0280477727054,
            "unit": "median tps",
            "extra": "avg tps: 156.88083125847785, max tps: 158.81009318574715, count: 55283"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 30.004653295853686,
            "unit": "median tps",
            "extra": "avg tps: 32.952479063885356, max tps: 760.9481413841646, count: 55283"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755726148818,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1280.4653763643203,
            "unit": "median tps",
            "extra": "avg tps: 1273.170546481896, max tps: 1285.302430757094, count: 55251"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2609.426016575645,
            "unit": "median tps",
            "extra": "avg tps: 2612.5897263402135, max tps: 2652.7033934260885, count: 55251"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1210.4284177730206,
            "unit": "median tps",
            "extra": "avg tps: 1207.7335886774235, max tps: 1215.2706222423253, count: 55251"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1075.0238907689277,
            "unit": "median tps",
            "extra": "avg tps: 1063.901582059064, max tps: 1082.3387896915565, count: 55251"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 180.55201948883212,
            "unit": "median tps",
            "extra": "avg tps: 184.2453916628613, max tps: 192.5263677725552, count: 110502"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 154.18144658445883,
            "unit": "median tps",
            "extra": "avg tps: 153.17586090240556, max tps: 155.17263370101404, count: 55251"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 36.99047645740585,
            "unit": "median tps",
            "extra": "avg tps: 43.09746490935574, max tps: 750.9091632694284, count: 55251"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755794892360,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1191.509182173793,
            "unit": "median tps",
            "extra": "avg tps: 1183.7197209703556, max tps: 1195.1304495601307, count: 55179"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2846.4374094285467,
            "unit": "median tps",
            "extra": "avg tps: 2817.3124697743765, max tps: 2852.896042300975, count: 55179"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1180.7091214787433,
            "unit": "median tps",
            "extra": "avg tps: 1171.6030953467268, max tps: 1185.9516892498154, count: 55179"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 875.4824198766612,
            "unit": "median tps",
            "extra": "avg tps: 874.0349639158709, max tps: 902.9528639368203, count: 55179"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 154.9039519571436,
            "unit": "median tps",
            "extra": "avg tps: 154.40797527133753, max tps: 159.77556250148783, count: 110358"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 140.5855423124256,
            "unit": "median tps",
            "extra": "avg tps: 140.46345315720993, max tps: 143.49211615301937, count: 55179"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 76.60163179715929,
            "unit": "median tps",
            "extra": "avg tps: 96.41325313442836, max tps: 834.8241901996648, count: 55179"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755797103980,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1171.7631288686746,
            "unit": "median tps",
            "extra": "avg tps: 1165.6925264739075, max tps: 1182.4540558681117, count: 55359"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2763.332778602086,
            "unit": "median tps",
            "extra": "avg tps: 2726.0136565309103, max tps: 2790.1215591810687, count: 55359"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1089.6544313435768,
            "unit": "median tps",
            "extra": "avg tps: 1090.9007982070177, max tps: 1108.9519590046832, count: 55359"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 939.201584699334,
            "unit": "median tps",
            "extra": "avg tps: 936.5402285197516, max tps: 948.0599296146519, count: 55359"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 162.39591794588128,
            "unit": "median tps",
            "extra": "avg tps: 162.47536074782795, max tps: 166.3045415575638, count: 110718"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 144.47734366933986,
            "unit": "median tps",
            "extra": "avg tps: 145.07211763610908, max tps: 152.53107600602416, count: 55359"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 125.92169104525382,
            "unit": "median tps",
            "extra": "avg tps: 138.2464736468193, max tps: 803.2741454167186, count: 55359"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bb7c02ed7b398872104e7879aed251dd18a6414",
          "message": "fix: don't ERROR if `paradedb.terms_with_operator` is missing (#3013)\n\n\n## What\n\nIt's possible that when upgrading pg_search from `v0.15.26` to `v0.17.x`\nwe could generate an ERROR complaining that\n`paradedb.terms_with_operator(...)` doesn't exist if the user upgraded\nthe extension binary but has not yet run `ALTER EXTENSION pg_search\nUPDATE;`.\n\nThis fixes that by inspecting the catalogs directly when it's necessary\nto lookup that function and plumbing through an `Option<pg_sys::Oid>`\nreturn value.\n\n## Why\n\nTo help users/customers/partners better deal with upgrading from really\nold pg_search versions.\n\n## How\n\n## Tests\n\nExisting tests pass, especially the ones added in #2730, and a new\nregress test has been added that explicitly removes the function from\nthe schema and ensures the query still works (tho with a different plan,\nof course).",
          "timestamp": "2025-08-21T15:17:35-04:00",
          "tree_id": "4c5e053bc28da403546f6c1b9ad61b9b62a75bdf",
          "url": "https://github.com/paradedb/paradedb/commit/2bb7c02ed7b398872104e7879aed251dd18a6414"
        },
        "date": 1755804853559,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1122.4053370915312,
            "unit": "median tps",
            "extra": "avg tps: 1114.596488678084, max tps: 1124.415768673027, count: 55214"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2609.304619880608,
            "unit": "median tps",
            "extra": "avg tps: 2597.3735812397463, max tps: 2615.4799198847845, count: 55214"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1154.053000262801,
            "unit": "median tps",
            "extra": "avg tps: 1144.5461267824182, max tps: 1158.6639591901478, count: 55214"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 942.2659595054064,
            "unit": "median tps",
            "extra": "avg tps: 935.7711658295667, max tps: 950.6558830837324, count: 55214"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 167.4811538985087,
            "unit": "median tps",
            "extra": "avg tps: 171.79959020753367, max tps: 180.50078681178323, count: 110428"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 144.60667074983422,
            "unit": "median tps",
            "extra": "avg tps: 144.16865508931446, max tps: 144.9121310410424, count: 55214"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 98.94970886983673,
            "unit": "median tps",
            "extra": "avg tps: 122.17077600678304, max tps: 792.9138871731113, count: 55214"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ori@eigenstate.org",
            "name": "Ori Bernstein",
            "username": "oridb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "97ad25718b14ab34440c0587cb8bb9968598bf7d",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:11:27-04:00",
          "tree_id": "74eee4eb0e1503ed631c849c97ccf32653c4e203",
          "url": "https://github.com/paradedb/paradedb/commit/97ad25718b14ab34440c0587cb8bb9968598bf7d"
        },
        "date": 1755811647028,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1196.0781062246558,
            "unit": "median tps",
            "extra": "avg tps: 1187.7076502822272, max tps: 1200.272224982228, count: 55131"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2506.2998080089264,
            "unit": "median tps",
            "extra": "avg tps: 2491.7782688680427, max tps: 2510.083310933078, count: 55131"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1090.3183397789826,
            "unit": "median tps",
            "extra": "avg tps: 1089.1880610243293, max tps: 1123.7069397413104, count: 55131"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 951.9179431025949,
            "unit": "median tps",
            "extra": "avg tps: 947.6524125448246, max tps: 955.1780737385359, count: 55131"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 157.05660094587174,
            "unit": "median tps",
            "extra": "avg tps: 155.76735789543704, max tps: 173.57963774762783, count: 110262"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 167.9990205972526,
            "unit": "median tps",
            "extra": "avg tps: 165.7462351054542, max tps: 169.05685215675297, count: 55131"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 80.95394161452434,
            "unit": "median tps",
            "extra": "avg tps: 95.88107638509996, max tps: 785.1512201249961, count: 55131"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f2428be0ee6a082b53176d781e62ee2519ccccc",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015) (#3016)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ori Bernstein <ori@eigenstate.org>\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:33:35-04:00",
          "tree_id": "b3df08f37cb0652f7b23674356d6a786d632a136",
          "url": "https://github.com/paradedb/paradedb/commit/7f2428be0ee6a082b53176d781e62ee2519ccccc"
        },
        "date": 1755812975883,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1170.9928934435109,
            "unit": "median tps",
            "extra": "avg tps: 1160.3200944857344, max tps: 1175.466526131665, count: 55192"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2450.1156160482706,
            "unit": "median tps",
            "extra": "avg tps: 2429.8320910409184, max tps: 2454.0295179221016, count: 55192"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1165.8878541162426,
            "unit": "median tps",
            "extra": "avg tps: 1157.8632910271804, max tps: 1168.1224917944376, count: 55192"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 865.816848283649,
            "unit": "median tps",
            "extra": "avg tps: 863.5515038431444, max tps: 901.2381750792143, count: 55192"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 164.86013502103708,
            "unit": "median tps",
            "extra": "avg tps: 163.9953561541898, max tps: 166.11580007727028, count: 110384"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 159.07471588293174,
            "unit": "median tps",
            "extra": "avg tps: 157.84786194887968, max tps: 161.27305156271257, count: 55192"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 62.311205767898024,
            "unit": "median tps",
            "extra": "avg tps: 84.2950711365507, max tps: 852.9737650859073, count: 55192"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f929495a112d17ce5992a41cbd1d3b05aa17cbb",
          "message": "chore: Upgrade to `0.17.6` (#3017)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-21T18:03:19-04:00",
          "tree_id": "f3d6f5fb6a9f1748954b75791999f0080ecf1fb5",
          "url": "https://github.com/paradedb/paradedb/commit/4f929495a112d17ce5992a41cbd1d3b05aa17cbb"
        },
        "date": 1755814757121,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1168.082891826055,
            "unit": "median tps",
            "extra": "avg tps: 1161.8132316936276, max tps: 1171.4179949387292, count: 55241"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2841.9312088004604,
            "unit": "median tps",
            "extra": "avg tps: 2805.0348575455373, max tps: 2861.005020348897, count: 55241"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1166.5052805825069,
            "unit": "median tps",
            "extra": "avg tps: 1159.52435221109, max tps: 1168.949360288792, count: 55241"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1012.0264182584477,
            "unit": "median tps",
            "extra": "avg tps: 999.377609497136, max tps: 1025.4582173034357, count: 55241"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 166.42820763074363,
            "unit": "median tps",
            "extra": "avg tps: 165.74137681694708, max tps: 167.49337143049948, count: 110482"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 145.8807790887134,
            "unit": "median tps",
            "extra": "avg tps: 145.37547531922428, max tps: 148.0086180484669, count: 55241"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 83.7461571645613,
            "unit": "median tps",
            "extra": "avg tps: 99.6442024611029, max tps: 723.4016079770943, count: 55241"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755834370455,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1195.1902622835762,
            "unit": "median tps",
            "extra": "avg tps: 1188.2345465791127, max tps: 1204.1308681439502, count: 55102"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2428.432036428251,
            "unit": "median tps",
            "extra": "avg tps: 2421.525711165937, max tps: 2439.3693540527574, count: 55102"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1058.399248163393,
            "unit": "median tps",
            "extra": "avg tps: 1060.4712391840644, max tps: 1108.861623482288, count: 55102"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1030.5946122016444,
            "unit": "median tps",
            "extra": "avg tps: 1022.7805952570455, max tps: 1041.096007665378, count: 55102"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 156.38940713225674,
            "unit": "median tps",
            "extra": "avg tps: 156.07363095711642, max tps: 161.70369481623396, count: 110204"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 138.19012923567396,
            "unit": "median tps",
            "extra": "avg tps: 137.49364275916497, max tps: 143.33522773640118, count: 55102"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 178.33280328400437,
            "unit": "median tps",
            "extra": "avg tps: 155.44381534630193, max tps: 820.2745623014936, count: 55102"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755834671963,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1188.8391967805785,
            "unit": "median tps",
            "extra": "avg tps: 1179.6654848228811, max tps: 1194.2589388762533, count: 55253"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2657.6871502861322,
            "unit": "median tps",
            "extra": "avg tps: 2627.9576157842016, max tps: 2665.230841889005, count: 55253"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1129.1244202141486,
            "unit": "median tps",
            "extra": "avg tps: 1123.7494155493462, max tps: 1131.2995141193894, count: 55253"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 954.4386125825586,
            "unit": "median tps",
            "extra": "avg tps: 946.6214090129278, max tps: 961.5137031202765, count: 55253"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 166.78275236061492,
            "unit": "median tps",
            "extra": "avg tps: 172.59092761425396, max tps: 185.04082586872187, count: 110506"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 139.68439263128332,
            "unit": "median tps",
            "extra": "avg tps: 139.92738742805193, max tps: 145.5699189022381, count: 55253"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 86.3738342263773,
            "unit": "median tps",
            "extra": "avg tps: 99.51385357124346, max tps: 782.5191482435575, count: 55253"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "74e58071d8682e5f1a784791d82619ae41994f0b",
          "message": "fix: restore the garbage list (#3021)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:21-04:00",
          "tree_id": "3455b2de8f4efa7f45573d0f6a731fe933e7cedb",
          "url": "https://github.com/paradedb/paradedb/commit/74e58071d8682e5f1a784791d82619ae41994f0b"
        },
        "date": 1755834677131,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1183.7699925538213,
            "unit": "median tps",
            "extra": "avg tps: 1175.632495165159, max tps: 1186.3792517313213, count: 55214"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2599.70518777303,
            "unit": "median tps",
            "extra": "avg tps: 2582.569125951008, max tps: 2605.892317764122, count: 55214"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1116.0993563497086,
            "unit": "median tps",
            "extra": "avg tps: 1112.518810061035, max tps: 1162.2464606854903, count: 55214"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 943.3919745730038,
            "unit": "median tps",
            "extra": "avg tps: 935.9187703615466, max tps: 949.4924102748823, count: 55214"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 168.70337621888308,
            "unit": "median tps",
            "extra": "avg tps: 173.70696500619937, max tps: 184.23496663347967, count: 110428"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 147.2503713006154,
            "unit": "median tps",
            "extra": "avg tps: 147.06838192874156, max tps: 155.7126117606551, count: 55214"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 76.86239329040215,
            "unit": "median tps",
            "extra": "avg tps: 93.179221524388, max tps: 723.559682096818, count: 55214"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fbe8d2ee63335d61db9665e1eec916cc530f7a0",
          "message": "chore: Upgrade to `0.17.7` (#3024)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T10:27:16-04:00",
          "tree_id": "d8a53236b167b06e2b4e1beaeaf72fb424454256",
          "url": "https://github.com/paradedb/paradedb/commit/5fbe8d2ee63335d61db9665e1eec916cc530f7a0"
        },
        "date": 1755873798257,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1147.4193482160138,
            "unit": "median tps",
            "extra": "avg tps: 1144.0328617735486, max tps: 1150.6925001109025, count: 55289"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2655.10418370262,
            "unit": "median tps",
            "extra": "avg tps: 2633.208876824282, max tps: 2662.6287874981927, count: 55289"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1122.0927123453766,
            "unit": "median tps",
            "extra": "avg tps: 1118.872527493004, max tps: 1138.9626055984045, count: 55289"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 911.7084242915407,
            "unit": "median tps",
            "extra": "avg tps: 906.6129951885514, max tps: 918.4403632983459, count: 55289"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 167.82308116849168,
            "unit": "median tps",
            "extra": "avg tps: 174.84333283307652, max tps: 186.34538123593887, count: 110578"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 144.00596825122173,
            "unit": "median tps",
            "extra": "avg tps: 143.86264473146997, max tps: 145.02874648684585, count: 55289"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 67.48704131548008,
            "unit": "median tps",
            "extra": "avg tps: 71.67057249823436, max tps: 676.8665950090565, count: 55289"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755887390723,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1152.2956927865407,
            "unit": "median tps",
            "extra": "avg tps: 1145.66805343343, max tps: 1156.1129459421595, count: 55283"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2465.0848724183675,
            "unit": "median tps",
            "extra": "avg tps: 2456.1116637740624, max tps: 2469.7208482565593, count: 55283"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1147.5779294223346,
            "unit": "median tps",
            "extra": "avg tps: 1140.4031310855164, max tps: 1150.4604271661526, count: 55283"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 959.0082412914289,
            "unit": "median tps",
            "extra": "avg tps: 950.4443121281776, max tps: 965.120709893603, count: 55283"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 168.02755047940235,
            "unit": "median tps",
            "extra": "avg tps: 166.55505849679955, max tps: 169.51474302460235, count: 110566"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 153.33640621183721,
            "unit": "median tps",
            "extra": "avg tps: 152.80459677447993, max tps: 153.69576249280323, count: 55283"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 181.8651147817977,
            "unit": "median tps",
            "extra": "avg tps: 176.2703405504529, max tps: 755.6522790472736, count: 55283"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755890733316,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1155.0121223606893,
            "unit": "median tps",
            "extra": "avg tps: 1148.3681126264332, max tps: 1160.5271773194359, count: 55132"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2854.826476307806,
            "unit": "median tps",
            "extra": "avg tps: 2827.395062901955, max tps: 2869.511912589987, count: 55132"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1156.6165996831708,
            "unit": "median tps",
            "extra": "avg tps: 1151.9585460427425, max tps: 1159.9513358994466, count: 55132"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 841.3301938660834,
            "unit": "median tps",
            "extra": "avg tps: 840.3484076094701, max tps: 892.4298968011383, count: 55132"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 178.3425825321799,
            "unit": "median tps",
            "extra": "avg tps: 177.44667284455448, max tps: 179.90663128571325, count: 110264"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 167.32479946699448,
            "unit": "median tps",
            "extra": "avg tps: 166.07616870444835, max tps: 167.7146626936276, count: 55132"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 55.41639942779269,
            "unit": "median tps",
            "extra": "avg tps: 60.513654017218236, max tps: 793.9280383626028, count: 55132"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8386fa71d8c2979fb63993f4045d140aff8768fe",
          "message": "perf: optimize merging heuristics to prefer background merging (#3032)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:56-07:00",
          "tree_id": "fa86b284fe7c52c4cf1226cd910b7b9f1c0507d2",
          "url": "https://github.com/paradedb/paradedb/commit/8386fa71d8c2979fb63993f4045d140aff8768fe"
        },
        "date": 1755891835903,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1151.5381336036542,
            "unit": "median tps",
            "extra": "avg tps: 1143.9221405696278, max tps: 1153.9585109511866, count: 55056"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2686.3169892300252,
            "unit": "median tps",
            "extra": "avg tps: 2654.6156805467886, max tps: 2694.1032867202284, count: 55056"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1121.4128515983361,
            "unit": "median tps",
            "extra": "avg tps: 1116.660151310903, max tps: 1124.5406815721465, count: 55056"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 952.0613414539908,
            "unit": "median tps",
            "extra": "avg tps: 944.9964314806024, max tps: 960.7003140507661, count: 55056"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 179.1059070188253,
            "unit": "median tps",
            "extra": "avg tps: 182.90095588024388, max tps: 191.4546190367187, count: 110112"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 156.7702842366392,
            "unit": "median tps",
            "extra": "avg tps: 155.58761250509843, max tps: 158.14499749082438, count: 55056"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 101.64109344355474,
            "unit": "median tps",
            "extra": "avg tps: 116.78609082622793, max tps: 742.8520914629208, count: 55056"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "de951c94cea485c109ffc396ae394d036babb97d",
          "message": "perf: optimize merging heuristics to prefer background merging (#3033)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:53-07:00",
          "tree_id": "f489cbf34a77726e0c2bc0f7f879b77d8c93cb47",
          "url": "https://github.com/paradedb/paradedb/commit/de951c94cea485c109ffc396ae394d036babb97d"
        },
        "date": 1755891836958,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1123.5811368385716,
            "unit": "median tps",
            "extra": "avg tps: 1121.499963315783, max tps: 1125.859482370049, count: 55154"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2833.0254166088853,
            "unit": "median tps",
            "extra": "avg tps: 2790.672946776092, max tps: 2848.1634337460323, count: 55154"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1149.3780305071045,
            "unit": "median tps",
            "extra": "avg tps: 1144.8600467988426, max tps: 1152.6537993383747, count: 55154"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 959.3019548342376,
            "unit": "median tps",
            "extra": "avg tps: 954.3075118875746, max tps: 969.2988261164733, count: 55154"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 178.43619987192955,
            "unit": "median tps",
            "extra": "avg tps: 177.87185995192485, max tps: 180.02070055414592, count: 110308"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 166.07353935617647,
            "unit": "median tps",
            "extra": "avg tps: 164.3389771270807, max tps: 167.0658896228587, count: 55154"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 69.33050260807563,
            "unit": "median tps",
            "extra": "avg tps: 81.76698570752066, max tps: 729.4776064964358, count: 55154"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a556c28327e5b7ca9b5196f4153d49bca00c90a6",
          "message": "chore: Upgrade to `0.17.18` (#3034)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T15:36:02-04:00",
          "tree_id": "9de75b3b13ca610745c645ca4046bddf6fe9eec4",
          "url": "https://github.com/paradedb/paradedb/commit/a556c28327e5b7ca9b5196f4153d49bca00c90a6"
        },
        "date": 1755892329254,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1104.6124409236872,
            "unit": "median tps",
            "extra": "avg tps: 1098.789326079968, max tps: 1109.5123892912777, count: 55205"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2643.5302401531094,
            "unit": "median tps",
            "extra": "avg tps: 2618.898755230589, max tps: 2655.848286421532, count: 55205"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1159.060121502336,
            "unit": "median tps",
            "extra": "avg tps: 1152.714322783695, max tps: 1164.9215594214227, count: 55205"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 937.207566546857,
            "unit": "median tps",
            "extra": "avg tps: 932.2747465385436, max tps: 950.7467124184567, count: 55205"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 176.28210130886572,
            "unit": "median tps",
            "extra": "avg tps: 183.07913158355672, max tps: 194.82578386056227, count: 110410"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 156.11559252503227,
            "unit": "median tps",
            "extra": "avg tps: 155.70040247961373, max tps: 156.90258377890964, count: 55205"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 58.606445860219445,
            "unit": "median tps",
            "extra": "avg tps: 57.68914553783416, max tps: 751.2154666249992, count: 55205"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cad75ef84c3942edd137497c4b6864b384a3655",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3037)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-24T13:29:07-04:00",
          "tree_id": "d76d1a8d15e8ca4d61db683033627e7bf4ec476d",
          "url": "https://github.com/paradedb/paradedb/commit/0cad75ef84c3942edd137497c4b6864b384a3655"
        },
        "date": 1756057510269,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1091.3089447116186,
            "unit": "median tps",
            "extra": "avg tps: 1089.3194308784002, max tps: 1094.35553198641, count: 55272"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2855.349408776735,
            "unit": "median tps",
            "extra": "avg tps: 2808.9805493081576, max tps: 2872.116905898296, count: 55272"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1173.1353447389452,
            "unit": "median tps",
            "extra": "avg tps: 1165.9781370581838, max tps: 1180.2873307803327, count: 55272"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 977.4238554121233,
            "unit": "median tps",
            "extra": "avg tps: 970.3340042748263, max tps: 987.5600908615886, count: 55272"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 162.78866379011959,
            "unit": "median tps",
            "extra": "avg tps: 162.5982143568867, max tps: 164.90386942552027, count: 110544"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 144.35615495598807,
            "unit": "median tps",
            "extra": "avg tps: 144.35725995581254, max tps: 145.9244028318527, count: 55272"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 40.82734057873256,
            "unit": "median tps",
            "extra": "avg tps: 47.02906381383853, max tps: 755.2236934818909, count: 55272"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6832efa7662fee49675d88dd2ceecb31dfffdd45",
          "message": "chore: Upgrade to `0.17.9` (#3041)",
          "timestamp": "2025-08-24T13:40:28-04:00",
          "tree_id": "4b3ff40f76aaaa9a2242a4bee88214604e92587a",
          "url": "https://github.com/paradedb/paradedb/commit/6832efa7662fee49675d88dd2ceecb31dfffdd45"
        },
        "date": 1756058190150,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1156.8721922839668,
            "unit": "median tps",
            "extra": "avg tps: 1150.8442890806518, max tps: 1161.013078580355, count: 55271"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2596.9196280700085,
            "unit": "median tps",
            "extra": "avg tps: 2584.977904634891, max tps: 2603.30336355734, count: 55271"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1155.7358342685557,
            "unit": "median tps",
            "extra": "avg tps: 1148.9034391708783, max tps: 1159.795500887032, count: 55271"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 964.0417870982945,
            "unit": "median tps",
            "extra": "avg tps: 953.6742240474941, max tps: 970.4210261975232, count: 55271"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 175.9085645247319,
            "unit": "median tps",
            "extra": "avg tps: 177.91713765344235, max tps: 183.9801403262981, count: 110542"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 153.5271786629015,
            "unit": "median tps",
            "extra": "avg tps: 152.29090594364388, max tps: 154.6829434378801, count: 55271"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 59.88747149429553,
            "unit": "median tps",
            "extra": "avg tps: 65.5500892050404, max tps: 784.5801750712202, count: 55271"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b08446356edfe8faed3798c0521304b8789d3e5",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3040)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:13-04:00",
          "tree_id": "1335b21c3132607da548eff65e5a684aa86ebecf",
          "url": "https://github.com/paradedb/paradedb/commit/4b08446356edfe8faed3798c0521304b8789d3e5"
        },
        "date": 1756058538356,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1161.1935255388967,
            "unit": "median tps",
            "extra": "avg tps: 1154.2916723341584, max tps: 1163.258645389186, count: 55243"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2504.293401375749,
            "unit": "median tps",
            "extra": "avg tps: 2492.5776824309983, max tps: 2596.17854219675, count: 55243"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1161.594316650474,
            "unit": "median tps",
            "extra": "avg tps: 1154.6082087497612, max tps: 1164.5224783960593, count: 55243"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 874.8188835822835,
            "unit": "median tps",
            "extra": "avg tps: 874.705631408101, max tps: 894.2258186515871, count: 55243"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 174.53840015027146,
            "unit": "median tps",
            "extra": "avg tps: 173.50799298576914, max tps: 175.3928907892119, count: 110486"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 157.89336795702442,
            "unit": "median tps",
            "extra": "avg tps: 155.92944973100995, max tps: 159.68393080093202, count: 55243"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 91.15405195220752,
            "unit": "median tps",
            "extra": "avg tps: 91.44762936245895, max tps: 721.9309631858524, count: 55243"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "30a6611e0400569e914fd4b6a05437add41330c9",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3039)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:19-04:00",
          "tree_id": "d9cb66392591c4d960645870ca1a913b68494028",
          "url": "https://github.com/paradedb/paradedb/commit/30a6611e0400569e914fd4b6a05437add41330c9"
        },
        "date": 1756058540534,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1058.737047714144,
            "unit": "median tps",
            "extra": "avg tps: 1059.8396094755565, max tps: 1132.8923077696395, count: 55344"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2821.3985199089084,
            "unit": "median tps",
            "extra": "avg tps: 2788.7148566710316, max tps: 2841.545144874957, count: 55344"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1182.109467517143,
            "unit": "median tps",
            "extra": "avg tps: 1173.9092270195752, max tps: 1184.9342388981363, count: 55344"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 995.1555708464607,
            "unit": "median tps",
            "extra": "avg tps: 985.5002521822523, max tps: 1001.8698344347343, count: 55344"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 164.98112600108044,
            "unit": "median tps",
            "extra": "avg tps: 164.50393251919627, max tps: 168.03209083893077, count: 110688"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 146.348097612804,
            "unit": "median tps",
            "extra": "avg tps: 146.20334565899483, max tps: 149.43688492537024, count: 55344"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 57.13400808258307,
            "unit": "median tps",
            "extra": "avg tps: 71.78800166939506, max tps: 819.8233280728003, count: 55344"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756145824658,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1180.53937834234,
            "unit": "median tps",
            "extra": "avg tps: 1172.0373303038589, max tps: 1184.0496669959218, count: 55276"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2786.4716145751436,
            "unit": "median tps",
            "extra": "avg tps: 2754.3372935697785, max tps: 2808.3131873581074, count: 55276"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1091.2490055115122,
            "unit": "median tps",
            "extra": "avg tps: 1090.2208102961472, max tps: 1098.961558742776, count: 55276"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 944.2535365643239,
            "unit": "median tps",
            "extra": "avg tps: 936.322407892788, max tps: 951.60297564677, count: 55276"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 171.04081466627585,
            "unit": "median tps",
            "extra": "avg tps: 170.07097617020054, max tps: 172.5068531680193, count: 110552"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 155.05141444106388,
            "unit": "median tps",
            "extra": "avg tps: 154.85293308141624, max tps: 157.9328776340067, count: 55276"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 153.52967245702723,
            "unit": "median tps",
            "extra": "avg tps: 142.46722028036191, max tps: 789.5582500546769, count: 55276"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756148133517,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1168.1977169059387,
            "unit": "median tps",
            "extra": "avg tps: 1159.787588015988, max tps: 1171.9235926043305, count: 55234"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2669.1488202321766,
            "unit": "median tps",
            "extra": "avg tps: 2634.708751840871, max tps: 2687.1557491795907, count: 55234"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1116.9388213559314,
            "unit": "median tps",
            "extra": "avg tps: 1111.219490848629, max tps: 1121.9980619790483, count: 55234"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 940.9289743280827,
            "unit": "median tps",
            "extra": "avg tps: 929.9882520278275, max tps: 947.7285962739277, count: 55234"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 174.656408765075,
            "unit": "median tps",
            "extra": "avg tps: 177.51291229276023, max tps: 185.75982503366737, count: 110468"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 154.140667098449,
            "unit": "median tps",
            "extra": "avg tps: 153.28458527138744, max tps: 154.62039399530994, count: 55234"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 70.77236006449408,
            "unit": "median tps",
            "extra": "avg tps: 93.41148935087607, max tps: 754.0329452074419, count: 55234"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756159041970,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1175.671625796261,
            "unit": "median tps",
            "extra": "avg tps: 1166.1653610349877, max tps: 1179.0137412116198, count: 55233"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2690.1735305839625,
            "unit": "median tps",
            "extra": "avg tps: 2667.7861529383067, max tps: 2700.858345635202, count: 55233"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1150.2880659316017,
            "unit": "median tps",
            "extra": "avg tps: 1145.5376355365645, max tps: 1151.9868317515618, count: 55233"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 936.7643634428297,
            "unit": "median tps",
            "extra": "avg tps: 930.7493856648866, max tps: 946.85978305823, count: 55233"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 174.3043655849446,
            "unit": "median tps",
            "extra": "avg tps: 178.81800943522484, max tps: 186.94230873848792, count: 110466"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 152.83208654902668,
            "unit": "median tps",
            "extra": "avg tps: 152.34755768967446, max tps: 153.08282003480525, count: 55233"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 56.929552633929056,
            "unit": "median tps",
            "extra": "avg tps: 57.75345228506003, max tps: 808.5970033395056, count: 55233"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756162868994,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1168.228383465455,
            "unit": "median tps",
            "extra": "avg tps: 1163.5281806262205, max tps: 1169.559517104538, count: 55264"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2588.3976806923874,
            "unit": "median tps",
            "extra": "avg tps: 2586.5530185606535, max tps: 2640.8569034259576, count: 55264"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1122.233469462481,
            "unit": "median tps",
            "extra": "avg tps: 1123.8513443578372, max tps: 1139.527684143297, count: 55264"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 968.5065142604474,
            "unit": "median tps",
            "extra": "avg tps: 964.1657171230022, max tps: 979.0595917778477, count: 55264"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 172.94842757316758,
            "unit": "median tps",
            "extra": "avg tps: 178.60783540783194, max tps: 190.64858522762782, count: 110528"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 149.81222770590028,
            "unit": "median tps",
            "extra": "avg tps: 150.12368164166585, max tps: 153.6172313895425, count: 55264"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 109.8931517795503,
            "unit": "median tps",
            "extra": "avg tps: 112.5660002988138, max tps: 738.9355485635832, count: 55264"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756165930680,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1123.373798304603,
            "unit": "median tps",
            "extra": "avg tps: 1124.092083860286, max tps: 1140.424352409175, count: 55267"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2730.303154348434,
            "unit": "median tps",
            "extra": "avg tps: 2691.5746281861816, max tps: 2751.2824361182707, count: 55267"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1170.829413969577,
            "unit": "median tps",
            "extra": "avg tps: 1162.9700570015061, max tps: 1173.6986284300838, count: 55267"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 938.6328462402913,
            "unit": "median tps",
            "extra": "avg tps: 933.221430517936, max tps: 948.301765139574, count: 55267"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 167.2700571612673,
            "unit": "median tps",
            "extra": "avg tps: 166.975081419048, max tps: 169.20793613169783, count: 110534"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 169.36394937501808,
            "unit": "median tps",
            "extra": "avg tps: 167.7533143574427, max tps: 170.12453068012525, count: 55267"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 73.22310282447394,
            "unit": "median tps",
            "extra": "avg tps: 74.87545256599688, max tps: 795.7190316099385, count: 55267"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756231972065,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1143.3310257879411,
            "unit": "median tps",
            "extra": "avg tps: 1139.5487831185958, max tps: 1146.80008196794, count: 55172"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2728.528229922935,
            "unit": "median tps",
            "extra": "avg tps: 2703.314140210478, max tps: 2739.546687954599, count: 55172"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1177.4368749306855,
            "unit": "median tps",
            "extra": "avg tps: 1171.8063265639723, max tps: 1180.2580254200504, count: 55172"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 970.9247259472664,
            "unit": "median tps",
            "extra": "avg tps: 967.0110946397077, max tps: 973.1490150028368, count: 55172"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 174.2927974590004,
            "unit": "median tps",
            "extra": "avg tps: 178.33792681494606, max tps: 185.98659671803517, count: 110344"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 150.95699397703356,
            "unit": "median tps",
            "extra": "avg tps: 149.38971440410916, max tps: 151.62631808240343, count: 55172"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 48.61121735575934,
            "unit": "median tps",
            "extra": "avg tps: 46.82267395322641, max tps: 737.9169784365901, count: 55172"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756383994918,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1138.0771525675761,
            "unit": "median tps",
            "extra": "avg tps: 1133.648865550934, max tps: 1142.0951257427134, count: 55272"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2682.748313492288,
            "unit": "median tps",
            "extra": "avg tps: 2665.766480095113, max tps: 2687.154088182383, count: 55272"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1129.971356138919,
            "unit": "median tps",
            "extra": "avg tps: 1123.9357136054555, max tps: 1131.5902317403604, count: 55272"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 973.202410784065,
            "unit": "median tps",
            "extra": "avg tps: 965.7687681252771, max tps: 977.663074354861, count: 55272"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 178.46265405673128,
            "unit": "median tps",
            "extra": "avg tps: 185.60020897827175, max tps: 197.74901462611098, count: 110544"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 157.5795274915576,
            "unit": "median tps",
            "extra": "avg tps: 156.84475915915797, max tps: 158.48024328066572, count: 55272"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 65.80196195257116,
            "unit": "median tps",
            "extra": "avg tps: 74.09595575990276, max tps: 750.8358680300845, count: 55272"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d07151262ede5e5ecc0e93262c1ecba5980e324d",
          "message": "perf: reduce FSM locking overhead (#3057)\n\n## What\n\nThis reduces locking overhead in the FSM by holding exclusive locks for\nmuch less time\n\n## Why\n\nTo reduce contention between concurrent writers, which includes the\nbackground merger.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T09:59:34-04:00",
          "tree_id": "2099e3e181b1c97c09a02cab28e7d4f2b880946a",
          "url": "https://github.com/paradedb/paradedb/commit/d07151262ede5e5ecc0e93262c1ecba5980e324d"
        },
        "date": 1756390539034,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1098.9006426141966,
            "unit": "median tps",
            "extra": "avg tps: 1101.1812246728796, max tps: 1117.9937269005427, count: 55305"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2506.8331553326607,
            "unit": "median tps",
            "extra": "avg tps: 2509.492979710388, max tps: 2604.276588841021, count: 55305"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1107.4183689470058,
            "unit": "median tps",
            "extra": "avg tps: 1104.0911374585246, max tps: 1134.4869726520308, count: 55305"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 936.9034048238085,
            "unit": "median tps",
            "extra": "avg tps: 933.1147805203178, max tps: 948.6337687289864, count: 55305"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 174.33358483037972,
            "unit": "median tps",
            "extra": "avg tps: 184.42505100752703, max tps: 205.52966657928994, count: 110610"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 153.09504725173878,
            "unit": "median tps",
            "extra": "avg tps: 153.54533823808805, max tps: 156.59407708479878, count: 55305"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 156.94797225189393,
            "unit": "median tps",
            "extra": "avg tps: 144.6725222140362, max tps: 780.282571530454, count: 55305"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756401658545,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1120.528250055737,
            "unit": "median tps",
            "extra": "avg tps: 1119.7774351603566, max tps: 1144.5731561843795, count: 55180"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2578.3136603006037,
            "unit": "median tps",
            "extra": "avg tps: 2561.6956574272285, max tps: 2582.4736046268695, count: 55180"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1174.2405821036073,
            "unit": "median tps",
            "extra": "avg tps: 1169.1917049668184, max tps: 1179.1845997474393, count: 55180"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 925.3727228754751,
            "unit": "median tps",
            "extra": "avg tps: 926.2749336729212, max tps: 944.372820761344, count: 55180"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 165.69783114421045,
            "unit": "median tps",
            "extra": "avg tps: 175.66162597019067, max tps: 189.49837712907535, count: 110360"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 147.72311234811298,
            "unit": "median tps",
            "extra": "avg tps: 147.53908911294346, max tps: 148.18476628026997, count: 55180"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 89.75232898841321,
            "unit": "median tps",
            "extra": "avg tps: 90.54459902943915, max tps: 754.4840875533514, count: 55180"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756403833704,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1104.183786522377,
            "unit": "median tps",
            "extra": "avg tps: 1100.8864515228702, max tps: 1127.3598187580817, count: 54783"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2554.5014882636865,
            "unit": "median tps",
            "extra": "avg tps: 2545.317047872536, max tps: 2567.0912277358566, count: 54783"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1079.8565992853032,
            "unit": "median tps",
            "extra": "avg tps: 1078.7010044490107, max tps: 1136.930041914108, count: 54783"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 913.7025280289864,
            "unit": "median tps",
            "extra": "avg tps: 904.693960379374, max tps: 928.1955369695065, count: 54783"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 159.91429371832962,
            "unit": "median tps",
            "extra": "avg tps: 173.28956745209672, max tps: 194.37554556447685, count: 109566"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 140.05045389670738,
            "unit": "median tps",
            "extra": "avg tps: 140.02437970678017, max tps: 152.17794262039365, count: 54783"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 187.8113289353017,
            "unit": "median tps",
            "extra": "avg tps: 193.9941980118564, max tps: 611.8165015475898, count: 54783"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d65f5c43ee40361ad10196c908a03c9354f2fa60",
          "message": "perf: reduce FSM locking overhead (#3064)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:54:33-04:00",
          "tree_id": "d074524cf9ed1c6904d28f24fde76ec679ca4377",
          "url": "https://github.com/paradedb/paradedb/commit/d65f5c43ee40361ad10196c908a03c9354f2fa60"
        },
        "date": 1756404633752,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1124.6477637481123,
            "unit": "median tps",
            "extra": "avg tps: 1119.9442969250429, max tps: 1126.9016167926056, count: 55241"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2557.3301475902963,
            "unit": "median tps",
            "extra": "avg tps: 2541.5737530021347, max tps: 2568.3846505159836, count: 55241"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1168.9333988086328,
            "unit": "median tps",
            "extra": "avg tps: 1163.792906264576, max tps: 1175.5186219533084, count: 55241"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 960.9099049839778,
            "unit": "median tps",
            "extra": "avg tps: 955.2331535352713, max tps: 966.1783317654715, count: 55241"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 167.3644654507636,
            "unit": "median tps",
            "extra": "avg tps: 174.85765326882202, max tps: 186.84615060779282, count: 110482"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 147.8447591994954,
            "unit": "median tps",
            "extra": "avg tps: 147.69537791276778, max tps: 149.03998448962173, count: 55241"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 125.01962926122448,
            "unit": "median tps",
            "extra": "avg tps: 135.28730132199007, max tps: 722.5887754504798, count: 55241"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b8b0d97394127399178609bf91da6b2863e49215",
          "message": "perf: reduce FSM locking overhead (#3065)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:54:44-04:00",
          "tree_id": "bcad7e056ec431e8db31669a7e50687441f9bf27",
          "url": "https://github.com/paradedb/paradedb/commit/b8b0d97394127399178609bf91da6b2863e49215"
        },
        "date": 1756404641934,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1170.8314545601393,
            "unit": "median tps",
            "extra": "avg tps: 1164.2781122302638, max tps: 1173.9161778627454, count: 55194"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2581.9829726529856,
            "unit": "median tps",
            "extra": "avg tps: 2566.9381579907194, max tps: 2586.8604475628586, count: 55194"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1115.2192588405655,
            "unit": "median tps",
            "extra": "avg tps: 1112.8434886151392, max tps: 1118.5828224278507, count: 55194"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 915.2752603437748,
            "unit": "median tps",
            "extra": "avg tps: 914.2606096939405, max tps: 926.2380362024139, count: 55194"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 172.57958255267735,
            "unit": "median tps",
            "extra": "avg tps: 175.45445373887173, max tps: 183.0420652262014, count: 110388"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 152.887072417507,
            "unit": "median tps",
            "extra": "avg tps: 152.3265406149125, max tps: 153.33671316469935, count: 55194"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 43.064667561927756,
            "unit": "median tps",
            "extra": "avg tps: 59.36120326704851, max tps: 725.9828537369605, count: 55194"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c855dfb258ec639bd1222422c2e8bb643b078595",
          "message": "chore: port fsm fixes from main (#3066)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T14:33:57-04:00",
          "tree_id": "69579b5c91c399fa6e0ad47835a2f2cd3e4262d4",
          "url": "https://github.com/paradedb/paradedb/commit/c855dfb258ec639bd1222422c2e8bb643b078595"
        },
        "date": 1756407000701,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1138.1109596369472,
            "unit": "median tps",
            "extra": "avg tps: 1137.461179665538, max tps: 1144.6634611885563, count: 54957"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2819.873029547422,
            "unit": "median tps",
            "extra": "avg tps: 2780.5936084846307, max tps: 2827.2197881871407, count: 54957"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1138.4383345490412,
            "unit": "median tps",
            "extra": "avg tps: 1133.124565000176, max tps: 1143.0847174821952, count: 54957"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 962.7282213492625,
            "unit": "median tps",
            "extra": "avg tps: 957.2862291892669, max tps: 971.8713300440309, count: 54957"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 175.78412680213813,
            "unit": "median tps",
            "extra": "avg tps: 174.46698857965646, max tps: 176.50503690491053, count: 109914"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 150.4253251125187,
            "unit": "median tps",
            "extra": "avg tps: 149.9782982844231, max tps: 150.88635783714156, count: 54957"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 58.582160737172714,
            "unit": "median tps",
            "extra": "avg tps: 60.19477436834949, max tps: 812.2401339221533, count: 54957"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cdb42e60af376301ed1f4bd1a82b0c57ddf3ddd",
          "message": "chore: port fsm fixes from main (#3067)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T14:34:07-04:00",
          "tree_id": "be42eb2d06c35ac0504605a5eafbcf3c221aa4d1",
          "url": "https://github.com/paradedb/paradedb/commit/0cdb42e60af376301ed1f4bd1a82b0c57ddf3ddd"
        },
        "date": 1756407003497,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1142.1096439103922,
            "unit": "median tps",
            "extra": "avg tps: 1139.5203613769695, max tps: 1146.0037278139373, count: 55224"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2696.5366269570027,
            "unit": "median tps",
            "extra": "avg tps: 2668.944579208584, max tps: 2713.009880271888, count: 55224"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1153.433565636507,
            "unit": "median tps",
            "extra": "avg tps: 1149.4114680612336, max tps: 1159.755795791067, count: 55224"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 943.2156185326365,
            "unit": "median tps",
            "extra": "avg tps: 937.9554743096274, max tps: 951.8181387219328, count: 55224"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 171.4152366848338,
            "unit": "median tps",
            "extra": "avg tps: 175.99437291327277, max tps: 185.30902792287543, count: 110448"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 151.13057036964207,
            "unit": "median tps",
            "extra": "avg tps: 150.0845548256678, max tps: 151.4060527901786, count: 55224"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 160.68995996729404,
            "unit": "median tps",
            "extra": "avg tps: 150.6395418068354, max tps: 825.4904858094059, count: 55224"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756417092084,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1145.83398533694,
            "unit": "median tps",
            "extra": "avg tps: 1140.7479975005554, max tps: 1150.5745946034526, count: 55232"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2525.821704428377,
            "unit": "median tps",
            "extra": "avg tps: 2511.4640290098077, max tps: 2532.071628452687, count: 55232"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1158.0687593076427,
            "unit": "median tps",
            "extra": "avg tps: 1149.6477303584052, max tps: 1161.3728705385204, count: 55232"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 948.3071837195771,
            "unit": "median tps",
            "extra": "avg tps: 934.5111758886658, max tps: 958.9267142731702, count: 55232"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 171.79125343515943,
            "unit": "median tps",
            "extra": "avg tps: 172.82014411477743, max tps: 179.97029503523424, count: 110464"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 148.9852012455134,
            "unit": "median tps",
            "extra": "avg tps: 148.78141025201774, max tps: 152.59150923657918, count: 55232"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 142.28660372361355,
            "unit": "median tps",
            "extra": "avg tps: 138.44588057703595, max tps: 715.0278110067092, count: 55232"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d70001434e70a168f4f15f2cfb94fe9b0ed7f795",
          "message": "fix: conversion error from non-string JSON group-by columns (#3068)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-28T15:34:32-07:00",
          "tree_id": "4abbfc76f80876cfcf0ab2d87f9a1d991a7e8d8b",
          "url": "https://github.com/paradedb/paradedb/commit/d70001434e70a168f4f15f2cfb94fe9b0ed7f795"
        },
        "date": 1756421429037,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1171.3391803468278,
            "unit": "median tps",
            "extra": "avg tps: 1167.608912220063, max tps: 1173.72654396861, count: 55154"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2642.8542727848208,
            "unit": "median tps",
            "extra": "avg tps: 2617.057160674794, max tps: 2647.9588088296214, count: 55154"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1137.5082340544627,
            "unit": "median tps",
            "extra": "avg tps: 1131.3422013924983, max tps: 1139.7263755804875, count: 55154"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 948.3556157686039,
            "unit": "median tps",
            "extra": "avg tps: 941.4489116289533, max tps: 953.8172649383163, count: 55154"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 172.5944335587742,
            "unit": "median tps",
            "extra": "avg tps: 176.57499100076384, max tps: 184.11032608275423, count: 110308"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 148.60500637198163,
            "unit": "median tps",
            "extra": "avg tps: 147.2584065535011, max tps: 149.9951179116056, count: 55154"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 67.42452723396414,
            "unit": "median tps",
            "extra": "avg tps: 67.20993151726047, max tps: 786.9702902976007, count: 55154"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7154182905899829813b2117801117008d59af8b",
          "message": "feat: heap filter pushdown works with sub-queries (#3046)\n\n# Ticket(s) Closed\n\n- Closes #3043\n\n## What\n\nImplements subquery support for `paradedb.enable_filter_pushdown` by\nsetting up PostgreSQL expression contexts with subplan infrastructure,\nallowing heap filter expressions containing subqueries to execute\ncorrectly.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. Previously, `HeapFieldFilter` used\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries were present.\n\n## How\n\nImplemented subquery support via expression context setup:\n\n1. Added thread-local storage for runtime expression context and\nplanstate\n2. Modified `begin_custom_scan` to always create an expression context\nwith `ExecAssignExprContext()` that supports subplans\n3. Improved `HeapFieldFilter` to:\n   - Use runtime expression context when available\n   - Initialize expressions with planstate for subquery support\n   - Reinitialize expressions when a better planstate becomes available\n4. Set runtime context in `exec_custom_scan` and clear it in\n`end_custom_scan`\n\nThis provides subquery support while maintaining the performance\nbenefits of heap filter pushdown for simple expressions.\n\n## Tests\n\n- Test cases 19.1 and 19.2 with complex subqueries now execute\nsuccessfully\n- No system crashes when `enable_filter_pushdown` encounters subqueries\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-29T04:17:39-07:00",
          "tree_id": "7b29d5dccfebfb2b79fd199ffe496075ed495153",
          "url": "https://github.com/paradedb/paradedb/commit/7154182905899829813b2117801117008d59af8b"
        },
        "date": 1756467214869,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1192.1327641765877,
            "unit": "median tps",
            "extra": "avg tps: 1183.768015306244, max tps: 1197.6237612010152, count: 55226"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2892.352378527564,
            "unit": "median tps",
            "extra": "avg tps: 2859.120481509883, max tps: 2906.3277917367705, count: 55226"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1176.0585916684306,
            "unit": "median tps",
            "extra": "avg tps: 1167.4620730566503, max tps: 1180.0392187507866, count: 55226"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 998.8477531931178,
            "unit": "median tps",
            "extra": "avg tps: 992.0182428069888, max tps: 1007.8125935459248, count: 55226"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 165.45994848033925,
            "unit": "median tps",
            "extra": "avg tps: 164.90526937762502, max tps: 166.64295882358448, count: 110452"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 147.98434797195995,
            "unit": "median tps",
            "extra": "avg tps: 147.8842297454935, max tps: 152.72965561010597, count: 55226"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 70.94972819366066,
            "unit": "median tps",
            "extra": "avg tps: 91.3393100167709, max tps: 918.8651280576386, count: 55226"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce0fc0ba98917d4c8bac6d5559795e36f8bf97bf",
          "message": "feat: heap filter pushdown works with sub-queries (#3070)\n\n# Ticket(s) Closed\n\n- Closes #3043\n\n## What\n\nImplements subquery support for `paradedb.enable_filter_pushdown` by\nsetting up PostgreSQL expression contexts with subplan infrastructure,\nallowing heap filter expressions containing subqueries to execute\ncorrectly.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. Previously, `HeapFieldFilter` used\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries were present.\n\n## How\n\nImplemented subquery support via expression context setup:\n\n1. Added thread-local storage for runtime expression context and\nplanstate\n2. Modified `begin_custom_scan` to always create an expression context\nwith `ExecAssignExprContext()` that supports subplans\n3. Improved `HeapFieldFilter` to:\n   - Use runtime expression context when available\n   - Initialize expressions with planstate for subquery support\n   - Reinitialize expressions when a better planstate becomes available\n4. Set runtime context in `exec_custom_scan` and clear it in\n`end_custom_scan`\n\nThis provides subquery support while maintaining the performance\nbenefits of heap filter pushdown for simple expressions.\n\n## Tests\n\n- Test cases 19.1 and 19.2 with complex subqueries now execute\nsuccessfully\n- No system crashes when `enable_filter_pushdown` encounters subqueries\n\nCo-authored-by: Moe <mdashti@gmail.com>\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-29T08:22:16-07:00",
          "tree_id": "732f60b60f88cdf8e7f2a624cce8cf47e7b0661f",
          "url": "https://github.com/paradedb/paradedb/commit/ce0fc0ba98917d4c8bac6d5559795e36f8bf97bf"
        },
        "date": 1756481896085,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1098.1175649256,
            "unit": "median tps",
            "extra": "avg tps: 1097.396586262082, max tps: 1130.3887563528237, count: 55146"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2464.337632894893,
            "unit": "median tps",
            "extra": "avg tps: 2455.871335885731, max tps: 2581.413813470645, count: 55146"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1181.9749524691097,
            "unit": "median tps",
            "extra": "avg tps: 1173.703500168572, max tps: 1189.0605584294626, count: 55146"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 915.1519352674397,
            "unit": "median tps",
            "extra": "avg tps: 907.3215315639212, max tps: 920.0185071476803, count: 55146"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 158.65509625305367,
            "unit": "median tps",
            "extra": "avg tps: 158.2240816298017, max tps: 169.22652468239886, count: 110292"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 140.0743007375549,
            "unit": "median tps",
            "extra": "avg tps: 139.5732368421469, max tps: 151.81230897716839, count: 55146"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 45.95885017375911,
            "unit": "median tps",
            "extra": "avg tps: 51.57889704364518, max tps: 737.5806175614995, count: 55146"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ee69a6c03a7138668d2427a24a518896de28842d",
          "message": "fix: don't include target_segment_count in background_layer_sizes (#3073)\n\n## What\n\nThis removes the (sneaky) addition of an \"average layer size\" based on\nthe configured `target_segment_count` into the list of\n`background_layer_sizes`.\n\nThe reason we're removing this is that when this happens on an existing,\nlarge, unbalanced index, it will cause essentially the entire index to\nbe merged in the background, and that's almost never what one would want\nin a production setting.\n\n## Why\n\nLooking to improve operational problems.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-29T15:18:32-04:00",
          "tree_id": "a66bf0aecc9fbeb00bcdae8c4ce8859b0dc76376",
          "url": "https://github.com/paradedb/paradedb/commit/ee69a6c03a7138668d2427a24a518896de28842d"
        },
        "date": 1756496076548,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1158.2513389040266,
            "unit": "median tps",
            "extra": "avg tps: 1153.8692575222506, max tps: 1162.1351514466364, count: 55284"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2837.467208360682,
            "unit": "median tps",
            "extra": "avg tps: 2809.2021370689963, max tps: 2845.8499164142913, count: 55284"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1151.5995401051255,
            "unit": "median tps",
            "extra": "avg tps: 1146.5100230748608, max tps: 1155.9466769755927, count: 55284"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 967.216787665301,
            "unit": "median tps",
            "extra": "avg tps: 956.8563114935514, max tps: 973.8001513037931, count: 55284"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 185.8007569267267,
            "unit": "median tps",
            "extra": "avg tps: 184.8738588194068, max tps: 187.05073234505184, count: 110568"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 159.82748072528474,
            "unit": "median tps",
            "extra": "avg tps: 158.67712997598113, max tps: 160.97560298119146, count: 55284"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 98.09266899711265,
            "unit": "median tps",
            "extra": "avg tps: 109.30740282094703, max tps: 846.4418968424332, count: 55284"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e38c1e286700d77433f203f511db37c06e5232d2",
          "message": "fix: don't include target_segment_count in background_layer_sizes (#3076)\n\n## What\n\nThis removes the (sneaky) addition of an \"average layer size\" based on\nthe configured `target_segment_count` into the list of\n`background_layer_sizes`.\n\nThe reason we're removing this is that when this happens on an existing,\nlarge, unbalanced index, it will cause essentially the entire index to\nbe merged in the background, and that's almost never what one would want\nin a production setting.\n\n## Why\n\nLooking to improve operational problems.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-29T13:41:41-07:00",
          "tree_id": "612afe926217ff65d05dece7911ab8592cb99695",
          "url": "https://github.com/paradedb/paradedb/commit/e38c1e286700d77433f203f511db37c06e5232d2"
        },
        "date": 1756501064052,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1110.040525713989,
            "unit": "median tps",
            "extra": "avg tps: 1107.370885037298, max tps: 1119.1854762770342, count: 55217"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2815.844839170666,
            "unit": "median tps",
            "extra": "avg tps: 2781.475402886161, max tps: 2829.9113396967373, count: 55217"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1151.4686210000768,
            "unit": "median tps",
            "extra": "avg tps: 1144.798690452602, max tps: 1158.289193953749, count: 55217"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 928.7868566506426,
            "unit": "median tps",
            "extra": "avg tps: 922.8157951216868, max tps: 938.8992720494201, count: 55217"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 179.93315783980202,
            "unit": "median tps",
            "extra": "avg tps: 178.83758048788226, max tps: 181.03988672291075, count: 110434"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 170.3377976546021,
            "unit": "median tps",
            "extra": "avg tps: 168.4884344049909, max tps: 171.34923502035582, count: 55217"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 231.1060777018286,
            "unit": "median tps",
            "extra": "avg tps: 193.97606289097806, max tps: 1065.1532968624845, count: 55217"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "843745590ada545bde4f761e2ee89cfa8fc47ff0",
          "message": "fix: don't include target_segment_count in background_layer_sizes (#3075)\n\n## What\n\nThis removes the (sneaky) addition of an \"average layer size\" based on\nthe configured `target_segment_count` into the list of\n`background_layer_sizes`.\n\nThe reason we're removing this is that when this happens on an existing,\nlarge, unbalanced index, it will cause essentially the entire index to\nbe merged in the background, and that's almost never what one would want\nin a production setting.\n\n## Why\n\nLooking to improve operational problems.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-29T13:42:40-07:00",
          "tree_id": "ca5049b6aa5789ad5e20c72a1f12a1050bae393f",
          "url": "https://github.com/paradedb/paradedb/commit/843745590ada545bde4f761e2ee89cfa8fc47ff0"
        },
        "date": 1756501121632,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1152.2821745766614,
            "unit": "median tps",
            "extra": "avg tps: 1148.518866324016, max tps: 1154.7913993262928, count: 55144"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2651.7669748003027,
            "unit": "median tps",
            "extra": "avg tps: 2625.7081281905253, max tps: 2659.42367554638, count: 55144"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1143.7220942592603,
            "unit": "median tps",
            "extra": "avg tps: 1140.5893087213742, max tps: 1145.8697191013955, count: 55144"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 953.7115604641026,
            "unit": "median tps",
            "extra": "avg tps: 949.5603829664846, max tps: 958.4567625544862, count: 55144"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 187.84237135503884,
            "unit": "median tps",
            "extra": "avg tps: 187.00372528191264, max tps: 189.2801399383251, count: 110288"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 163.86186917743882,
            "unit": "median tps",
            "extra": "avg tps: 162.43082069532394, max tps: 164.52009351237598, count: 55144"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 83.97109627931285,
            "unit": "median tps",
            "extra": "avg tps: 82.97865276475811, max tps: 802.1285282625977, count: 55144"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "04fe0ea8742b0b37ee31b6492b707cac443275e0",
          "message": "perf: update tantivy dependency (#3081)\n\n## What\n\nUpdate our tantivy dependency to pick (mostly pg_search-specific)\noptimizations made in https://github.com/paradedb/tantivy/pull/60\n\nThis will be cherry-picked to v0.18.x. A different PR will be for 0.17.x\nas our tantivy timeline has forked.\n\n## Why\n\nThis drastically improves INSERT/UPDATE performance for single-row\n\"atomic updates\", especially if the connection doing it is\npersistent/long-lived.\n\n## How\n\n## Tests\n\nAll existing tests pass.",
          "timestamp": "2025-08-31T16:56:04-04:00",
          "tree_id": "494ef38e19163e5af49456cbcec5cbd290c6205a",
          "url": "https://github.com/paradedb/paradedb/commit/04fe0ea8742b0b37ee31b6492b707cac443275e0"
        },
        "date": 1756674822406,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1174.0405460459026,
            "unit": "median tps",
            "extra": "avg tps: 1172.7549610491474, max tps: 1194.3743978334608, count: 54982"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2775.882002131621,
            "unit": "median tps",
            "extra": "avg tps: 2753.2083001604065, max tps: 2787.9505152991774, count: 54982"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1166.7421904841817,
            "unit": "median tps",
            "extra": "avg tps: 1165.439953654279, max tps: 1188.9076906756732, count: 54982"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 917.9974270810302,
            "unit": "median tps",
            "extra": "avg tps: 918.1411672995004, max tps: 967.678322083649, count: 54982"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 496.11095344379106,
            "unit": "median tps",
            "extra": "avg tps: 499.30072014467356, max tps: 511.69456322542266, count: 109964"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 459.3180856009193,
            "unit": "median tps",
            "extra": "avg tps: 451.1014721244923, max tps: 474.3135242776785, count: 54982"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 195.05877158078377,
            "unit": "median tps",
            "extra": "avg tps: 204.93426371327016, max tps: 962.9532621004707, count: 54982"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "18b62a62c4f789341be9f475a1d0d2da78cc65eb",
          "message": "perf: update tantivy dependency (#3082)\n\n## What\n\nThis is the 0.17.x-specific version of PR #3081.\n\n## Why\n\nOur tantivy timeline has forked and so has our dependency points.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T16:56:21-04:00",
          "tree_id": "7048f5dc1e63c9791a8f987db324e71a6e94cdc0",
          "url": "https://github.com/paradedb/paradedb/commit/18b62a62c4f789341be9f475a1d0d2da78cc65eb"
        },
        "date": 1756674834336,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1201.6439643658148,
            "unit": "median tps",
            "extra": "avg tps: 1199.2054003578924, max tps: 1204.013382088565, count: 55281"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2790.090064663117,
            "unit": "median tps",
            "extra": "avg tps: 2770.5924897453433, max tps: 2800.1676386255253, count: 55281"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1229.2527641449371,
            "unit": "median tps",
            "extra": "avg tps: 1223.637476791746, max tps: 1233.014621633408, count: 55281"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 984.7971731501743,
            "unit": "median tps",
            "extra": "avg tps: 978.0729546325199, max tps: 991.5795725689069, count: 55281"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 529.7255125957049,
            "unit": "median tps",
            "extra": "avg tps: 525.8100586270479, max tps: 543.4728258936626, count: 110562"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 389.2610152290681,
            "unit": "median tps",
            "extra": "avg tps: 388.9921283110253, max tps: 395.84881570237184, count: 55281"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 140.69479451068003,
            "unit": "median tps",
            "extra": "avg tps: 162.1741227913579, max tps: 848.2490866477959, count: 55281"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "997b50e18ae26aa147b1228635a79740df1d137c",
          "message": "perf: FSM conditional locking & other minor drive-bys (#3083)\n\n## What\n\nTeach the FSM how to conditionally upgrade its buffer lock to an\nexclusive lock, skipping the page if it can't be acquired (unless it's\nthe last page, then we wait).\n\nWhile here, centralize `std::thread::available_parallelism()` (it\nactually showed up on profiles!) and gate some `pgrx::debug!()`\nstatements\n\n## Why\n\nTrying to remove some overhead that showed up during profiling.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T17:00:19-04:00",
          "tree_id": "7fd6ec90f00ff021061576bba5a811b99db53be1",
          "url": "https://github.com/paradedb/paradedb/commit/997b50e18ae26aa147b1228635a79740df1d137c"
        },
        "date": 1756675075495,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1203.8844835550806,
            "unit": "median tps",
            "extra": "avg tps: 1198.740626356099, max tps: 1207.8462876310803, count: 55290"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2773.15356682191,
            "unit": "median tps",
            "extra": "avg tps: 2744.9272914735266, max tps: 2788.193276009167, count: 55290"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1185.2032308090193,
            "unit": "median tps",
            "extra": "avg tps: 1182.073501916808, max tps: 1205.9131174484223, count: 55290"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 988.5440315325995,
            "unit": "median tps",
            "extra": "avg tps: 978.2708837113738, max tps: 994.6132759982552, count: 55290"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 569.5849874031438,
            "unit": "median tps",
            "extra": "avg tps: 601.7924732042322, max tps: 684.4112110843611, count: 110580"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 429.1404440214925,
            "unit": "median tps",
            "extra": "avg tps: 427.347633747279, max tps: 430.1618877910681, count: 55290"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 185.6256507919301,
            "unit": "median tps",
            "extra": "avg tps: 189.87168044539283, max tps: 937.5462913481354, count: 55290"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "61f7d5fa27516625eba0d94622d397bd79de8b65",
          "message": "perf: update tantivy dependency (#3086)\n\n## What\n\nUpdate our tantivy dependency to pick (mostly pg_search-specific)\noptimizations made in https://github.com/paradedb/tantivy/pull/60\n\nThis will be cherry-picked to v0.18.x. A different PR will be for 0.17.x\nas our tantivy timeline has forked.\n\n## Why\n\nThis drastically improves INSERT/UPDATE performance for single-row\n\"atomic updates\", especially if the connection doing it is\npersistent/long-lived.\n\n## How\n\n## Tests\n\nAll existing tests pass.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T17:04:08-04:00",
          "tree_id": "be8e82a10b78e99894f4679688cc3cb8ab8e66fd",
          "url": "https://github.com/paradedb/paradedb/commit/61f7d5fa27516625eba0d94622d397bd79de8b65"
        },
        "date": 1756675307732,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1164.1055337798134,
            "unit": "median tps",
            "extra": "avg tps: 1163.4763985624159, max tps: 1170.4055698497018, count: 54859"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2775.795856002547,
            "unit": "median tps",
            "extra": "avg tps: 2761.5543171919535, max tps: 2786.078403358151, count: 54859"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1153.6020469099233,
            "unit": "median tps",
            "extra": "avg tps: 1153.1229309212536, max tps: 1192.0796936419624, count: 54859"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 952.5944320010142,
            "unit": "median tps",
            "extra": "avg tps: 947.8680398157422, max tps: 955.8235713270943, count: 54859"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 516.2647994559483,
            "unit": "median tps",
            "extra": "avg tps: 517.7816124138516, max tps: 559.992570581167, count: 109718"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 497.5232601252927,
            "unit": "median tps",
            "extra": "avg tps: 492.4410282361538, max tps: 498.85061192771457, count: 54859"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 133.8401845258788,
            "unit": "median tps",
            "extra": "avg tps: 148.39929787549886, max tps: 956.8086985392401, count: 54859"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f7a1efb6ab66a1083669275a76c64bb2fdb774c5",
          "message": "fix: Patch null subselects (#3084)",
          "timestamp": "2025-08-31T17:13:32-04:00",
          "tree_id": "7af3a47e9d5360e7deb0796f3a63eaeb9458c016",
          "url": "https://github.com/paradedb/paradedb/commit/f7a1efb6ab66a1083669275a76c64bb2fdb774c5"
        },
        "date": 1756675868718,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1196.9373307305013,
            "unit": "median tps",
            "extra": "avg tps: 1193.1457082471989, max tps: 1203.3477963370028, count: 55094"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2724.8570572993285,
            "unit": "median tps",
            "extra": "avg tps: 2701.7957964153247, max tps: 2729.5790559692377, count: 55094"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1193.7101698355864,
            "unit": "median tps",
            "extra": "avg tps: 1188.7107141763342, max tps: 1198.5721454007557, count: 55094"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 996.4117258725054,
            "unit": "median tps",
            "extra": "avg tps: 991.7766047320837, max tps: 1003.9486893952824, count: 55094"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 571.650063733739,
            "unit": "median tps",
            "extra": "avg tps: 571.5595422946122, max tps: 589.2236002866916, count: 110188"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 477.89164074018805,
            "unit": "median tps",
            "extra": "avg tps: 476.21937233542644, max tps: 483.0701279933137, count: 55094"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 174.53157701299818,
            "unit": "median tps",
            "extra": "avg tps: 191.13784382458942, max tps: 884.6449521716706, count: 55094"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b5168d5548573f33931eaaf7391be49785ae563c",
          "message": "perf: FSM conditional locking & other minor drive-bys (#3087)\n\n## What\n\nTeach the FSM how to conditionally upgrade its buffer lock to an\nexclusive lock, skipping the page if it can't be acquired (unless it's\nthe last page, then we wait).\n\nWhile here, centralize `std::thread::available_parallelism()` (it\nactually showed up on profiles!) and gate some `pgrx::debug!()`\nstatements\n\n## Why\n\nTrying to remove some overhead that showed up during profiling.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T17:21:58-04:00",
          "tree_id": "7b94457372b11bf3eae0e9b4926a1b0b075f873f",
          "url": "https://github.com/paradedb/paradedb/commit/b5168d5548573f33931eaaf7391be49785ae563c"
        },
        "date": 1756676281348,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1208.19588895691,
            "unit": "median tps",
            "extra": "avg tps: 1203.5279266489767, max tps: 1214.6519250327915, count: 55116"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2814.365369490557,
            "unit": "median tps",
            "extra": "avg tps: 2802.611654951264, max tps: 2822.5206362686276, count: 55116"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1205.6530554698181,
            "unit": "median tps",
            "extra": "avg tps: 1200.9098100317292, max tps: 1209.0350686167285, count: 55116"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 920.158716376009,
            "unit": "median tps",
            "extra": "avg tps: 915.8749077000267, max tps: 987.0562380226895, count: 55116"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 564.379152930778,
            "unit": "median tps",
            "extra": "avg tps: 558.3250627049782, max tps: 571.3092267832671, count: 110232"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 490.1467671557404,
            "unit": "median tps",
            "extra": "avg tps: 485.06723108120775, max tps: 492.1652013929523, count: 55116"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 219.08770219814207,
            "unit": "median tps",
            "extra": "avg tps: 223.16441757051868, max tps: 1092.677639335521, count: 55116"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "66416cd75501ccbc7dccc4fa5ff52351515297f9",
          "message": "chore: clean up + test null subselects (#3085)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n- Makes warning when a subselect is null less noisy\n- Adds a regression test\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T17:26:18-04:00",
          "tree_id": "fce6e0f4193a8ed265430eec17e026251778bed2",
          "url": "https://github.com/paradedb/paradedb/commit/66416cd75501ccbc7dccc4fa5ff52351515297f9"
        },
        "date": 1756676536366,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1179.7150513256965,
            "unit": "median tps",
            "extra": "avg tps: 1176.381868168413, max tps: 1184.903674742418, count: 55004"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2758.1067308029214,
            "unit": "median tps",
            "extra": "avg tps: 2748.229909625627, max tps: 2768.4107426408905, count: 55004"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1172.2322136877965,
            "unit": "median tps",
            "extra": "avg tps: 1167.887311662457, max tps: 1175.1607385621103, count: 55004"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 976.6912951312639,
            "unit": "median tps",
            "extra": "avg tps: 967.7302473768834, max tps: 986.8833929835729, count: 55004"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 536.3738074532836,
            "unit": "median tps",
            "extra": "avg tps: 555.500043378147, max tps: 590.2223849320851, count: 110008"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 503.2446378685842,
            "unit": "median tps",
            "extra": "avg tps: 488.84649227569366, max tps: 515.2904435600567, count: 55004"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 179.81263882659547,
            "unit": "median tps",
            "extra": "avg tps: 181.66467874963354, max tps: 889.2944071385441, count: 55004"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7880880ebd7ac0d11324c3535f09d8cccad14bfa",
          "message": "fix: cherry pick excluded sub-queries from filter-pushdown (on non-indexed fields… (#3089)\n\n…). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Moe <mdashti@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-31T17:26:43-04:00",
          "tree_id": "669aeeae50dcf9a9e766c99607331fffa18556af",
          "url": "https://github.com/paradedb/paradedb/commit/7880880ebd7ac0d11324c3535f09d8cccad14bfa"
        },
        "date": 1756676559250,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1197.6373717663262,
            "unit": "median tps",
            "extra": "avg tps: 1195.4410809759695, max tps: 1221.5084870685728, count: 55320"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2805.533469879397,
            "unit": "median tps",
            "extra": "avg tps: 2786.3588852799503, max tps: 2820.1450957161455, count: 55320"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1196.845901337933,
            "unit": "median tps",
            "extra": "avg tps: 1191.8124476374815, max tps: 1199.5444890921488, count: 55320"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 985.7343234525016,
            "unit": "median tps",
            "extra": "avg tps: 980.8954997016747, max tps: 990.3717342843613, count: 55320"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 567.8068150935328,
            "unit": "median tps",
            "extra": "avg tps: 571.7123455511027, max tps: 593.2077364791162, count: 110640"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 533.1779823301107,
            "unit": "median tps",
            "extra": "avg tps: 523.2828847136104, max tps: 538.8953002624071, count: 55320"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 197.74278068650457,
            "unit": "median tps",
            "extra": "avg tps: 199.4364457683407, max tps: 912.9318624175165, count: 55320"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5dbe9f72e059209d7bcfe329add81a3defc1373b",
          "message": "perf: FSM conditional locking & other minor drive-bys (#3088)\n\n## What\n\nTeach the FSM how to conditionally upgrade its buffer lock to an\nexclusive lock, skipping the page if it can't be acquired (unless it's\nthe last page, then we wait).\n\nWhile here, centralize `std::thread::available_parallelism()` (it\nactually showed up on profiles!) and gate some `pgrx::debug!()`\nstatements\n\n## Why\n\nTrying to remove some overhead that showed up during profiling.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T18:03:44-04:00",
          "tree_id": "c07eb1a6be295bf0f48ecb2015ad817f66eed5d6",
          "url": "https://github.com/paradedb/paradedb/commit/5dbe9f72e059209d7bcfe329add81a3defc1373b"
        },
        "date": 1756678780005,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1154.952824355873,
            "unit": "median tps",
            "extra": "avg tps: 1154.086907020108, max tps: 1209.5400028818779, count: 55354"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2651.6730179503347,
            "unit": "median tps",
            "extra": "avg tps: 2642.8884078857454, max tps: 2662.5070282891006, count: 55354"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1128.1468563484223,
            "unit": "median tps",
            "extra": "avg tps: 1125.4604997138374, max tps: 1169.2434976734135, count: 55354"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 964.7183660327389,
            "unit": "median tps",
            "extra": "avg tps: 955.2930853695666, max tps: 972.8150015825117, count: 55354"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 541.6456455578922,
            "unit": "median tps",
            "extra": "avg tps: 539.6027800050659, max tps: 544.3496256380128, count: 110708"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 564.6166266119117,
            "unit": "median tps",
            "extra": "avg tps: 548.7214091754626, max tps: 574.1483636443131, count: 55354"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 188.32825871897595,
            "unit": "median tps",
            "extra": "avg tps: 191.04706939872923, max tps: 929.9410324391331, count: 55354"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13c4ff7d629f86262ffcccb04bcd81cb839dffc2",
          "message": "fix: fix failing test (#3092)\n\n## What\n\nOur recent changes to tantivy have adjusted the default MemoryArena page\nsize from 1MB to 512k, and this actually has a downstream effect of\nallowing indexers to fit more docs in the arena before tantivy calcuates\nthat the indexer has exceeded its memory budget.\n\nWe have a test that exposed this, so this adjustes the number of\ndocuments to insert to generate 5 segments.\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T18:25:55-04:00",
          "tree_id": "bab403fb4244937da102295355dc877175f94a0a",
          "url": "https://github.com/paradedb/paradedb/commit/13c4ff7d629f86262ffcccb04bcd81cb839dffc2"
        },
        "date": 1756680111912,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1195.6096454787642,
            "unit": "median tps",
            "extra": "avg tps: 1191.9328978231483, max tps: 1199.4006195116124, count: 55269"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2761.9184845810414,
            "unit": "median tps",
            "extra": "avg tps: 2740.0643676174764, max tps: 2779.2557005081303, count: 55269"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1213.397730777701,
            "unit": "median tps",
            "extra": "avg tps: 1208.2526389730276, max tps: 1215.3767310371338, count: 55269"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1005.1574658167285,
            "unit": "median tps",
            "extra": "avg tps: 997.8846969634956, max tps: 1013.9311829520348, count: 55269"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 598.0645408579012,
            "unit": "median tps",
            "extra": "avg tps: 591.7049624022808, max tps: 600.9257688149632, count: 110538"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 540.0222470860909,
            "unit": "median tps",
            "extra": "avg tps: 530.4703419066102, max tps: 542.3259888997092, count: 55269"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 146.70761131077035,
            "unit": "median tps",
            "extra": "avg tps: 149.758673019172, max tps: 871.5151377821858, count: 55269"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c1319a7927e12e96a27d54ebc0eb1c107d4378e",
          "message": "fix: fix failing test (#3093)\n\n## What\n\nOur recent changes to tantivy have adjusted the default MemoryArena page\nsize from 1MB to 512k, and this actually has a downstream effect of\nallowing indexers to fit more docs in the arena before tantivy calcuates\nthat the indexer has exceeded its memory budget.\n\nWe have a test that exposed this, so this adjustes the number of\ndocuments to insert to generate 5 segments.\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T19:13:25-04:00",
          "tree_id": "803c44b58b03e5f37cdecdac428495b710cea410",
          "url": "https://github.com/paradedb/paradedb/commit/5c1319a7927e12e96a27d54ebc0eb1c107d4378e"
        },
        "date": 1756682966503,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1218.0209029544505,
            "unit": "median tps",
            "extra": "avg tps: 1213.0127436797763, max tps: 1218.9341667133724, count: 55288"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2794.478928061294,
            "unit": "median tps",
            "extra": "avg tps: 2771.717172159439, max tps: 2811.2843804024455, count: 55288"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1171.6639079086874,
            "unit": "median tps",
            "extra": "avg tps: 1168.8226008784713, max tps: 1178.1008479759053, count: 55288"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 976.6299302726264,
            "unit": "median tps",
            "extra": "avg tps: 969.6975655919084, max tps: 984.4771193294987, count: 55288"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 494.4454582985018,
            "unit": "median tps",
            "extra": "avg tps: 513.0667943501493, max tps: 542.3024514136957, count: 110576"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 453.29406474563166,
            "unit": "median tps",
            "extra": "avg tps: 448.52580075232805, max tps: 454.65066342866214, count: 55288"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 138.34728729719023,
            "unit": "median tps",
            "extra": "avg tps: 150.0688341158831, max tps: 1041.2555876377971, count: 55288"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1cfc7c5a684d93ff742844cc9a73f47a88a1c2e",
          "message": "fix: fix failing test (#3094)\n\n## What\n\nOur recent changes to tantivy have adjusted the default MemoryArena page\nsize from 1MB to 512k, and this actually has a downstream effect of\nallowing indexers to fit more docs in the arena before tantivy calcuates\nthat the indexer has exceeded its memory budget.\n\nWe have a test that exposed this, so this adjustes the number of\ndocuments to insert to generate 5 segments.\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T19:27:45-04:00",
          "tree_id": "8deb2601fc513f26b18413cdcd95b63227800cef",
          "url": "https://github.com/paradedb/paradedb/commit/c1cfc7c5a684d93ff742844cc9a73f47a88a1c2e"
        },
        "date": 1756683833463,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1205.9049330559776,
            "unit": "median tps",
            "extra": "avg tps: 1199.7963466276092, max tps: 1209.9207481374146, count: 55265"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2792.777802890582,
            "unit": "median tps",
            "extra": "avg tps: 2767.5581738011083, max tps: 2805.9798513288933, count: 55265"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1206.2926726199107,
            "unit": "median tps",
            "extra": "avg tps: 1200.397965083423, max tps: 1212.0997373547652, count: 55265"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 967.9402074713536,
            "unit": "median tps",
            "extra": "avg tps: 966.0660407665429, max tps: 973.268886727115, count: 55265"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 583.3851002688441,
            "unit": "median tps",
            "extra": "avg tps: 578.1456280044637, max tps: 600.2831997012248, count: 110530"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 467.0048491482408,
            "unit": "median tps",
            "extra": "avg tps: 462.79592876786893, max tps: 468.1098832744387, count: 55265"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 135.46567991157485,
            "unit": "median tps",
            "extra": "avg tps: 148.00395896067448, max tps: 897.0387852659586, count: 55265"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cea1e8a6034491ad9e758c9ca40b3bf03dd0ad80",
          "message": "chore: Upgrade to `0.17.10` (#3091)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T21:10:59-04:00",
          "tree_id": "bb9aa9d90f45f351627b62d17644c53e944c44bb",
          "url": "https://github.com/paradedb/paradedb/commit/cea1e8a6034491ad9e758c9ca40b3bf03dd0ad80"
        },
        "date": 1756690019429,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1212.2572555296924,
            "unit": "median tps",
            "extra": "avg tps: 1205.3128284366646, max tps: 1218.833917827601, count: 55336"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2790.8946441039016,
            "unit": "median tps",
            "extra": "avg tps: 2768.576056773075, max tps: 2806.5822197651178, count: 55336"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1193.4997334308766,
            "unit": "median tps",
            "extra": "avg tps: 1188.9497345844702, max tps: 1196.3792210649137, count: 55336"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 984.5021145662558,
            "unit": "median tps",
            "extra": "avg tps: 977.4427377686688, max tps: 993.3595454546131, count: 55336"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 537.4441841815083,
            "unit": "median tps",
            "extra": "avg tps: 575.3827225433851, max tps: 625.1484711605145, count: 110672"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 478.257340537944,
            "unit": "median tps",
            "extra": "avg tps: 475.8053185177945, max tps: 478.7696023102376, count: 55336"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 185.69987139791235,
            "unit": "median tps",
            "extra": "avg tps: 188.61267182655132, max tps: 852.8399142725318, count: 55336"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7feaa3f26a1cdd76926c0df1914a973c4dd07ae5",
          "message": "chore: clean up + test null subselects (#3090)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n- Makes warning when a subselect is null less noisy\n- Adds a regression test\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-09-01T20:17:03-04:00",
          "tree_id": "7dc76314573192fb1180f64ffaa480c1e9f20e23",
          "url": "https://github.com/paradedb/paradedb/commit/7feaa3f26a1cdd76926c0df1914a973c4dd07ae5"
        },
        "date": 1756773185700,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1163.1254733703518,
            "unit": "median tps",
            "extra": "avg tps: 1159.8786500419521, max tps: 1190.8022342033876, count: 55325"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2753.65848269224,
            "unit": "median tps",
            "extra": "avg tps: 2732.473960862249, max tps: 2761.91945087629, count: 55325"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1196.3602395025566,
            "unit": "median tps",
            "extra": "avg tps: 1193.3155935290054, max tps: 1200.0827452526396, count: 55325"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 974.3164940282147,
            "unit": "median tps",
            "extra": "avg tps: 969.1845878249266, max tps: 979.6157241069018, count: 55325"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 498.05935790149323,
            "unit": "median tps",
            "extra": "avg tps: 514.494969793971, max tps: 537.4649294398799, count: 110650"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 489.0577120782726,
            "unit": "median tps",
            "extra": "avg tps: 480.18909668264547, max tps: 496.6564930580062, count: 55325"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 167.40525529322906,
            "unit": "median tps",
            "extra": "avg tps: 170.10017862720937, max tps: 841.2643530214431, count: 55325"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756835805172,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1226.4812466587364,
            "unit": "median tps",
            "extra": "avg tps: 1222.3513088627717, max tps: 1228.9255452789496, count: 55049"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2683.3170422580224,
            "unit": "median tps",
            "extra": "avg tps: 2677.114746052001, max tps: 2693.9345737741037, count: 55049"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1207.939904386566,
            "unit": "median tps",
            "extra": "avg tps: 1204.368405439349, max tps: 1213.8490744587707, count: 55049"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1034.1173267260262,
            "unit": "median tps",
            "extra": "avg tps: 1029.1583910166107, max tps: 1042.6623785270249, count: 55049"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 544.8573853680028,
            "unit": "median tps",
            "extra": "avg tps: 552.9088254174102, max tps: 571.0047913470976, count: 110098"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 528.8236526932897,
            "unit": "median tps",
            "extra": "avg tps: 514.8306532289574, max tps: 537.998812449344, count: 55049"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 159.66551963421347,
            "unit": "median tps",
            "extra": "avg tps: 179.57576010143444, max tps: 831.6395607612496, count: 55049"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "12a5dd0083189771b71a13a34642cc8b648b8b8a",
          "message": "feat: ability to apply a slop value to \"phrase queries\" (#3100)\n\n## What\n\nThis adds a new `slop` SQL type with a typmod which allows for the easy\napplication of a phrase slop value as part of the SQL query.\n\nOnly phrases support slop, so this only works with the `###` operator\nand the `@@@ pdb.phrase()` function.\n\n## Why\n\nThis is in furtherance of our SQL UX improvements.\n\n## How\n\n```sql\nSELECT * FROM t WHERE field ### 'bbq chicken'::slop(3);\nSELECT * FROM t WHERE field @@@ pdb.phrase('bbq chicken')::slop(3);\n```\n\n## Tests\n\nA new regression test has been added.",
          "timestamp": "2025-09-02T13:41:15-04:00",
          "tree_id": "91fdace9b6c4bd5ae2d6c9c4df0cfd3778fb1740",
          "url": "https://github.com/paradedb/paradedb/commit/12a5dd0083189771b71a13a34642cc8b648b8b8a"
        },
        "date": 1756835833964,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1211.7573115996624,
            "unit": "median tps",
            "extra": "avg tps: 1207.4198926876913, max tps: 1214.2177435351914, count: 55265"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2827.8139855114937,
            "unit": "median tps",
            "extra": "avg tps: 2803.953240304103, max tps: 2836.8075371603304, count: 55265"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1190.8705361167945,
            "unit": "median tps",
            "extra": "avg tps: 1185.9511170239357, max tps: 1194.4616411761995, count: 55265"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1003.1788983726357,
            "unit": "median tps",
            "extra": "avg tps: 993.550847894539, max tps: 1010.0600369508915, count: 55265"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 588.9540195349655,
            "unit": "median tps",
            "extra": "avg tps: 607.9181902915475, max tps: 666.5884076410538, count: 110530"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 490.1684856974879,
            "unit": "median tps",
            "extra": "avg tps: 485.45654624636427, max tps: 491.12225225309385, count: 55265"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 158.0750883849962,
            "unit": "median tps",
            "extra": "avg tps: 173.08333601085948, max tps: 903.2411906886673, count: 55265"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "661293354b63ed9f8ea05dc1d484ab7ee83bfafc",
          "message": "feat: ability to apply a slop value to \"phrase queries\" (#3105)\n\n## What\n\nThis adds a new `slop` SQL type with a typmod which allows for the easy\napplication of a phrase slop value as part of the SQL query.\n\nOnly phrases support slop, so this only works with the `###` operator\nand the `@@@ pdb.phrase()` function.\n\n## Why\n\nThis is in furtherance of our SQL UX improvements.\n\n## How\n\n```sql\nSELECT * FROM t WHERE field ### 'bbq chicken'::slop(3);\nSELECT * FROM t WHERE field @@@ pdb.phrase('bbq chicken')::slop(3);\n```\n\n## Tests\n\nA new regression test has been added.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-09-02T13:58:31-04:00",
          "tree_id": "0e70c63e07bfcdbadf9aaeb8ff4d32bb07b2e896",
          "url": "https://github.com/paradedb/paradedb/commit/661293354b63ed9f8ea05dc1d484ab7ee83bfafc"
        },
        "date": 1756836878884,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1234.9462733984694,
            "unit": "median tps",
            "extra": "avg tps: 1228.5239720868872, max tps: 1239.1352798247558, count: 55293"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2726.336155441148,
            "unit": "median tps",
            "extra": "avg tps: 2701.7031197415595, max tps: 2753.138682480358, count: 55293"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1176.3884908839877,
            "unit": "median tps",
            "extra": "avg tps: 1170.9798158339079, max tps: 1189.5772653578886, count: 55293"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 1006.0173482297217,
            "unit": "median tps",
            "extra": "avg tps: 1000.4921982738642, max tps: 1016.2788867406055, count: 55293"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 514.3916269259827,
            "unit": "median tps",
            "extra": "avg tps: 553.134090295107, max tps: 618.9827935161487, count: 110586"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 409.4982755955562,
            "unit": "median tps",
            "extra": "avg tps: 408.42846930390203, max tps: 412.54622692393434, count: 55293"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 122.00441533091778,
            "unit": "median tps",
            "extra": "avg tps: 144.76474014390098, max tps: 904.6613581138172, count: 55293"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c3aa7fa0842c3676fc02353c5dca079d49df2be7",
          "message": "chore: cherry-pick PR3013 to main (#3104)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.\n\n---------\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric B. Ridge <eebbrr@paradedb.com>",
          "timestamp": "2025-09-02T16:55:33-04:00",
          "tree_id": "ffdcc5d9a2529e1b14e30bad2aa355dc46717288",
          "url": "https://github.com/paradedb/paradedb/commit/c3aa7fa0842c3676fc02353c5dca079d49df2be7"
        },
        "date": 1756847496198,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1208.865851972696,
            "unit": "median tps",
            "extra": "avg tps: 1203.512614316027, max tps: 1211.3264890997475, count: 55247"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2753.33834078948,
            "unit": "median tps",
            "extra": "avg tps: 2736.3530501496257, max tps: 2761.8308769725422, count: 55247"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1195.3940594908431,
            "unit": "median tps",
            "extra": "avg tps: 1191.7544660481224, max tps: 1198.5344831224643, count: 55247"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 999.0099409011334,
            "unit": "median tps",
            "extra": "avg tps: 988.182017425601, max tps: 1005.447797358313, count: 55247"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 571.3490708075427,
            "unit": "median tps",
            "extra": "avg tps: 572.8469807613377, max tps: 595.5187231304104, count: 110494"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 534.148305861463,
            "unit": "median tps",
            "extra": "avg tps: 524.6662139743386, max tps: 537.394100819446, count: 55247"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 163.3620660649264,
            "unit": "median tps",
            "extra": "avg tps: 176.7885186765028, max tps: 777.0961780855769, count: 55247"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756914413974,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1198.5821453904437,
            "unit": "median tps",
            "extra": "avg tps: 1193.8095297011625, max tps: 1201.9576059096491, count: 55287"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2812.4247021740525,
            "unit": "median tps",
            "extra": "avg tps: 2795.8439451497443, max tps: 2821.2524280540474, count: 55287"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1209.3797695821163,
            "unit": "median tps",
            "extra": "avg tps: 1205.342903729715, max tps: 1213.2822455172468, count: 55287"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 966.4581815595549,
            "unit": "median tps",
            "extra": "avg tps: 961.9875017642626, max tps: 978.1847200112529, count: 55287"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 577.7156416617229,
            "unit": "median tps",
            "extra": "avg tps: 575.7414343025838, max tps: 588.8363941166537, count: 110574"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 420.2427460108218,
            "unit": "median tps",
            "extra": "avg tps: 418.77284458357843, max tps: 421.50859595751575, count: 55287"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 177.9197847607428,
            "unit": "median tps",
            "extra": "avg tps: 178.55765965004014, max tps: 886.7488682867568, count: 55287"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e1895283ef244b91334cdfab6ddaeaec2bfe227c",
          "message": "feat: EXPLAIN metrics for parallel workers (#3113)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:47:41-07:00",
          "tree_id": "04be54f839a1e26575aeb541e332465bdeaf8d94",
          "url": "https://github.com/paradedb/paradedb/commit/e1895283ef244b91334cdfab6ddaeaec2bfe227c"
        },
        "date": 1756915523287,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1214.2431677284246,
            "unit": "median tps",
            "extra": "avg tps: 1208.4940948679914, max tps: 1222.6021499591618, count: 55252"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2795.2950375867968,
            "unit": "median tps",
            "extra": "avg tps: 2777.7499166298558, max tps: 2803.6497339233897, count: 55252"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1189.6936623657252,
            "unit": "median tps",
            "extra": "avg tps: 1187.5785853922607, max tps: 1200.7718035917562, count: 55252"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 988.8152324752505,
            "unit": "median tps",
            "extra": "avg tps: 986.6939177926095, max tps: 995.7489309743617, count: 55252"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 553.3638818849533,
            "unit": "median tps",
            "extra": "avg tps: 551.5109521534055, max tps: 595.9776364145815, count: 110504"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 487.99634512290993,
            "unit": "median tps",
            "extra": "avg tps: 481.665787637581, max tps: 494.4434494497265, count: 55252"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 137.20598459455405,
            "unit": "median tps",
            "extra": "avg tps: 156.67367876281224, max tps: 895.1982461275961, count: 55252"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7",
          "message": "fix: Fix handling of nulls in TopN (#3110)\n\n## What\n\nTopN was not handling nulls properly: instead, they were filled in with\na default, which would cause an error when the limit was high enough to\ninclude them.\n\n## How\n\nSee https://github.com/paradedb/tantivy/pull/61.\n\n## Tests\n\nAdded a regression test and property tests (which exposed a related\nissue in pushdown: https://github.com/paradedb/paradedb/pull/3110).",
          "timestamp": "2025-09-03T11:49:57-07:00",
          "tree_id": "406781ed0840de7d7c190e6d69ef8af7a0a8eb76",
          "url": "https://github.com/paradedb/paradedb/commit/daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7"
        },
        "date": 1756926459023,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1208.337329981734,
            "unit": "median tps",
            "extra": "avg tps: 1203.2630766553013, max tps: 1210.891134315662, count: 55208"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2807.3668600618835,
            "unit": "median tps",
            "extra": "avg tps: 2788.8133322879203, max tps: 2819.479598511856, count: 55208"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1201.4917573152647,
            "unit": "median tps",
            "extra": "avg tps: 1195.6378457156727, max tps: 1202.8929730509562, count: 55208"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 989.5139899674758,
            "unit": "median tps",
            "extra": "avg tps: 984.9145013114206, max tps: 998.3223868191384, count: 55208"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 551.8748168151008,
            "unit": "median tps",
            "extra": "avg tps: 558.3715147293638, max tps: 582.0511182751884, count: 110416"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 464.8970721986154,
            "unit": "median tps",
            "extra": "avg tps: 460.8783859381812, max tps: 466.5435301313797, count: 55208"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 183.10528720257943,
            "unit": "median tps",
            "extra": "avg tps: 182.8012213508454, max tps: 567.0374335432127, count: 55208"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e32b5f3fcf2fc6dcc9b32f180f6954e53800be13",
          "message": "feat: EXPLAIN metrics for parallel workers (#3112)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-09-03T12:11:09-07:00",
          "tree_id": "0e699e02dc2089d12fa9f72bd954261e49904273",
          "url": "https://github.com/paradedb/paradedb/commit/e32b5f3fcf2fc6dcc9b32f180f6954e53800be13"
        },
        "date": 1756927735114,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - tps",
            "value": 1199.2930209245094,
            "unit": "median tps",
            "extra": "avg tps: 1195.8767625880016, max tps: 1201.5640611833826, count: 55221"
          },
          {
            "name": "Delete values - Primary - tps",
            "value": 2813.9983022093706,
            "unit": "median tps",
            "extra": "avg tps: 2796.573759768061, max tps: 2825.79159435584, count: 55221"
          },
          {
            "name": "Index Only Scan - Primary - tps",
            "value": 1209.7118242466352,
            "unit": "median tps",
            "extra": "avg tps: 1204.2854250305274, max tps: 1212.0377731370497, count: 55221"
          },
          {
            "name": "Index Scan - Primary - tps",
            "value": 999.1677076060892,
            "unit": "median tps",
            "extra": "avg tps: 991.7984615212409, max tps: 1003.3709785191902, count: 55221"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 594.3302781094488,
            "unit": "median tps",
            "extra": "avg tps: 595.1424306461362, max tps: 615.084651412748, count: 110442"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 430.286688087831,
            "unit": "median tps",
            "extra": "avg tps: 429.9348996140818, max tps: 433.88723230328753, count: 55221"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 168.4999349502631,
            "unit": "median tps",
            "extra": "avg tps: 168.00103432140668, max tps: 746.1205462199296, count: 55221"
          }
        ]
      }
    ],
    "pg_search single-server.toml Performance - Other Metrics": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755715369422,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.793445491765856, max cpu: 9.504951, count: 55310"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 54.94140625,
            "unit": "median mem",
            "extra": "avg mem: 54.443803886616344, max mem: 73.23046875, count: 55310"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.692518999191779, max cpu: 9.476802, count: 55310"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 49.734375,
            "unit": "median mem",
            "extra": "avg mem: 49.60782782555144, max mem: 68.859375, count: 55310"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.735427073532366, max cpu: 9.476802, count: 55310"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 54.625,
            "unit": "median mem",
            "extra": "avg mem: 54.99081575720937, max mem: 74.66015625, count: 55310"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.473963577664858, max cpu: 4.673807, count: 55310"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 54.21484375,
            "unit": "median mem",
            "extra": "avg mem: 54.611305101360514, max mem: 73.8203125, count: 55310"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.239654,
            "unit": "median cpu",
            "extra": "avg cpu: 8.495478373512194, max cpu: 28.430405, count: 110620"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 64.37890625,
            "unit": "median mem",
            "extra": "avg mem: 64.61561154600209, max mem: 91.08203125, count: 110620"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 3109,
            "unit": "median block_count",
            "extra": "avg block_count: 3133.2996384017356, max block_count: 5537.0, count: 55310"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.617790634604955, max segment_count: 28.0, count: 55310"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 6.6186586931913265, max cpu: 18.60465, count: 55310"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 71.9140625,
            "unit": "median mem",
            "extra": "avg mem: 72.55760147351293, max mem: 93.52734375, count: 55310"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 5.908369591653062, max cpu: 9.230769, count: 55310"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 55.99609375,
            "unit": "median mem",
            "extra": "avg mem: 54.15287279933556, max mem: 74.12109375, count: 55310"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755715425306,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.743593240602186, max cpu: 9.504951, count: 55231"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 89.9609375,
            "unit": "median mem",
            "extra": "avg mem: 91.58824315714907, max mem: 145.57421875, count: 55231"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.690070799589131, max cpu: 9.467456, count: 55231"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 83.81640625,
            "unit": "median mem",
            "extra": "avg mem: 84.26868763409588, max mem: 136.38671875, count: 55231"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.749162456815798, max cpu: 9.571285, count: 55231"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 90.33203125,
            "unit": "median mem",
            "extra": "avg mem: 91.3088342880357, max mem: 144.34375, count: 55231"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.093089690227481, max cpu: 4.743083, count: 55231"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 91.25390625,
            "unit": "median mem",
            "extra": "avg mem: 92.64457403903604, max mem: 145.59375, count: 55231"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.257474,
            "unit": "median cpu",
            "extra": "avg cpu: 8.611603852938297, max cpu: 28.235296, count: 110462"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 100.4453125,
            "unit": "median mem",
            "extra": "avg mem: 101.63635518464494, max mem: 159.90234375, count: 110462"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7646,
            "unit": "median block_count",
            "extra": "avg block_count: 7751.887545038113, max block_count: 14472.0, count: 55231"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.611160399051258, max segment_count: 36.0, count: 55231"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.673807,
            "unit": "median cpu",
            "extra": "avg cpu: 6.740220057625452, max cpu: 19.257774, count: 55231"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 106.515625,
            "unit": "median mem",
            "extra": "avg mem: 107.09344566740145, max mem: 163.54296875, count: 55231"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.388270378986754, max cpu: 9.320388, count: 55231"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 85.3671875,
            "unit": "median mem",
            "extra": "avg mem: 84.30926925096414, max mem: 135.890625, count: 55231"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755715440114,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.724949680051945, max cpu: 9.458128, count: 55099"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 59.609375,
            "unit": "median mem",
            "extra": "avg mem: 59.70736601673806, max mem: 82.50390625, count: 55099"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 4.636141322317165, max cpu: 9.204219, count: 55099"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 54.4765625,
            "unit": "median mem",
            "extra": "avg mem: 53.82671532151219, max mem: 78.65625, count: 55099"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.735309301205046, max cpu: 9.4395275, count: 55099"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 61.98828125,
            "unit": "median mem",
            "extra": "avg mem: 61.16344656323164, max mem: 85.05078125, count: 55099"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.489461522593634, max cpu: 4.6829267, count: 55099"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 60.59375,
            "unit": "median mem",
            "extra": "avg mem: 59.63628862933084, max mem: 84.03125, count: 55099"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.169055,
            "unit": "median cpu",
            "extra": "avg cpu: 7.255784393257529, max cpu: 18.916256, count: 110198"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 73.00390625,
            "unit": "median mem",
            "extra": "avg mem: 73.35650980933184, max mem: 103.0078125, count: 110198"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 3843,
            "unit": "median block_count",
            "extra": "avg block_count: 3783.9804715149094, max block_count: 6818.0, count: 55099"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 8,
            "unit": "median segment_count",
            "extra": "avg segment_count: 8.890016152743245, max segment_count: 28.0, count: 55099"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 6.1094536593954585, max cpu: 18.461538, count: 55099"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 78.00390625,
            "unit": "median mem",
            "extra": "avg mem: 77.20159869904626, max mem: 105.8984375, count: 55099"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.317881804680662, max cpu: 4.64666, count: 55099"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 61.92578125,
            "unit": "median mem",
            "extra": "avg mem: 59.91036333463402, max mem: 84.99609375, count: 55099"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755715449765,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.736707832237801, max cpu: 9.571285, count: 55183"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 59.87890625,
            "unit": "median mem",
            "extra": "avg mem: 59.62295347129098, max mem: 83.0, count: 55183"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.61458010364591, max cpu: 9.284333, count: 55183"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 53.58984375,
            "unit": "median mem",
            "extra": "avg mem: 52.99249875131381, max mem: 75.44921875, count: 55183"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.782903485710618, max cpu: 9.619239, count: 55183"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 61.22265625,
            "unit": "median mem",
            "extra": "avg mem: 60.97361768173622, max mem: 85.0390625, count: 55183"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.2980698390839995, max cpu: 4.7151275, count: 55183"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 59.73828125,
            "unit": "median mem",
            "extra": "avg mem: 59.669003163338346, max mem: 83.0703125, count: 55183"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.204219,
            "unit": "median cpu",
            "extra": "avg cpu: 7.491760605578794, max cpu: 28.91566, count: 110366"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 75.046875,
            "unit": "median mem",
            "extra": "avg mem: 75.17659572751118, max mem: 104.39453125, count: 110366"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 3683,
            "unit": "median block_count",
            "extra": "avg block_count: 3692.824547414965, max block_count: 6637.0, count: 55183"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 8,
            "unit": "median segment_count",
            "extra": "avg segment_count: 8.92231303118714, max segment_count: 27.0, count: 55183"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.173730587157698, max cpu: 14.243324, count: 55183"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 78.53515625,
            "unit": "median mem",
            "extra": "avg mem: 77.67199908995977, max mem: 105.15234375, count: 55183"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 2.589938720104196, max cpu: 9.29332, count: 55183"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 57.53125,
            "unit": "median mem",
            "extra": "avg mem: 57.18876291441658, max mem: 83.578125, count: 55183"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755715496372,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.765865028409586, max cpu: 9.628887, count: 55217"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 60.4453125,
            "unit": "median mem",
            "extra": "avg mem: 60.31556907010069, max mem: 82.87109375, count: 55217"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.654006232620673, max cpu: 9.421001, count: 55217"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 54.00390625,
            "unit": "median mem",
            "extra": "avg mem: 53.67067922073365, max mem: 76.1015625, count: 55217"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.711898670014493, max cpu: 9.657948, count: 55217"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 60.3828125,
            "unit": "median mem",
            "extra": "avg mem: 61.22373692941033, max mem: 84.15625, count: 55217"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.302178877400693, max cpu: 4.8096194, count: 55217"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 59.87890625,
            "unit": "median mem",
            "extra": "avg mem: 59.99216889443016, max mem: 83.35546875, count: 55217"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 7.623292340933352, max cpu: 33.633633, count: 110434"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 68.6484375,
            "unit": "median mem",
            "extra": "avg mem: 68.70816831206875, max mem: 103.90234375, count: 110434"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 3671,
            "unit": "median block_count",
            "extra": "avg block_count: 3683.9262727058695, max block_count: 6592.0, count: 55217"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 8,
            "unit": "median segment_count",
            "extra": "avg segment_count: 8.920477389209845, max segment_count: 28.0, count: 55217"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.673807,
            "unit": "median cpu",
            "extra": "avg cpu: 6.474361717252339, max cpu: 14.4, count: 55217"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 68.62109375,
            "unit": "median mem",
            "extra": "avg mem: 68.05046262077349, max mem: 95.48828125, count: 55217"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.997181552340484, max cpu: 9.302325, count: 55217"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 59.10546875,
            "unit": "median mem",
            "extra": "avg mem: 58.08749944819983, max mem: 82.7734375, count: 55217"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755715528446,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 7.494145,
            "unit": "median cpu",
            "extra": "avg cpu: 7.218016200246679, max cpu: 27.639154, count: 55218"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 97.26953125,
            "unit": "median mem",
            "extra": "avg mem: 96.48787886762469, max mem: 99.1953125, count: 55218"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.617936307660204, max cpu: 9.230769, count: 55218"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.1796875,
            "unit": "median mem",
            "extra": "avg mem: 86.70871166331631, max mem: 88.953125, count: 55218"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.7151275,
            "unit": "median cpu",
            "extra": "avg cpu: 7.123484248283452, max cpu: 23.188406, count: 55218"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 97.97265625,
            "unit": "median mem",
            "extra": "avg mem: 97.08497512133725, max mem: 99.68359375, count: 55218"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 4.585503277005196, max cpu: 4.738401, count: 55218"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 95.42578125,
            "unit": "median mem",
            "extra": "avg mem: 94.6939390376553, max mem: 96.19140625, count: 55218"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.204219,
            "unit": "median cpu",
            "extra": "avg cpu: 7.825029671532665, max cpu: 23.59882, count: 110436"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 107.09765625,
            "unit": "median mem",
            "extra": "avg mem: 106.87385761747754, max mem: 118.6171875, count: 110436"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8295,
            "unit": "median block_count",
            "extra": "avg block_count: 8256.86323300373, max block_count: 8295.0, count: 55218"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 119,
            "unit": "median segment_count",
            "extra": "avg segment_count: 118.87002426744903, max segment_count: 376.0, count: 55218"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 6.1509034103972775, max cpu: 18.497108, count: 55218"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 115.03125,
            "unit": "median mem",
            "extra": "avg mem: 114.806303184084, max mem: 121.16015625, count: 55218"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 18.479307,
            "unit": "median cpu",
            "extra": "avg cpu: 16.83223000910111, max cpu: 32.43243, count: 55218"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 98.19921875,
            "unit": "median mem",
            "extra": "avg mem: 95.3868237316183, max mem: 99.7421875, count: 55218"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755724633473,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.792893827557509, max cpu: 9.458128, count: 55222"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 59.9453125,
            "unit": "median mem",
            "extra": "avg mem: 60.17221496301293, max mem: 83.24609375, count: 55222"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.636582444708272, max cpu: 9.284333, count: 55222"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 54.34765625,
            "unit": "median mem",
            "extra": "avg mem: 53.41448883314168, max mem: 77.96875, count: 55222"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.756704270616309, max cpu: 9.571285, count: 55222"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 60.203125,
            "unit": "median mem",
            "extra": "avg mem: 60.92965489014795, max mem: 85.9453125, count: 55222"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.411199437695918, max cpu: 4.738401, count: 55222"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 58.578125,
            "unit": "median mem",
            "extra": "avg mem: 59.64601291152077, max mem: 82.8203125, count: 55222"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.204219,
            "unit": "median cpu",
            "extra": "avg cpu: 7.455907291560713, max cpu: 23.59882, count: 110444"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 74.4921875,
            "unit": "median mem",
            "extra": "avg mem: 74.51784094908959, max mem: 105.0703125, count: 110444"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 3661,
            "unit": "median block_count",
            "extra": "avg block_count: 3698.721687008801, max block_count: 6669.0, count: 55222"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 8,
            "unit": "median segment_count",
            "extra": "avg segment_count: 8.907138459309696, max segment_count: 28.0, count: 55222"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.135763201514212, max cpu: 14.428859, count: 55222"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 78.51171875,
            "unit": "median mem",
            "extra": "avg mem: 78.49277214300913, max mem: 107.6875, count: 55222"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.298346751273304, max cpu: 4.64666, count: 55222"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 59.38671875,
            "unit": "median mem",
            "extra": "avg mem: 58.39812279016968, max mem: 83.40234375, count: 55222"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T13:19:49-04:00",
          "tree_id": "26f07dc326d4e53d8df249d9268a911b9d59d86b",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755724681993,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.767901891807581, max cpu: 9.657948, count: 55406"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 90.03515625,
            "unit": "median mem",
            "extra": "avg mem: 92.30945119887738, max mem: 150.4609375, count: 55406"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.681618315321331, max cpu: 9.338522, count: 55406"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 85.08203125,
            "unit": "median mem",
            "extra": "avg mem: 87.34204067192633, max mem: 144.66015625, count: 55406"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.773798362830636, max cpu: 9.523809, count: 55406"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 92.90625,
            "unit": "median mem",
            "extra": "avg mem: 94.90233669977079, max mem: 152.78125, count: 55406"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.54504335711515, max cpu: 4.733728, count: 55406"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.26171875,
            "unit": "median mem",
            "extra": "avg mem: 94.48436541168826, max mem: 152.4375, count: 55406"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.266409,
            "unit": "median cpu",
            "extra": "avg cpu: 8.836221282638723, max cpu: 28.77123, count: 110812"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.78125,
            "unit": "median mem",
            "extra": "avg mem: 106.6304252923871, max mem: 171.4609375, count: 110812"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7829,
            "unit": "median block_count",
            "extra": "avg block_count: 8087.375212070895, max block_count: 15433.0, count: 55406"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.727646825253583, max segment_count: 44.0, count: 55406"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.678363,
            "unit": "median cpu",
            "extra": "avg cpu: 7.107703068317833, max cpu: 33.802814, count: 55406"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 106.16015625,
            "unit": "median mem",
            "extra": "avg mem: 107.66227202378803, max mem: 171.48828125, count: 55406"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.930217358023299, max cpu: 9.365853, count: 55406"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 85.8125,
            "unit": "median mem",
            "extra": "avg mem: 84.95485188314443, max mem: 142.828125, count: 55406"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755724990767,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.7244096,
            "unit": "median cpu",
            "extra": "avg cpu: 7.169595769854749, max cpu: 23.645319, count: 55305"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 110.140625,
            "unit": "median mem",
            "extra": "avg mem: 105.94309885238677, max mem: 112.26171875, count: 55305"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.641287057478375, max cpu: 9.302325, count: 55305"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 91.8671875,
            "unit": "median mem",
            "extra": "avg mem: 88.38590613981557, max mem: 91.8671875, count: 55305"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.733728,
            "unit": "median cpu",
            "extra": "avg cpu: 7.214689590140456, max cpu: 23.645319, count: 55305"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 110.6796875,
            "unit": "median mem",
            "extra": "avg mem: 106.04537246575806, max mem: 112.85546875, count: 55305"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.625082354699752, max cpu: 9.275363, count: 55305"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 107.8984375,
            "unit": "median mem",
            "extra": "avg mem: 103.14105542559443, max mem: 108.2734375, count: 55305"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 7.680059757378835, max cpu: 23.622047, count: 110610"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 121.9921875,
            "unit": "median mem",
            "extra": "avg mem: 118.54258818992406, max mem: 129.33984375, count: 110610"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 10175,
            "unit": "median block_count",
            "extra": "avg block_count: 9549.855130639182, max block_count: 10175.0, count: 55305"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 119,
            "unit": "median segment_count",
            "extra": "avg segment_count: 118.65413615405478, max segment_count: 346.0, count: 55305"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 6.064587030060571, max cpu: 18.514948, count: 55305"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 119.66796875,
            "unit": "median mem",
            "extra": "avg mem: 117.79450207937799, max mem: 126.65234375, count: 55305"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 18.461538,
            "unit": "median cpu",
            "extra": "avg cpu: 16.589215135711523, max cpu: 28.263002, count: 55305"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 97.203125,
            "unit": "median mem",
            "extra": "avg mem: 93.37971031382786, max mem: 98.046875, count: 55305"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755725042074,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.758665140319465, max cpu: 9.476802, count: 55285"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.22265625,
            "unit": "median mem",
            "extra": "avg mem: 96.25204882936148, max mem: 153.15625, count: 55285"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.622598740036425, max cpu: 9.430255, count: 55285"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 90.92578125,
            "unit": "median mem",
            "extra": "avg mem: 88.71810490526363, max mem: 146.38671875, count: 55285"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.774934073139636, max cpu: 9.402546, count: 55285"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 99.453125,
            "unit": "median mem",
            "extra": "avg mem: 97.4422381607805, max mem: 153.51953125, count: 55285"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.567626199658905, max cpu: 4.6829267, count: 55285"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 99.9609375,
            "unit": "median mem",
            "extra": "avg mem: 97.36396011859003, max mem: 154.3671875, count: 55285"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.239654,
            "unit": "median cpu",
            "extra": "avg cpu: 8.524579182750887, max cpu: 27.906979, count: 110570"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 112.83984375,
            "unit": "median mem",
            "extra": "avg mem: 109.84729872761599, max mem: 172.87109375, count: 110570"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8727,
            "unit": "median block_count",
            "extra": "avg block_count: 8434.881613457539, max block_count: 15841.0, count: 55285"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.663254047209913, max segment_count: 43.0, count: 55285"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 6.6662999179468025, max cpu: 18.953604, count: 55285"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 118.55859375,
            "unit": "median mem",
            "extra": "avg mem: 115.42717304366012, max mem: 176.73046875, count: 55285"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6829267,
            "unit": "median cpu",
            "extra": "avg cpu: 6.510061060520302, max cpu: 13.88621, count: 55285"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 93.28515625,
            "unit": "median mem",
            "extra": "avg mem: 89.5196209132224, max mem: 146.46484375, count: 55285"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755725059364,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.759207703721713, max cpu: 9.476802, count: 55283"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 59.21875,
            "unit": "median mem",
            "extra": "avg mem: 59.48304116715356, max mem: 83.22265625, count: 55283"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.616716729006913, max cpu: 9.320388, count: 55283"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 53.578125,
            "unit": "median mem",
            "extra": "avg mem: 53.82879173977534, max mem: 77.16015625, count: 55283"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.753208109511162, max cpu: 9.467456, count: 55283"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 61.2421875,
            "unit": "median mem",
            "extra": "avg mem: 61.121692162373606, max mem: 84.07421875, count: 55283"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.249726531361151, max cpu: 4.7244096, count: 55283"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 61.52734375,
            "unit": "median mem",
            "extra": "avg mem: 60.73168875094966, max mem: 84.15625, count: 55283"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.303011509552543, max cpu: 24.048098, count: 110566"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 63.078125,
            "unit": "median mem",
            "extra": "avg mem: 63.86547451013422, max mem: 92.80859375, count: 110566"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 3764,
            "unit": "median block_count",
            "extra": "avg block_count: 3752.3775844292095, max block_count: 6732.0, count: 55283"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 8,
            "unit": "median segment_count",
            "extra": "avg segment_count: 8.939276088490132, max segment_count: 28.0, count: 55283"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.128815230704097, max cpu: 14.145383, count: 55283"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 68.0859375,
            "unit": "median mem",
            "extra": "avg mem: 67.59847412970534, max mem: 95.6953125, count: 55283"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.817697263733153, max cpu: 9.448819, count: 55283"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 59.66015625,
            "unit": "median mem",
            "extra": "avg mem: 59.4088214279254, max mem: 84.94140625, count: 55283"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755726152063,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.756071577172462, max cpu: 9.467456, count: 55251"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 61.1171875,
            "unit": "median mem",
            "extra": "avg mem: 60.68258754649237, max mem: 84.6796875, count: 55251"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.663668912757657, max cpu: 9.411765, count: 55251"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 53.3984375,
            "unit": "median mem",
            "extra": "avg mem: 53.30086913019674, max mem: 77.46875, count: 55251"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.786378217931747, max cpu: 9.458128, count: 55251"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 61.33203125,
            "unit": "median mem",
            "extra": "avg mem: 61.280318102274165, max mem: 86.0546875, count: 55251"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.187186959778631, max cpu: 4.733728, count: 55251"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 59.8359375,
            "unit": "median mem",
            "extra": "avg mem: 59.19488928933413, max mem: 82.73046875, count: 55251"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.2284016204457515, max cpu: 18.934912, count: 110502"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 74.36328125,
            "unit": "median mem",
            "extra": "avg mem: 74.66756148220168, max mem: 103.64453125, count: 110502"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 3773,
            "unit": "median block_count",
            "extra": "avg block_count: 3765.625328048361, max block_count: 6761.0, count: 55251"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 8,
            "unit": "median segment_count",
            "extra": "avg segment_count: 8.917829541546759, max segment_count: 27.0, count: 55251"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 6.069954991225789, max cpu: 14.187191, count: 55251"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 79.58203125,
            "unit": "median mem",
            "extra": "avg mem: 79.04572463903368, max mem: 106.52734375, count: 55251"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7995945105934705, max cpu: 9.29332, count: 55251"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 59.9140625,
            "unit": "median mem",
            "extra": "avg mem: 58.93570718742647, max mem: 84.39453125, count: 55251"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755794895362,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.739570589979831, max cpu: 9.514371, count: 55179"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.9140625,
            "unit": "median mem",
            "extra": "avg mem: 98.19707551219668, max mem: 153.203125, count: 55179"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.654705491408566, max cpu: 9.430255, count: 55179"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 91.828125,
            "unit": "median mem",
            "extra": "avg mem: 90.51968840897352, max mem: 144.94921875, count: 55179"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.77063254378312, max cpu: 9.514371, count: 55179"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 101.9765625,
            "unit": "median mem",
            "extra": "avg mem: 100.13572064893347, max mem: 155.546875, count: 55179"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.715072576530571, max cpu: 9.393347, count: 55179"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 100.39453125,
            "unit": "median mem",
            "extra": "avg mem: 99.44605065162925, max mem: 154.78515625, count: 55179"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.266409,
            "unit": "median cpu",
            "extra": "avg cpu: 8.678696830113436, max cpu: 28.77123, count: 110358"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 112.171875,
            "unit": "median mem",
            "extra": "avg mem: 111.36295171170191, max mem: 174.265625, count: 110358"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8908,
            "unit": "median block_count",
            "extra": "avg block_count: 8773.44228782689, max block_count: 16553.0, count: 55179"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.704398412439515, max segment_count: 41.0, count: 55179"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.669261,
            "unit": "median cpu",
            "extra": "avg cpu: 6.789611768530064, max cpu: 23.166023, count: 55179"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 117.21484375,
            "unit": "median mem",
            "extra": "avg mem: 116.12246025435401, max mem: 177.234375, count: 55179"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 4.567168652413453, max cpu: 9.302325, count: 55179"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 89.046875,
            "unit": "median mem",
            "extra": "avg mem: 88.23257963570833, max mem: 144.03515625, count: 55179"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755797106467,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.759531985476192, max cpu: 9.476802, count: 55359"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 97.0234375,
            "unit": "median mem",
            "extra": "avg mem: 97.73677637105078, max mem: 155.1796875, count: 55359"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7211353179137525, max cpu: 9.356726, count: 55359"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 90.54296875,
            "unit": "median mem",
            "extra": "avg mem: 90.54917123344894, max mem: 147.328125, count: 55359"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.745830375721818, max cpu: 9.504951, count: 55359"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 97.37109375,
            "unit": "median mem",
            "extra": "avg mem: 97.71399749814844, max mem: 154.53515625, count: 55359"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.796174154701137, max cpu: 9.221902, count: 55359"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 97.69140625,
            "unit": "median mem",
            "extra": "avg mem: 97.42589294988169, max mem: 152.75, count: 55359"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.248554,
            "unit": "median cpu",
            "extra": "avg cpu: 8.312841028812521, max cpu: 28.235296, count: 110718"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 109.3046875,
            "unit": "median mem",
            "extra": "avg mem: 109.47327215171653, max mem: 172.6484375, count: 110718"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8495,
            "unit": "median block_count",
            "extra": "avg block_count: 8587.801405372207, max block_count: 16475.0, count: 55359"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.690529091927239, max segment_count: 34.0, count: 55359"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.660194,
            "unit": "median cpu",
            "extra": "avg cpu: 6.623520267125766, max cpu: 23.323614, count: 55359"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 108.7890625,
            "unit": "median mem",
            "extra": "avg mem: 112.46782090818566, max mem: 173.4375, count: 55359"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.376552556145959, max cpu: 4.678363, count: 55359"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.73828125,
            "unit": "median mem",
            "extra": "avg mem: 89.21277014013079, max mem: 147.65625, count: 55359"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bb7c02ed7b398872104e7879aed251dd18a6414",
          "message": "fix: don't ERROR if `paradedb.terms_with_operator` is missing (#3013)\n\n\n## What\n\nIt's possible that when upgrading pg_search from `v0.15.26` to `v0.17.x`\nwe could generate an ERROR complaining that\n`paradedb.terms_with_operator(...)` doesn't exist if the user upgraded\nthe extension binary but has not yet run `ALTER EXTENSION pg_search\nUPDATE;`.\n\nThis fixes that by inspecting the catalogs directly when it's necessary\nto lookup that function and plumbing through an `Option<pg_sys::Oid>`\nreturn value.\n\n## Why\n\nTo help users/customers/partners better deal with upgrading from really\nold pg_search versions.\n\n## How\n\n## Tests\n\nExisting tests pass, especially the ones added in #2730, and a new\nregress test has been added that explicitly removes the function from\nthe schema and ensures the query still works (tho with a different plan,\nof course).",
          "timestamp": "2025-08-21T15:17:35-04:00",
          "tree_id": "4c5e053bc28da403546f6c1b9ad61b9b62a75bdf",
          "url": "https://github.com/paradedb/paradedb/commit/2bb7c02ed7b398872104e7879aed251dd18a6414"
        },
        "date": 1755804856255,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.781164602908165, max cpu: 14.131501, count: 55214"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.03125,
            "unit": "median mem",
            "extra": "avg mem: 97.91913219190332, max mem: 153.8359375, count: 55214"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.644842013136253, max cpu: 9.257474, count: 55214"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 91.7578125,
            "unit": "median mem",
            "extra": "avg mem: 91.83927267654038, max mem: 149.02734375, count: 55214"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.754549284340318, max cpu: 9.486166, count: 55214"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 98.5,
            "unit": "median mem",
            "extra": "avg mem: 98.54448394825135, max mem: 153.73828125, count: 55214"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.3846503182917544, max cpu: 4.729064, count: 55214"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 97.28515625,
            "unit": "median mem",
            "extra": "avg mem: 98.02109646670229, max mem: 154.14453125, count: 55214"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 8.166536219731084, max cpu: 27.853, count: 110428"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 108.90234375,
            "unit": "median mem",
            "extra": "avg mem: 109.0450717888579, max mem: 172.66015625, count: 110428"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8567,
            "unit": "median block_count",
            "extra": "avg block_count: 8644.472108523201, max block_count: 16349.0, count: 55214"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.69725069728692, max segment_count: 37.0, count: 55214"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.70931876931444, max cpu: 18.75, count: 55214"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 114.265625,
            "unit": "median mem",
            "extra": "avg mem: 113.27378048366356, max mem: 173.33984375, count: 55214"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.617249665143023, max cpu: 9.320388, count: 55214"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 92.2578125,
            "unit": "median mem",
            "extra": "avg mem: 89.46111083126561, max mem: 148.05859375, count: 55214"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ori@eigenstate.org",
            "name": "Ori Bernstein",
            "username": "oridb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "97ad25718b14ab34440c0587cb8bb9968598bf7d",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:11:27-04:00",
          "tree_id": "74eee4eb0e1503ed631c849c97ccf32653c4e203",
          "url": "https://github.com/paradedb/paradedb/commit/97ad25718b14ab34440c0587cb8bb9968598bf7d"
        },
        "date": 1755811649640,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.803854728177791, max cpu: 9.514371, count: 55131"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 92.58984375,
            "unit": "median mem",
            "extra": "avg mem: 91.40810105986196, max mem: 144.38671875, count: 55131"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7284067038903315, max cpu: 9.311348, count: 55131"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 86.359375,
            "unit": "median mem",
            "extra": "avg mem: 85.01707254652555, max mem: 138.53125, count: 55131"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.775669739414616, max cpu: 9.514371, count: 55131"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 92.87109375,
            "unit": "median mem",
            "extra": "avg mem: 92.11093074053164, max mem: 145.5390625, count: 55131"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 3.7044884734676935, max cpu: 4.7058825, count: 55131"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 94.2265625,
            "unit": "median mem",
            "extra": "avg mem: 91.67224592051205, max mem: 145.0546875, count: 55131"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.257474,
            "unit": "median cpu",
            "extra": "avg cpu: 8.546025690699748, max cpu: 32.526623, count: 110262"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 101.16796875,
            "unit": "median mem",
            "extra": "avg mem: 99.13176938791243, max mem: 157.90625, count: 110262"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7902,
            "unit": "median block_count",
            "extra": "avg block_count: 7751.06176198509, max block_count: 14505.0, count: 55131"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.611724800928696, max segment_count: 31.0, count: 55131"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.660194,
            "unit": "median cpu",
            "extra": "avg cpu: 6.716924787361683, max cpu: 19.009901, count: 55131"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 106.8828125,
            "unit": "median mem",
            "extra": "avg mem: 106.02973308744173, max mem: 160.78515625, count: 55131"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.783820461737386, max cpu: 9.320388, count: 55131"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 85.1640625,
            "unit": "median mem",
            "extra": "avg mem: 83.29071247630644, max mem: 134.11328125, count: 55131"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f2428be0ee6a082b53176d781e62ee2519ccccc",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015) (#3016)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ori Bernstein <ori@eigenstate.org>\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:33:35-04:00",
          "tree_id": "b3df08f37cb0652f7b23674356d6a786d632a136",
          "url": "https://github.com/paradedb/paradedb/commit/7f2428be0ee6a082b53176d781e62ee2519ccccc"
        },
        "date": 1755812978349,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.714308591819078, max cpu: 9.648242, count: 55192"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 93.3203125,
            "unit": "median mem",
            "extra": "avg mem: 92.24792457466661, max mem: 146.34765625, count: 55192"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.613434815405436, max cpu: 9.504951, count: 55192"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 86.3046875,
            "unit": "median mem",
            "extra": "avg mem: 85.64166179258316, max mem: 139.80859375, count: 55192"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.756074602058195, max cpu: 14.117648, count: 55192"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 94.85546875,
            "unit": "median mem",
            "extra": "avg mem: 93.33320810760617, max mem: 147.59375, count: 55192"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.498046325471212, max cpu: 4.701273, count: 55192"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.5,
            "unit": "median mem",
            "extra": "avg mem: 92.1681200683523, max mem: 146.734375, count: 55192"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 8.41762820982373, max cpu: 28.713858, count: 110384"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 103.15625,
            "unit": "median mem",
            "extra": "avg mem: 101.15111306750752, max mem: 160.9140625, count: 110384"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8030,
            "unit": "median block_count",
            "extra": "avg block_count: 7887.8976119727495, max block_count: 14839.0, count: 55192"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.613259167995361, max segment_count: 27.0, count: 55192"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.655674,
            "unit": "median cpu",
            "extra": "avg cpu: 6.911610585427996, max cpu: 28.235296, count: 55192"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 107.466796875,
            "unit": "median mem",
            "extra": "avg mem: 106.16671226978094, max mem: 164.4140625, count: 55192"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.296022079424996, max cpu: 9.375, count: 55192"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.83203125,
            "unit": "median mem",
            "extra": "avg mem: 85.94240128494619, max mem: 140.4375, count: 55192"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f929495a112d17ce5992a41cbd1d3b05aa17cbb",
          "message": "chore: Upgrade to `0.17.6` (#3017)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-21T18:03:19-04:00",
          "tree_id": "f3d6f5fb6a9f1748954b75791999f0080ecf1fb5",
          "url": "https://github.com/paradedb/paradedb/commit/4f929495a112d17ce5992a41cbd1d3b05aa17cbb"
        },
        "date": 1755814759294,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 4.785785024961691, max cpu: 9.67742, count: 55241"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 93.51171875,
            "unit": "median mem",
            "extra": "avg mem: 92.27627874336996, max mem: 141.328125, count: 55241"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 4.629341032048114, max cpu: 9.347614, count: 55241"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 86.29296875,
            "unit": "median mem",
            "extra": "avg mem: 84.12697232354591, max mem: 133.2890625, count: 55241"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.757198301710887, max cpu: 9.619239, count: 55241"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 92.87109375,
            "unit": "median mem",
            "extra": "avg mem: 92.65117076480784, max mem: 142.6328125, count: 55241"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.601515517532544, max cpu: 4.743083, count: 55241"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.5859375,
            "unit": "median mem",
            "extra": "avg mem: 92.23699484135425, max mem: 141.61328125, count: 55241"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.257474,
            "unit": "median cpu",
            "extra": "avg cpu: 8.610058160639927, max cpu: 38.63179, count: 110482"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.00390625,
            "unit": "median mem",
            "extra": "avg mem: 101.58871778887058, max mem: 155.19921875, count: 110482"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7989,
            "unit": "median block_count",
            "extra": "avg block_count: 7789.359352654731, max block_count: 14081.0, count: 55241"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.557412067124057, max segment_count: 28.0, count: 55241"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6829267,
            "unit": "median cpu",
            "extra": "avg cpu: 6.7509362642337605, max cpu: 23.210833, count: 55241"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 111.203125,
            "unit": "median mem",
            "extra": "avg mem: 109.38802863532068, max mem: 163.08984375, count: 55241"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 3.876947500687661, max cpu: 4.743083, count: 55241"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 87.05078125,
            "unit": "median mem",
            "extra": "avg mem: 85.06652469406781, max mem: 134.86328125, count: 55241"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755834373138,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.747819714644986, max cpu: 9.542743, count: 55102"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 94.921875,
            "unit": "median mem",
            "extra": "avg mem: 92.71564595545534, max mem: 145.3359375, count: 55102"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.691807649389546, max cpu: 9.302325, count: 55102"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 89.38671875,
            "unit": "median mem",
            "extra": "avg mem: 86.78287319709356, max mem: 138.796875, count: 55102"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.729409249518492, max cpu: 9.476802, count: 55102"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 95.140625,
            "unit": "median mem",
            "extra": "avg mem: 93.8564895840895, max mem: 146.53515625, count: 55102"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.565528351350581, max cpu: 4.7244096, count: 55102"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 96.2421875,
            "unit": "median mem",
            "extra": "avg mem: 93.0405668124569, max mem: 144.34375, count: 55102"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.239654,
            "unit": "median cpu",
            "extra": "avg cpu: 8.487052319934998, max cpu: 28.742516, count: 110204"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 106.8359375,
            "unit": "median mem",
            "extra": "avg mem: 105.41996759986026, max mem: 162.8046875, count: 110204"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8243,
            "unit": "median block_count",
            "extra": "avg block_count: 8024.6505390003995, max block_count: 14620.0, count: 55102"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.602373779536133, max segment_count: 28.0, count: 55102"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 6.825304529248399, max cpu: 23.66864, count: 55102"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 112.5546875,
            "unit": "median mem",
            "extra": "avg mem: 110.61238206530616, max mem: 166.7265625, count: 55102"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 5.284363540057443, max cpu: 9.29332, count: 55102"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 87.1328125,
            "unit": "median mem",
            "extra": "avg mem: 85.84920749246851, max mem: 139.1328125, count: 55102"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755834674542,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.785809566256347, max cpu: 9.448819, count: 55253"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 89.98828125,
            "unit": "median mem",
            "extra": "avg mem: 91.28049346585253, max mem: 144.26171875, count: 55253"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.679723969838234, max cpu: 9.275363, count: 55253"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 85.17578125,
            "unit": "median mem",
            "extra": "avg mem: 85.43827420852713, max mem: 138.046875, count: 55253"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.770247417723291, max cpu: 9.628887, count: 55253"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 90.16796875,
            "unit": "median mem",
            "extra": "avg mem: 90.84172048633106, max mem: 142.97265625, count: 55253"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.4413726031867675, max cpu: 4.6421666, count: 55253"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 91.25390625,
            "unit": "median mem",
            "extra": "avg mem: 91.07245696783433, max mem: 142.82421875, count: 55253"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.230769,
            "unit": "median cpu",
            "extra": "avg cpu: 8.107218796182243, max cpu: 27.906979, count: 110506"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 101.0703125,
            "unit": "median mem",
            "extra": "avg mem: 101.18564383664688, max mem: 157.70703125, count: 110506"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7744,
            "unit": "median block_count",
            "extra": "avg block_count: 7742.546250882305, max block_count: 14417.0, count: 55253"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.595261795739598, max segment_count: 32.0, count: 55253"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.875402256007984, max cpu: 23.166023, count: 55253"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 104.95703125,
            "unit": "median mem",
            "extra": "avg mem: 105.60944675798147, max mem: 162.8828125, count: 55253"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.372626629164036, max cpu: 9.213051, count: 55253"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 87.78515625,
            "unit": "median mem",
            "extra": "avg mem: 85.77296997730892, max mem: 138.22265625, count: 55253"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "74e58071d8682e5f1a784791d82619ae41994f0b",
          "message": "fix: restore the garbage list (#3021)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:21-04:00",
          "tree_id": "3455b2de8f4efa7f45573d0f6a731fe933e7cedb",
          "url": "https://github.com/paradedb/paradedb/commit/74e58071d8682e5f1a784791d82619ae41994f0b"
        },
        "date": 1755834679659,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.774356741264601, max cpu: 9.458128, count: 55214"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 90.921875,
            "unit": "median mem",
            "extra": "avg mem: 93.01796886319593, max mem: 150.72265625, count: 55214"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.657601856814395, max cpu: 9.421001, count: 55214"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 84.56640625,
            "unit": "median mem",
            "extra": "avg mem: 85.82328884544681, max mem: 142.16796875, count: 55214"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7608125606818765, max cpu: 9.448819, count: 55214"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 91.00390625,
            "unit": "median mem",
            "extra": "avg mem: 92.91243955337414, max mem: 150.87109375, count: 55214"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.175894358523823, max cpu: 4.6647234, count: 55214"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 91.328125,
            "unit": "median mem",
            "extra": "avg mem: 92.72617133731934, max mem: 149.72265625, count: 55214"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 8.01582682118821, max cpu: 27.799229, count: 110428"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 100.9453125,
            "unit": "median mem",
            "extra": "avg mem: 101.7385257532057, max mem: 165.33984375, count: 110428"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7783,
            "unit": "median block_count",
            "extra": "avg block_count: 7961.58124750969, max block_count: 15256.0, count: 55214"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.616311080523056, max segment_count: 29.0, count: 55214"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.867704093221378, max cpu: 18.622696, count: 55214"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.51171875,
            "unit": "median mem",
            "extra": "avg mem: 106.29618018924096, max mem: 167.98046875, count: 55214"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.505364556847967, max cpu: 4.6332045, count: 55214"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 84.62109375,
            "unit": "median mem",
            "extra": "avg mem: 84.20811637447024, max mem: 140.73828125, count: 55214"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fbe8d2ee63335d61db9665e1eec916cc530f7a0",
          "message": "chore: Upgrade to `0.17.7` (#3024)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T10:27:16-04:00",
          "tree_id": "d8a53236b167b06e2b4e1beaeaf72fb424454256",
          "url": "https://github.com/paradedb/paradedb/commit/5fbe8d2ee63335d61db9665e1eec916cc530f7a0"
        },
        "date": 1755873801060,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.751587759932189, max cpu: 9.523809, count: 55289"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 88.83984375,
            "unit": "median mem",
            "extra": "avg mem: 89.13228445079491, max mem: 145.01171875, count: 55289"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.641061690383177, max cpu: 9.284333, count: 55289"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 81.97265625,
            "unit": "median mem",
            "extra": "avg mem: 82.4654614559406, max mem: 137.82421875, count: 55289"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.764187736520612, max cpu: 9.523809, count: 55289"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 89.390625,
            "unit": "median mem",
            "extra": "avg mem: 89.63206401815913, max mem: 144.8203125, count: 55289"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.395240307024582, max cpu: 4.733728, count: 55289"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 89.47265625,
            "unit": "median mem",
            "extra": "avg mem: 89.89087983990939, max mem: 144.859375, count: 55289"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.221902,
            "unit": "median cpu",
            "extra": "avg cpu: 8.244768832524178, max cpu: 28.886658, count: 110578"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 100.59765625,
            "unit": "median mem",
            "extra": "avg mem: 100.4378968493959, max mem: 161.09765625, count: 110578"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7446,
            "unit": "median block_count",
            "extra": "avg block_count: 7544.977409611315, max block_count: 14577.0, count: 55289"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.616361301524716, max segment_count: 26.0, count: 55289"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6647234,
            "unit": "median cpu",
            "extra": "avg cpu: 6.876215926758416, max cpu: 23.143684, count: 55289"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.85546875,
            "unit": "median mem",
            "extra": "avg mem: 105.74396586854981, max mem: 164.87109375, count: 55289"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 3.8536136232378935, max cpu: 4.7151275, count: 55289"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 80.83984375,
            "unit": "median mem",
            "extra": "avg mem: 81.17079678767476, max mem: 132.84375, count: 55289"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755887393067,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.751419238380519, max cpu: 9.619239, count: 55283"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 94.13671875,
            "unit": "median mem",
            "extra": "avg mem: 95.20017413241865, max mem: 153.953125, count: 55283"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.651537984555238, max cpu: 9.29332, count: 55283"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.06640625,
            "unit": "median mem",
            "extra": "avg mem: 88.20347546940289, max mem: 146.8671875, count: 55283"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.741616094630985, max cpu: 9.667674, count: 55283"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 94.421875,
            "unit": "median mem",
            "extra": "avg mem: 95.8737690468815, max mem: 153.84375, count: 55283"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 4.48003123106472, max cpu: 4.7197638, count: 55283"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 94.875,
            "unit": "median mem",
            "extra": "avg mem: 95.77304979322305, max mem: 154.77734375, count: 55283"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.230769,
            "unit": "median cpu",
            "extra": "avg cpu: 8.329340445354937, max cpu: 29.003021, count: 110566"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.4453125,
            "unit": "median mem",
            "extra": "avg mem: 105.50518394414874, max mem: 171.5703125, count: 110566"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8174,
            "unit": "median block_count",
            "extra": "avg block_count: 8330.103413345874, max block_count: 16173.0, count: 55283"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 9,
            "unit": "median segment_count",
            "extra": "avg segment_count: 9.549192337608307, max segment_count: 31.0, count: 55283"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.660194,
            "unit": "median cpu",
            "extra": "avg cpu: 6.774556443607171, max cpu: 19.277107, count: 55283"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 111.59375,
            "unit": "median mem",
            "extra": "avg mem: 110.78864660022069, max mem: 172.390625, count: 55283"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 9.580839,
            "unit": "median cpu",
            "extra": "avg cpu: 5.78834287811914, max cpu: 9.580839, count: 55283"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.9140625,
            "unit": "median mem",
            "extra": "avg mem: 86.12293964973409, max mem: 144.640625, count: 55283"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755890736138,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.737850013287732, max cpu: 9.590409, count: 55132"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 89.76171875,
            "unit": "median mem",
            "extra": "avg mem: 90.56476027137144, max mem: 146.41796875, count: 55132"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.747382034109143, max cpu: 9.504951, count: 55132"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 82.55859375,
            "unit": "median mem",
            "extra": "avg mem: 83.31995178900185, max mem: 139.9921875, count: 55132"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.752285597932011, max cpu: 9.687184, count: 55132"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 89.33203125,
            "unit": "median mem",
            "extra": "avg mem: 90.46603492527026, max mem: 147.578125, count: 55132"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.205262341904181, max cpu: 4.7524753, count: 55132"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 90.03125,
            "unit": "median mem",
            "extra": "avg mem: 90.19853105387978, max mem: 148.53515625, count: 55132"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.17782,
            "unit": "median cpu",
            "extra": "avg cpu: 7.404107350440047, max cpu: 24.120604, count: 110264"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 93.140625,
            "unit": "median mem",
            "extra": "avg mem: 94.24759377210604, max mem: 156.59765625, count: 110264"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7483,
            "unit": "median block_count",
            "extra": "avg block_count: 7580.616320830008, max block_count: 14740.0, count: 55132"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.567800914169629, max segment_count: 29.0, count: 55132"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 6.068139726513127, max cpu: 14.187191, count: 55132"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 97.625,
            "unit": "median mem",
            "extra": "avg mem: 97.73582861360009, max mem: 157.375, count: 55132"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.5448726944987, max cpu: 9.239654, count: 55132"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 84.171875,
            "unit": "median mem",
            "extra": "avg mem: 83.07177737917634, max mem: 138.6328125, count: 55132"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8386fa71d8c2979fb63993f4045d140aff8768fe",
          "message": "perf: optimize merging heuristics to prefer background merging (#3032)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:56-07:00",
          "tree_id": "fa86b284fe7c52c4cf1226cd910b7b9f1c0507d2",
          "url": "https://github.com/paradedb/paradedb/commit/8386fa71d8c2979fb63993f4045d140aff8768fe"
        },
        "date": 1755891838099,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7113551930053665, max cpu: 9.448819, count: 55056"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.7734375,
            "unit": "median mem",
            "extra": "avg mem: 98.01672423589164, max mem: 154.21875, count: 55056"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.64189445520576, max cpu: 9.257474, count: 55056"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 93.65234375,
            "unit": "median mem",
            "extra": "avg mem: 91.957962191337, max mem: 148.6875, count: 55056"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.747894305508804, max cpu: 9.458128, count: 55056"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 101.17578125,
            "unit": "median mem",
            "extra": "avg mem: 98.94771183261135, max mem: 154.35546875, count: 55056"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 4.531710853123497, max cpu: 4.729064, count: 55056"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 98.98828125,
            "unit": "median mem",
            "extra": "avg mem: 97.8098375120332, max mem: 154.83203125, count: 55056"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.142857,
            "unit": "median cpu",
            "extra": "avg cpu: 7.211816726388126, max cpu: 23.622047, count: 110112"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 107.18359375,
            "unit": "median mem",
            "extra": "avg mem: 106.23613418184439, max mem: 167.96484375, count: 110112"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8759,
            "unit": "median block_count",
            "extra": "avg block_count: 8623.386715344377, max block_count: 15969.0, count: 55056"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.68853530950305, max segment_count: 30.0, count: 55056"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 6.1119778777521425, max cpu: 18.532818, count: 55056"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.32421875,
            "unit": "median mem",
            "extra": "avg mem: 104.04042063421788, max mem: 161.75, count: 55056"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.575402095750174, max cpu: 9.257474, count: 55056"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 93.11328125,
            "unit": "median mem",
            "extra": "avg mem: 90.68922544488794, max mem: 149.41015625, count: 55056"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "de951c94cea485c109ffc396ae394d036babb97d",
          "message": "perf: optimize merging heuristics to prefer background merging (#3033)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:53-07:00",
          "tree_id": "f489cbf34a77726e0c2bc0f7f879b77d8c93cb47",
          "url": "https://github.com/paradedb/paradedb/commit/de951c94cea485c109ffc396ae394d036babb97d"
        },
        "date": 1755891843855,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.741331160840106, max cpu: 9.458128, count: 55154"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 89.20703125,
            "unit": "median mem",
            "extra": "avg mem: 91.26574476409236, max mem: 148.52734375, count: 55154"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.622634783050837, max cpu: 9.275363, count: 55154"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 83.26171875,
            "unit": "median mem",
            "extra": "avg mem: 85.23625560079505, max mem: 141.078125, count: 55154"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7572175733144135, max cpu: 9.619239, count: 55154"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 90.296875,
            "unit": "median mem",
            "extra": "avg mem: 91.84202351314048, max mem: 150.2265625, count: 55154"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.132112059787043, max cpu: 4.7058825, count: 55154"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 90.11328125,
            "unit": "median mem",
            "extra": "avg mem: 91.99880441298455, max mem: 148.4921875, count: 55154"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.160305,
            "unit": "median cpu",
            "extra": "avg cpu: 7.341693977257425, max cpu: 24.048098, count: 110308"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 94.046875,
            "unit": "median mem",
            "extra": "avg mem: 95.8965424156113, max mem: 159.14453125, count: 110308"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7493,
            "unit": "median block_count",
            "extra": "avg block_count: 7739.373680966022, max block_count: 14995.0, count: 55154"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.637052616310694, max segment_count: 28.0, count: 55154"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.942285532386458, max cpu: 14.131501, count: 55154"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 99.609375,
            "unit": "median mem",
            "extra": "avg mem: 100.39817042111633, max mem: 158.87890625, count: 55154"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.557278435288905, max cpu: 9.302325, count: 55154"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 83.3671875,
            "unit": "median mem",
            "extra": "avg mem: 84.47690911470609, max mem: 140.0078125, count: 55154"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a556c28327e5b7ca9b5196f4153d49bca00c90a6",
          "message": "chore: Upgrade to `0.17.18` (#3034)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T15:36:02-04:00",
          "tree_id": "9de75b3b13ca610745c645ca4046bddf6fe9eec4",
          "url": "https://github.com/paradedb/paradedb/commit/a556c28327e5b7ca9b5196f4153d49bca00c90a6"
        },
        "date": 1755892331908,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.749489382651631, max cpu: 9.402546, count: 55205"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.83203125,
            "unit": "median mem",
            "extra": "avg mem: 96.31521162598497, max mem: 151.16015625, count: 55205"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.670470699185967, max cpu: 9.284333, count: 55205"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 89.921875,
            "unit": "median mem",
            "extra": "avg mem: 88.31159584163572, max mem: 143.66796875, count: 55205"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.756081091085275, max cpu: 9.486166, count: 55205"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 99.08203125,
            "unit": "median mem",
            "extra": "avg mem: 97.50218779718776, max mem: 152.5625, count: 55205"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.422459631581886, max cpu: 4.7197638, count: 55205"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 98.3828125,
            "unit": "median mem",
            "extra": "avg mem: 96.1977783092564, max mem: 151.82421875, count: 55205"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.169055,
            "unit": "median cpu",
            "extra": "avg cpu: 7.256322360565983, max cpu: 22.900763, count: 110410"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 115.515625,
            "unit": "median mem",
            "extra": "avg mem: 113.31517776780862, max mem: 174.40234375, count: 110410"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8605,
            "unit": "median block_count",
            "extra": "avg block_count: 8348.821320532561, max block_count: 15381.0, count: 55205"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.641662892853908, max segment_count: 28.0, count: 55205"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.1465431977847755, max cpu: 14.159292, count: 55205"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 119.0546875,
            "unit": "median mem",
            "extra": "avg mem: 116.95631389536727, max mem: 173.4140625, count: 55205"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 4.496448383482808, max cpu: 9.356726, count: 55205"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 90.80859375,
            "unit": "median mem",
            "extra": "avg mem: 88.30664349073906, max mem: 140.25390625, count: 55205"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cad75ef84c3942edd137497c4b6864b384a3655",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3037)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-24T13:29:07-04:00",
          "tree_id": "d76d1a8d15e8ca4d61db683033627e7bf4ec476d",
          "url": "https://github.com/paradedb/paradedb/commit/0cad75ef84c3942edd137497c4b6864b384a3655"
        },
        "date": 1756057512881,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.809945800773907, max cpu: 9.514371, count: 55272"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 90.37890625,
            "unit": "median mem",
            "extra": "avg mem: 90.01807375626447, max mem: 146.03515625, count: 55272"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.6248588447166386, max cpu: 9.284333, count: 55272"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 85.140625,
            "unit": "median mem",
            "extra": "avg mem: 83.97117903843719, max mem: 139.5078125, count: 55272"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.791214616029361, max cpu: 9.504951, count: 55272"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 92.9296875,
            "unit": "median mem",
            "extra": "avg mem: 91.73574478827435, max mem: 147.31640625, count: 55272"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.359668544742892, max cpu: 4.729064, count: 55272"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 92.46875,
            "unit": "median mem",
            "extra": "avg mem: 91.24187286284194, max mem: 146.875, count: 55272"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 7.630805667087425, max cpu: 27.906979, count: 110544"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 100.68359375,
            "unit": "median mem",
            "extra": "avg mem: 100.48198751741388, max mem: 161.51953125, count: 110544"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7827,
            "unit": "median block_count",
            "extra": "avg block_count: 7743.096106527718, max block_count: 14753.0, count: 55272"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.649334201765813, max segment_count: 30.0, count: 55272"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 6.212508474632742, max cpu: 14.229248, count: 55272"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 111.404296875,
            "unit": "median mem",
            "extra": "avg mem: 110.90505272504613, max mem: 167.9765625, count: 55272"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.6046149290244625, max cpu: 9.467456, count: 55272"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 85.65625,
            "unit": "median mem",
            "extra": "avg mem: 85.10301646007473, max mem: 136.9453125, count: 55272"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6832efa7662fee49675d88dd2ceecb31dfffdd45",
          "message": "chore: Upgrade to `0.17.9` (#3041)",
          "timestamp": "2025-08-24T13:40:28-04:00",
          "tree_id": "4b3ff40f76aaaa9a2242a4bee88214604e92587a",
          "url": "https://github.com/paradedb/paradedb/commit/6832efa7662fee49675d88dd2ceecb31dfffdd45"
        },
        "date": 1756058192334,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.704294673172002, max cpu: 9.67742, count: 55271"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 94.81640625,
            "unit": "median mem",
            "extra": "avg mem: 95.03373456186337, max mem: 153.3515625, count: 55271"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.677298461660495, max cpu: 9.248554, count: 55271"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.15625,
            "unit": "median mem",
            "extra": "avg mem: 88.88338658892096, max mem: 148.23828125, count: 55271"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.774838298734925, max cpu: 9.687184, count: 55271"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 92.18359375,
            "unit": "median mem",
            "extra": "avg mem: 94.29119856592969, max mem: 153.47265625, count: 55271"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.531667950929236, max cpu: 4.804805, count: 55271"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 95.2421875,
            "unit": "median mem",
            "extra": "avg mem: 95.32547470644641, max mem: 154.66015625, count: 55271"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.5088427964266575, max cpu: 24.19355, count: 110542"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 111.4921875,
            "unit": "median mem",
            "extra": "avg mem: 111.97491267459428, max mem: 177.11328125, count: 110542"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8121,
            "unit": "median block_count",
            "extra": "avg block_count: 8231.52620723345, max block_count: 15958.0, count: 55271"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.741238624233324, max segment_count: 29.0, count: 55271"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 6.185387876840239, max cpu: 15.496368, count: 55271"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 116.625,
            "unit": "median mem",
            "extra": "avg mem: 116.04298097668759, max mem: 177.03125, count: 55271"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.650779536722073, max cpu: 9.275363, count: 55271"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 90.48828125,
            "unit": "median mem",
            "extra": "avg mem: 89.17839592360822, max mem: 145.5546875, count: 55271"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b08446356edfe8faed3798c0521304b8789d3e5",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3040)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:13-04:00",
          "tree_id": "1335b21c3132607da548eff65e5a684aa86ebecf",
          "url": "https://github.com/paradedb/paradedb/commit/4b08446356edfe8faed3798c0521304b8789d3e5"
        },
        "date": 1756058540978,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.788500217774131, max cpu: 13.872832, count: 55243"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 92.46484375,
            "unit": "median mem",
            "extra": "avg mem: 93.30826926035878, max mem: 150.765625, count: 55243"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.588525399802335, max cpu: 9.284333, count: 55243"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 86.421875,
            "unit": "median mem",
            "extra": "avg mem: 87.44980727196206, max mem: 145.8359375, count: 55243"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.733151857918612, max cpu: 9.448819, count: 55243"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 91.4140625,
            "unit": "median mem",
            "extra": "avg mem: 92.53086781074073, max mem: 150.0234375, count: 55243"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.193743421619346, max cpu: 4.7105007, count: 55243"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 92.875,
            "unit": "median mem",
            "extra": "avg mem: 94.36809916810728, max mem: 152.9140625, count: 55243"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.195402,
            "unit": "median cpu",
            "extra": "avg cpu: 7.558946810715128, max cpu: 32.526623, count: 110486"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.94140625,
            "unit": "median mem",
            "extra": "avg mem: 105.17650762172357, max mem: 167.859375, count: 110486"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7821,
            "unit": "median block_count",
            "extra": "avg block_count: 7968.506543815506, max block_count: 15339.0, count: 55243"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.567311695599443, max segment_count: 30.0, count: 55243"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.193587427651374, max cpu: 19.199999, count: 55243"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 100.22265625,
            "unit": "median mem",
            "extra": "avg mem: 100.26879253932626, max mem: 159.671875, count: 55243"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 3.8359038618998946, max cpu: 9.239654, count: 55243"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 85.20703125,
            "unit": "median mem",
            "extra": "avg mem: 85.14559727872762, max mem: 141.6015625, count: 55243"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "30a6611e0400569e914fd4b6a05437add41330c9",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3039)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:19-04:00",
          "tree_id": "d9cb66392591c4d960645870ca1a913b68494028",
          "url": "https://github.com/paradedb/paradedb/commit/30a6611e0400569e914fd4b6a05437add41330c9"
        },
        "date": 1756058543225,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.794044124560664, max cpu: 9.648242, count: 55344"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 92.8515625,
            "unit": "median mem",
            "extra": "avg mem: 92.57276449344103, max mem: 148.05078125, count: 55344"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.639222762581806, max cpu: 9.302325, count: 55344"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 86.0234375,
            "unit": "median mem",
            "extra": "avg mem: 86.63564880847517, max mem: 141.62109375, count: 55344"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.777098650453381, max cpu: 9.657948, count: 55344"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 92.6484375,
            "unit": "median mem",
            "extra": "avg mem: 93.2278635951955, max mem: 148.5625, count: 55344"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.2256222000828165, max cpu: 4.729064, count: 55344"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 92.6171875,
            "unit": "median mem",
            "extra": "avg mem: 92.91090201173569, max mem: 149.0234375, count: 55344"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.230769,
            "unit": "median cpu",
            "extra": "avg cpu: 7.582250156025421, max cpu: 28.973843, count: 110688"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 97.43359375,
            "unit": "median mem",
            "extra": "avg mem: 97.41823117117484, max mem: 158.421875, count: 110688"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7930,
            "unit": "median block_count",
            "extra": "avg block_count: 7977.274826539462, max block_count: 15068.0, count: 55344"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.592205117085863, max segment_count: 33.0, count: 55344"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.655674,
            "unit": "median cpu",
            "extra": "avg cpu: 6.135394748395965, max cpu: 18.550726, count: 55344"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 100.76953125,
            "unit": "median mem",
            "extra": "avg mem: 100.41188485596903, max mem: 158.01171875, count: 55344"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.478666493585596, max cpu: 4.7105007, count: 55344"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 86.98046875,
            "unit": "median mem",
            "extra": "avg mem: 85.58143561463302, max mem: 140.91015625, count: 55344"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756145827054,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.780744188694788, max cpu: 9.486166, count: 55276"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 95.1484375,
            "unit": "median mem",
            "extra": "avg mem: 95.30345935905727, max mem: 153.3984375, count: 55276"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.622975257255712, max cpu: 9.476802, count: 55276"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 86.453125,
            "unit": "median mem",
            "extra": "avg mem: 87.81486186930132, max mem: 145.34765625, count: 55276"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.796774073219574, max cpu: 9.619239, count: 55276"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 95.36328125,
            "unit": "median mem",
            "extra": "avg mem: 95.48915470773935, max mem: 154.7109375, count: 55276"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.297792203107825, max cpu: 4.701273, count: 55276"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 94.6484375,
            "unit": "median mem",
            "extra": "avg mem: 95.34458155155492, max mem: 153.73046875, count: 55276"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.204219,
            "unit": "median cpu",
            "extra": "avg cpu: 7.468526632297312, max cpu: 27.77242, count: 110552"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 110.37890625,
            "unit": "median mem",
            "extra": "avg mem: 110.86210844218105, max mem: 174.7109375, count: 110552"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8093,
            "unit": "median block_count",
            "extra": "avg block_count: 8216.63787177075, max block_count: 15564.0, count: 55276"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.731800419711991, max segment_count: 27.0, count: 55276"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 5.979633054972169, max cpu: 14.501511, count: 55276"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 114,
            "unit": "median mem",
            "extra": "avg mem: 113.97208122365492, max mem: 172.97265625, count: 55276"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.09248470698553, max cpu: 9.204219, count: 55276"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.2578125,
            "unit": "median mem",
            "extra": "avg mem: 87.81873271458228, max mem: 145.671875, count: 55276"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756148136364,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.735052311850981, max cpu: 9.476802, count: 55234"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 96.50390625,
            "unit": "median mem",
            "extra": "avg mem: 94.93916486278832, max mem: 153.3203125, count: 55234"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.581316491037932, max cpu: 9.221902, count: 55234"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.7734375,
            "unit": "median mem",
            "extra": "avg mem: 87.74952489069233, max mem: 146.5234375, count: 55234"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.771478574953435, max cpu: 9.476802, count: 55234"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 96.0234375,
            "unit": "median mem",
            "extra": "avg mem: 94.7746003791822, max mem: 153.484375, count: 55234"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.49409131855475, max cpu: 4.729064, count: 55234"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 96.51953125,
            "unit": "median mem",
            "extra": "avg mem: 95.8784024276261, max mem: 153.0078125, count: 55234"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.195402,
            "unit": "median cpu",
            "extra": "avg cpu: 7.376624091108206, max cpu: 23.210833, count: 110468"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 100.51953125,
            "unit": "median mem",
            "extra": "avg mem: 99.47637957796601, max mem: 162.78125, count: 110468"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8355,
            "unit": "median block_count",
            "extra": "avg block_count: 8243.074265850744, max block_count: 15636.0, count: 55234"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.718235145019372, max segment_count: 31.0, count: 55234"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 6.056070571872951, max cpu: 18.532818, count: 55234"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 104.77734375,
            "unit": "median mem",
            "extra": "avg mem: 103.72410314808361, max mem: 162.45703125, count: 55234"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.86939362687215, max cpu: 9.257474, count: 55234"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 92.140625,
            "unit": "median mem",
            "extra": "avg mem: 88.63579363763715, max mem: 145.10546875, count: 55234"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756159044686,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.771746858207325, max cpu: 9.486166, count: 55233"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 90.46875,
            "unit": "median mem",
            "extra": "avg mem: 93.07842585614578, max mem: 152.953125, count: 55233"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.642795723035422, max cpu: 9.302325, count: 55233"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 85.234375,
            "unit": "median mem",
            "extra": "avg mem: 86.42058097910217, max mem: 146.69921875, count: 55233"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.763766289568988, max cpu: 9.467456, count: 55233"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 92.0390625,
            "unit": "median mem",
            "extra": "avg mem: 94.07689986341951, max mem: 153.4296875, count: 55233"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 3.644172350916735, max cpu: 4.6966734, count: 55233"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 89.51953125,
            "unit": "median mem",
            "extra": "avg mem: 91.56932216417269, max mem: 151.2265625, count: 55233"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.3008520701802615, max cpu: 23.59882, count: 110466"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 94.58984375,
            "unit": "median mem",
            "extra": "avg mem: 96.69768260850624, max mem: 161.9921875, count: 110466"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7535,
            "unit": "median block_count",
            "extra": "avg block_count: 7814.432259699817, max block_count: 15344.0, count: 55233"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.663769847735955, max segment_count: 32.0, count: 55233"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.159934672885217, max cpu: 14.145383, count: 55233"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 100.91015625,
            "unit": "median mem",
            "extra": "avg mem: 102.09199493509315, max mem: 162.48828125, count: 55233"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 5.060734415179694, max cpu: 9.29332, count: 55233"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 86.16796875,
            "unit": "median mem",
            "extra": "avg mem: 86.24074481910723, max mem: 144.03125, count: 55233"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756162871364,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.727699656830214, max cpu: 9.448819, count: 55264"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 96.78125,
            "unit": "median mem",
            "extra": "avg mem: 97.60001516866767, max mem: 156.125, count: 55264"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.725604244988919, max cpu: 9.448819, count: 55264"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 89.85546875,
            "unit": "median mem",
            "extra": "avg mem: 89.66113606393854, max mem: 146.890625, count: 55264"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.8012957337049995, max cpu: 9.486166, count: 55264"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 96.88671875,
            "unit": "median mem",
            "extra": "avg mem: 97.84971433991839, max mem: 155.2578125, count: 55264"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.597701,
            "unit": "median cpu",
            "extra": "avg cpu: 4.226956207889793, max cpu: 4.6511626, count: 55264"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 96.74609375,
            "unit": "median mem",
            "extra": "avg mem: 97.14064740665262, max mem: 154.9375, count: 55264"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.324229176650483, max cpu: 23.210833, count: 110528"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 101.40234375,
            "unit": "median mem",
            "extra": "avg mem: 101.8160858772777, max mem: 166.00390625, count: 110528"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8331,
            "unit": "median block_count",
            "extra": "avg block_count: 8450.292704111176, max block_count: 16627.0, count: 55264"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.725897510133178, max segment_count: 31.0, count: 55264"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.266652326509624, max cpu: 18.514948, count: 55264"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 104.18359375,
            "unit": "median mem",
            "extra": "avg mem: 104.36391994562464, max mem: 165.55859375, count: 55264"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.702513720551283, max cpu: 9.275363, count: 55264"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 90.18359375,
            "unit": "median mem",
            "extra": "avg mem: 89.91097002852219, max mem: 149.48828125, count: 55264"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756165934181,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.729680064889953, max cpu: 9.60961, count: 55267"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 94.328125,
            "unit": "median mem",
            "extra": "avg mem: 94.91892631735485, max mem: 154.7265625, count: 55267"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.667847521217657, max cpu: 9.29332, count: 55267"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 89.24609375,
            "unit": "median mem",
            "extra": "avg mem: 89.0451225697523, max mem: 149.40234375, count: 55267"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.752962461766735, max cpu: 9.458128, count: 55267"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 94.84375,
            "unit": "median mem",
            "extra": "avg mem: 94.32375593991442, max mem: 153.921875, count: 55267"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.425167547548682, max cpu: 4.7244096, count: 55267"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 95.09765625,
            "unit": "median mem",
            "extra": "avg mem: 95.35067073536197, max mem: 155.77734375, count: 55267"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.204219,
            "unit": "median cpu",
            "extra": "avg cpu: 7.518380707752704, max cpu: 23.622047, count: 110534"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 108.58203125,
            "unit": "median mem",
            "extra": "avg mem: 107.14686643363127, max mem: 168.46484375, count: 110534"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8056,
            "unit": "median block_count",
            "extra": "avg block_count: 8112.254998462012, max block_count: 15866.0, count: 55267"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.59275878915085, max segment_count: 31.0, count: 55267"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 5.96322033977027, max cpu: 18.568666, count: 55267"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 115.171875,
            "unit": "median mem",
            "extra": "avg mem: 114.77715468204353, max mem: 175.25390625, count: 55267"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.692082,
            "unit": "median cpu",
            "extra": "avg cpu: 4.249623931341896, max cpu: 9.221902, count: 55267"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 87.046875,
            "unit": "median mem",
            "extra": "avg mem: 87.84823963950006, max mem: 147.421875, count: 55267"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756231974906,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.763777939831693, max cpu: 9.648242, count: 55172"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 89.23046875,
            "unit": "median mem",
            "extra": "avg mem: 89.72009741977362, max mem: 147.35546875, count: 55172"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.604535786873637, max cpu: 9.393347, count: 55172"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 81.890625,
            "unit": "median mem",
            "extra": "avg mem: 83.27766093987893, max mem: 140.62890625, count: 55172"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.772531842769555, max cpu: 9.476802, count: 55172"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 88.546875,
            "unit": "median mem",
            "extra": "avg mem: 89.65119294547053, max mem: 147.96484375, count: 55172"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.569892756153476, max cpu: 4.6875, count: 55172"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 88.40234375,
            "unit": "median mem",
            "extra": "avg mem: 89.24537716991861, max mem: 147.375, count: 55172"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.17782,
            "unit": "median cpu",
            "extra": "avg cpu: 7.278628614809176, max cpu: 28.91566, count: 110344"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 93.384765625,
            "unit": "median mem",
            "extra": "avg mem: 93.63202221575256, max mem: 155.44921875, count: 110344"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7390,
            "unit": "median block_count",
            "extra": "avg block_count: 7458.923076923077, max block_count: 14738.0, count: 55172"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.620169651272384, max segment_count: 30.0, count: 55172"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 6.047248510412844, max cpu: 18.60465, count: 55172"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 95.68359375,
            "unit": "median mem",
            "extra": "avg mem: 96.81847711758229, max mem: 156.23046875, count: 55172"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 4.692967862809, max cpu: 9.302325, count: 55172"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 83.4453125,
            "unit": "median mem",
            "extra": "avg mem: 82.31846840902088, max mem: 140.08203125, count: 55172"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756383997284,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.780758152028209, max cpu: 9.476802, count: 55272"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 97.27734375,
            "unit": "median mem",
            "extra": "avg mem: 97.44421833726842, max mem: 154.66796875, count: 55272"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.619840464235431, max cpu: 9.230769, count: 55272"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 90.48046875,
            "unit": "median mem",
            "extra": "avg mem: 90.54646460063414, max mem: 148.67578125, count: 55272"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.780172437203197, max cpu: 9.580839, count: 55272"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 98.8125,
            "unit": "median mem",
            "extra": "avg mem: 98.50991467481275, max mem: 155.75, count: 55272"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.158650346203648, max cpu: 4.729064, count: 55272"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 97.625,
            "unit": "median mem",
            "extra": "avg mem: 97.31305563282494, max mem: 154.7109375, count: 55272"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 7.5412407,
            "unit": "median cpu",
            "extra": "avg cpu: 7.203052928426157, max cpu: 23.143684, count: 110544"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 113.9140625,
            "unit": "median mem",
            "extra": "avg mem: 112.79000687085006, max mem: 175.9375, count: 110544"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8457,
            "unit": "median block_count",
            "extra": "avg block_count: 8420.099978289189, max block_count: 16016.0, count: 55272"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.657059632363584, max segment_count: 29.0, count: 55272"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.226057072998778, max cpu: 14.243324, count: 55272"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 117.43359375,
            "unit": "median mem",
            "extra": "avg mem: 115.1944843512538, max mem: 175.08203125, count: 55272"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 3.2463212463076196, max cpu: 4.7151275, count: 55272"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 91.125,
            "unit": "median mem",
            "extra": "avg mem: 89.36504921117383, max mem: 146.7265625, count: 55272"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d07151262ede5e5ecc0e93262c1ecba5980e324d",
          "message": "perf: reduce FSM locking overhead (#3057)\n\n## What\n\nThis reduces locking overhead in the FSM by holding exclusive locks for\nmuch less time\n\n## Why\n\nTo reduce contention between concurrent writers, which includes the\nbackground merger.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T09:59:34-04:00",
          "tree_id": "2099e3e181b1c97c09a02cab28e7d4f2b880946a",
          "url": "https://github.com/paradedb/paradedb/commit/d07151262ede5e5ecc0e93262c1ecba5980e324d"
        },
        "date": 1756390541136,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.751357824152707, max cpu: 9.495549, count: 55305"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 103.09375,
            "unit": "median mem",
            "extra": "avg mem: 102.1209609636335, max mem: 154.6015625, count: 55305"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.670486910799183, max cpu: 9.311348, count: 55305"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 95.75,
            "unit": "median mem",
            "extra": "avg mem: 94.79032058019166, max mem: 148.24609375, count: 55305"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7849257872392315, max cpu: 9.476802, count: 55305"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 103.12109375,
            "unit": "median mem",
            "extra": "avg mem: 102.08459063658348, max mem: 153.88671875, count: 55305"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.474244739044924, max cpu: 4.743083, count: 55305"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 103.48046875,
            "unit": "median mem",
            "extra": "avg mem: 101.9167858212413, max mem: 154.578125, count: 55305"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.169055,
            "unit": "median cpu",
            "extra": "avg cpu: 7.210671408965262, max cpu: 27.745665, count: 110610"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 114.13671875,
            "unit": "median mem",
            "extra": "avg mem: 113.49238417214764, max mem: 177.203125, count: 110610"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 9183,
            "unit": "median block_count",
            "extra": "avg block_count: 9095.503372208661, max block_count: 16961.0, count: 55305"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.729934002350602, max segment_count: 32.0, count: 55305"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.120755699518775, max cpu: 14.187191, count: 55305"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 118.109375,
            "unit": "median mem",
            "extra": "avg mem: 117.90375149737818, max mem: 173.390625, count: 55305"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.379002923872101, max cpu: 9.311348, count: 55305"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 95.38671875,
            "unit": "median mem",
            "extra": "avg mem: 94.34885895545159, max mem: 148.859375, count: 55305"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756401661345,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.721704268446423, max cpu: 9.495549, count: 55180"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 92.8515625,
            "unit": "median mem",
            "extra": "avg mem: 93.91033492660384, max mem: 154.28125, count: 55180"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.626874130107759, max cpu: 9.402546, count: 55180"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.94921875,
            "unit": "median mem",
            "extra": "avg mem: 87.31087761077383, max mem: 147.20703125, count: 55180"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.75805573119926, max cpu: 9.467456, count: 55180"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 94.390625,
            "unit": "median mem",
            "extra": "avg mem: 94.85863006580736, max mem: 155.5859375, count: 55180"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.643130042595135, max cpu: 9.329447, count: 55180"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 94.0234375,
            "unit": "median mem",
            "extra": "avg mem: 94.42948843557448, max mem: 155.22265625, count: 55180"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.369436777871447, max cpu: 23.054754, count: 110360"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 103.109375,
            "unit": "median mem",
            "extra": "avg mem: 104.10424884327428, max mem: 170.98828125, count: 110360"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8021,
            "unit": "median block_count",
            "extra": "avg block_count: 8068.225788329105, max block_count: 15674.0, count: 55180"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.679412830735775, max segment_count: 30.0, count: 55180"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.3627821014719155, max cpu: 14.215202, count: 55180"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 108.51953125,
            "unit": "median mem",
            "extra": "avg mem: 105.85173636281262, max mem: 163.42578125, count: 55180"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.7244096,
            "unit": "median cpu",
            "extra": "avg cpu: 5.73082451042744, max cpu: 9.320388, count: 55180"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 83.5859375,
            "unit": "median mem",
            "extra": "avg mem: 85.80253658481334, max mem: 144.39453125, count: 55180"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756403835824,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.736744451980862, max cpu: 9.448819, count: 54783"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.859375,
            "unit": "median mem",
            "extra": "avg mem: 99.816268062743, max mem: 154.609375, count: 54783"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.601420672458408, max cpu: 9.302325, count: 54783"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 93.06640625,
            "unit": "median mem",
            "extra": "avg mem: 93.55575178431265, max mem: 149.2265625, count: 54783"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.728896112138219, max cpu: 9.476802, count: 54783"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 99.47265625,
            "unit": "median mem",
            "extra": "avg mem: 100.3044254576009, max mem: 154.953125, count: 54783"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.2438855739835795, max cpu: 4.729064, count: 54783"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 98.546875,
            "unit": "median mem",
            "extra": "avg mem: 99.76927598148605, max mem: 155.0625, count: 54783"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.204219,
            "unit": "median cpu",
            "extra": "avg cpu: 7.50517014954573, max cpu: 24.169184, count: 109566"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 113.875,
            "unit": "median mem",
            "extra": "avg mem: 114.22441164885777, max mem: 180.14453125, count: 109566"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8702,
            "unit": "median block_count",
            "extra": "avg block_count: 8862.669477757698, max block_count: 17049.0, count: 54783"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.649380282204334, max segment_count: 35.0, count: 54783"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 6.333009712307438, max cpu: 18.60465, count: 54783"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 122.890625,
            "unit": "median mem",
            "extra": "avg mem: 121.32463423872369, max mem: 178.828125, count: 54783"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.515065959911063, max cpu: 4.628737, count: 54783"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 91.9375,
            "unit": "median mem",
            "extra": "avg mem: 91.10875964601244, max mem: 146.07421875, count: 54783"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d65f5c43ee40361ad10196c908a03c9354f2fa60",
          "message": "perf: reduce FSM locking overhead (#3064)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:54:33-04:00",
          "tree_id": "d074524cf9ed1c6904d28f24fde76ec679ca4377",
          "url": "https://github.com/paradedb/paradedb/commit/d65f5c43ee40361ad10196c908a03c9354f2fa60"
        },
        "date": 1756404636496,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7870281471165805, max cpu: 9.467456, count: 55241"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 96.375,
            "unit": "median mem",
            "extra": "avg mem: 97.39721515722017, max mem: 154.93359375, count: 55241"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.645453219557226, max cpu: 9.467456, count: 55241"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.1015625,
            "unit": "median mem",
            "extra": "avg mem: 89.18681224656505, max mem: 147.640625, count: 55241"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.773022925839053, max cpu: 9.504951, count: 55241"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 96.62890625,
            "unit": "median mem",
            "extra": "avg mem: 97.4669101216714, max mem: 155.28125, count: 55241"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.40727341199742, max cpu: 4.7105007, count: 55241"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 94.5390625,
            "unit": "median mem",
            "extra": "avg mem: 96.24741311084611, max mem: 154.18359375, count: 55241"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.169055,
            "unit": "median cpu",
            "extra": "avg cpu: 7.274633438173226, max cpu: 23.622047, count: 110482"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 102.3125,
            "unit": "median mem",
            "extra": "avg mem: 102.52362099991402, max mem: 166.375, count: 110482"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8251,
            "unit": "median block_count",
            "extra": "avg block_count: 8441.497945366666, max block_count: 16473.0, count: 55241"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.698973588457848, max segment_count: 33.0, count: 55241"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.160581111598379, max cpu: 14.201183, count: 55241"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 106.55859375,
            "unit": "median mem",
            "extra": "avg mem: 106.32138174940262, max mem: 165.78125, count: 55241"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.321475649039434, max cpu: 9.284333, count: 55241"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 89.51171875,
            "unit": "median mem",
            "extra": "avg mem: 89.77162244189098, max mem: 149.89453125, count: 55241"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b8b0d97394127399178609bf91da6b2863e49215",
          "message": "perf: reduce FSM locking overhead (#3065)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:54:44-04:00",
          "tree_id": "bcad7e056ec431e8db31669a7e50687441f9bf27",
          "url": "https://github.com/paradedb/paradedb/commit/b8b0d97394127399178609bf91da6b2863e49215"
        },
        "date": 1756404644779,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.747330670576069, max cpu: 9.495549, count: 55194"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 94.4765625,
            "unit": "median mem",
            "extra": "avg mem: 94.09152213385966, max mem: 154.26953125, count: 55194"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.6279437649575765, max cpu: 9.266409, count: 55194"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 86.546875,
            "unit": "median mem",
            "extra": "avg mem: 87.36934961793854, max mem: 148.23828125, count: 55194"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.785711367479758, max cpu: 9.430255, count: 55194"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 95.09375,
            "unit": "median mem",
            "extra": "avg mem: 95.52299856528789, max mem: 155.4375, count: 55194"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.4442643285351515, max cpu: 4.729064, count: 55194"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 90.6953125,
            "unit": "median mem",
            "extra": "avg mem: 92.15686622130576, max mem: 151.484375, count: 55194"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.34626272046048, max cpu: 23.552504, count: 110388"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 111.6796875,
            "unit": "median mem",
            "extra": "avg mem: 111.46588758232326, max mem: 176.97265625, count: 110388"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7959,
            "unit": "median block_count",
            "extra": "avg block_count: 8039.668514693626, max block_count: 15855.0, count: 55194"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.77372540493532, max segment_count: 32.0, count: 55194"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 6.2513713811626985, max cpu: 14.229248, count: 55194"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 108.04296875,
            "unit": "median mem",
            "extra": "avg mem: 108.20206658841994, max mem: 171.7578125, count: 55194"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.305048033142659, max cpu: 4.743083, count: 55194"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 82.703125,
            "unit": "median mem",
            "extra": "avg mem: 85.59845216418451, max mem: 144.50390625, count: 55194"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c855dfb258ec639bd1222422c2e8bb643b078595",
          "message": "chore: port fsm fixes from main (#3066)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T14:33:57-04:00",
          "tree_id": "69579b5c91c399fa6e0ad47835a2f2cd3e4262d4",
          "url": "https://github.com/paradedb/paradedb/commit/c855dfb258ec639bd1222422c2e8bb643b078595"
        },
        "date": 1756407002975,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.751207750721964, max cpu: 9.60961, count: 54957"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 97.62890625,
            "unit": "median mem",
            "extra": "avg mem: 96.97977467042415, max mem: 155.0390625, count: 54957"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.567435874079073, max cpu: 9.402546, count: 54957"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 89.69921875,
            "unit": "median mem",
            "extra": "avg mem: 90.03821219032608, max mem: 148.328125, count: 54957"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.708439602524125, max cpu: 9.619239, count: 54957"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 98.99609375,
            "unit": "median mem",
            "extra": "avg mem: 97.92720231840347, max mem: 156.09765625, count: 54957"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.57285336761282, max cpu: 4.7999997, count: 54957"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 99.0859375,
            "unit": "median mem",
            "extra": "avg mem: 98.35570295299053, max mem: 155.69921875, count: 54957"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.142857,
            "unit": "median cpu",
            "extra": "avg cpu: 7.513634309612685, max cpu: 23.692005, count: 109914"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.91796875,
            "unit": "median mem",
            "extra": "avg mem: 104.50402893114162, max mem: 167.47265625, count: 109914"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8474,
            "unit": "median block_count",
            "extra": "avg block_count: 8440.956693414852, max block_count: 16281.0, count: 54957"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.664301180923268, max segment_count: 32.0, count: 54957"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.207557701965758, max cpu: 14.428859, count: 54957"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 108.3203125,
            "unit": "median mem",
            "extra": "avg mem: 109.28971613602452, max mem: 168.60546875, count: 54957"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 5.352278877099997, max cpu: 9.248554, count: 54957"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 91.14453125,
            "unit": "median mem",
            "extra": "avg mem: 90.61450443642302, max mem: 148.91796875, count: 54957"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cdb42e60af376301ed1f4bd1a82b0c57ddf3ddd",
          "message": "chore: port fsm fixes from main (#3067)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T14:34:07-04:00",
          "tree_id": "be42eb2d06c35ac0504605a5eafbcf3c221aa4d1",
          "url": "https://github.com/paradedb/paradedb/commit/0cdb42e60af376301ed1f4bd1a82b0c57ddf3ddd"
        },
        "date": 1756407008056,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.748197948087379, max cpu: 9.467456, count: 55224"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 101.6953125,
            "unit": "median mem",
            "extra": "avg mem: 100.23602757349613, max mem: 154.0390625, count: 55224"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.68651520892124, max cpu: 9.311348, count: 55224"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 95.7734375,
            "unit": "median mem",
            "extra": "avg mem: 93.69605493082717, max mem: 149.57421875, count: 55224"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.746927366620873, max cpu: 9.467456, count: 55224"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 102.8984375,
            "unit": "median mem",
            "extra": "avg mem: 101.0961193276474, max mem: 155.3828125, count: 55224"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.418081758504228, max cpu: 4.729064, count: 55224"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 102.83203125,
            "unit": "median mem",
            "extra": "avg mem: 100.59038748721117, max mem: 154.69140625, count: 55224"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.186603,
            "unit": "median cpu",
            "extra": "avg cpu: 7.310324292785481, max cpu: 23.622047, count: 110448"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 107.3046875,
            "unit": "median mem",
            "extra": "avg mem: 105.79205687433226, max mem: 166.8125, count: 110448"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 9065,
            "unit": "median block_count",
            "extra": "avg block_count: 8879.859101115457, max block_count: 16816.0, count: 55224"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.746758655656961, max segment_count: 31.0, count: 55224"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 6.189656347978086, max cpu: 14.090019, count: 55224"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 110.61328125,
            "unit": "median mem",
            "extra": "avg mem: 107.91365216832808, max mem: 164.27734375, count: 55224"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 4.374800736041954, max cpu: 4.7244096, count: 55224"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 92.125,
            "unit": "median mem",
            "extra": "avg mem: 91.97549242630016, max mem: 150.20703125, count: 55224"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756417094751,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.737128054692688, max cpu: 9.495549, count: 55232"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 95.35546875,
            "unit": "median mem",
            "extra": "avg mem: 95.85943808616382, max mem: 154.20703125, count: 55232"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.713651756219006, max cpu: 9.320388, count: 55232"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.140625,
            "unit": "median mem",
            "extra": "avg mem: 89.31495470243699, max mem: 148.41796875, count: 55232"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.728633979341604, max cpu: 9.495549, count: 55232"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 95.51171875,
            "unit": "median mem",
            "extra": "avg mem: 96.74592394071824, max mem: 153.546875, count: 55232"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.6044488295911075, max cpu: 4.733728, count: 55232"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 96.14453125,
            "unit": "median mem",
            "extra": "avg mem: 97.4174928455198, max mem: 154.44140625, count: 55232"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.195402,
            "unit": "median cpu",
            "extra": "avg cpu: 7.444017817943117, max cpu: 23.59882, count: 110464"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 113.484375,
            "unit": "median mem",
            "extra": "avg mem: 113.4716993488829, max mem: 177.73828125, count: 110464"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8204,
            "unit": "median block_count",
            "extra": "avg block_count: 8360.949793597914, max block_count: 16020.0, count: 55232"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.733524044032444, max segment_count: 30.0, count: 55232"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.185511647865548, max cpu: 14.187191, count: 55232"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 116.3359375,
            "unit": "median mem",
            "extra": "avg mem: 116.55078740302271, max mem: 177.03125, count: 55232"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 3.7706203,
            "unit": "median cpu",
            "extra": "avg cpu: 4.291610913859284, max cpu: 9.302325, count: 55232"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.3984375,
            "unit": "median mem",
            "extra": "avg mem: 88.6524330749158, max mem: 145.734375, count: 55232"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d70001434e70a168f4f15f2cfb94fe9b0ed7f795",
          "message": "fix: conversion error from non-string JSON group-by columns (#3068)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-28T15:34:32-07:00",
          "tree_id": "4abbfc76f80876cfcf0ab2d87f9a1d991a7e8d8b",
          "url": "https://github.com/paradedb/paradedb/commit/d70001434e70a168f4f15f2cfb94fe9b0ed7f795"
        },
        "date": 1756421431802,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.730472350728822, max cpu: 9.495549, count: 55154"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.171875,
            "unit": "median mem",
            "extra": "avg mem: 98.23546987469177, max mem: 155.42578125, count: 55154"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.552548705803373, max cpu: 9.430255, count: 55154"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 90.546875,
            "unit": "median mem",
            "extra": "avg mem: 90.58880624308753, max mem: 147.96875, count: 55154"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.734119181894161, max cpu: 9.571285, count: 55154"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 97.4375,
            "unit": "median mem",
            "extra": "avg mem: 97.80730531217138, max mem: 154.859375, count: 55154"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.41224420341177, max cpu: 4.701273, count: 55154"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 97.203125,
            "unit": "median mem",
            "extra": "avg mem: 98.03177041783007, max mem: 155.77734375, count: 55154"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.169055,
            "unit": "median cpu",
            "extra": "avg cpu: 7.288915762060564, max cpu: 24.0, count: 110308"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 105.26953125,
            "unit": "median mem",
            "extra": "avg mem: 105.92462192508702, max mem: 169.2265625, count: 110308"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8474,
            "unit": "median block_count",
            "extra": "avg block_count: 8494.707219784603, max block_count: 16501.0, count: 55154"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.66963411538601, max segment_count: 33.0, count: 55154"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 6.1641951478572965, max cpu: 18.479307, count: 55154"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 111.5234375,
            "unit": "median mem",
            "extra": "avg mem: 111.78947498141567, max mem: 169.56640625, count: 55154"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 5.082336633547252, max cpu: 9.302325, count: 55154"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.46875,
            "unit": "median mem",
            "extra": "avg mem: 90.90619433200675, max mem: 145.88671875, count: 55154"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7154182905899829813b2117801117008d59af8b",
          "message": "feat: heap filter pushdown works with sub-queries (#3046)\n\n# Ticket(s) Closed\n\n- Closes #3043\n\n## What\n\nImplements subquery support for `paradedb.enable_filter_pushdown` by\nsetting up PostgreSQL expression contexts with subplan infrastructure,\nallowing heap filter expressions containing subqueries to execute\ncorrectly.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. Previously, `HeapFieldFilter` used\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries were present.\n\n## How\n\nImplemented subquery support via expression context setup:\n\n1. Added thread-local storage for runtime expression context and\nplanstate\n2. Modified `begin_custom_scan` to always create an expression context\nwith `ExecAssignExprContext()` that supports subplans\n3. Improved `HeapFieldFilter` to:\n   - Use runtime expression context when available\n   - Initialize expressions with planstate for subquery support\n   - Reinitialize expressions when a better planstate becomes available\n4. Set runtime context in `exec_custom_scan` and clear it in\n`end_custom_scan`\n\nThis provides subquery support while maintaining the performance\nbenefits of heap filter pushdown for simple expressions.\n\n## Tests\n\n- Test cases 19.1 and 19.2 with complex subqueries now execute\nsuccessfully\n- No system crashes when `enable_filter_pushdown` encounters subqueries\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-29T04:17:39-07:00",
          "tree_id": "7b29d5dccfebfb2b79fd199ffe496075ed495153",
          "url": "https://github.com/paradedb/paradedb/commit/7154182905899829813b2117801117008d59af8b"
        },
        "date": 1756467217434,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.731226085676682, max cpu: 9.590409, count: 55226"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 93.25,
            "unit": "median mem",
            "extra": "avg mem: 94.10159065136892, max mem: 151.27734375, count: 55226"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.62146703228692, max cpu: 9.393347, count: 55226"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 89.01953125,
            "unit": "median mem",
            "extra": "avg mem: 88.24276248110039, max mem: 147.40234375, count: 55226"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.767392657327833, max cpu: 9.60961, count: 55226"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 93.43359375,
            "unit": "median mem",
            "extra": "avg mem: 94.34006754630971, max mem: 153.0625, count: 55226"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.497947388714471, max cpu: 4.7856426, count: 55226"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.7265625,
            "unit": "median mem",
            "extra": "avg mem: 93.92590177746895, max mem: 152.40234375, count: 55226"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 7.778984393807849, max cpu: 23.692005, count: 110452"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 106.8984375,
            "unit": "median mem",
            "extra": "avg mem: 106.11701551494087, max mem: 170.70703125, count: 110452"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8031,
            "unit": "median block_count",
            "extra": "avg block_count: 8113.582841415276, max block_count: 15380.0, count: 55226"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.668308405461195, max segment_count: 29.0, count: 55226"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.655674,
            "unit": "median cpu",
            "extra": "avg cpu: 6.3016658838125545, max cpu: 14.201183, count: 55226"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 113.5625,
            "unit": "median mem",
            "extra": "avg mem: 114.04439937710498, max mem: 172.4453125, count: 55226"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.312233944094057, max cpu: 4.673807, count: 55226"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 81.078125,
            "unit": "median mem",
            "extra": "avg mem: 86.78479254563068, max mem: 145.12109375, count: 55226"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce0fc0ba98917d4c8bac6d5559795e36f8bf97bf",
          "message": "feat: heap filter pushdown works with sub-queries (#3070)\n\n# Ticket(s) Closed\n\n- Closes #3043\n\n## What\n\nImplements subquery support for `paradedb.enable_filter_pushdown` by\nsetting up PostgreSQL expression contexts with subplan infrastructure,\nallowing heap filter expressions containing subqueries to execute\ncorrectly.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. Previously, `HeapFieldFilter` used\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries were present.\n\n## How\n\nImplemented subquery support via expression context setup:\n\n1. Added thread-local storage for runtime expression context and\nplanstate\n2. Modified `begin_custom_scan` to always create an expression context\nwith `ExecAssignExprContext()` that supports subplans\n3. Improved `HeapFieldFilter` to:\n   - Use runtime expression context when available\n   - Initialize expressions with planstate for subquery support\n   - Reinitialize expressions when a better planstate becomes available\n4. Set runtime context in `exec_custom_scan` and clear it in\n`end_custom_scan`\n\nThis provides subquery support while maintaining the performance\nbenefits of heap filter pushdown for simple expressions.\n\n## Tests\n\n- Test cases 19.1 and 19.2 with complex subqueries now execute\nsuccessfully\n- No system crashes when `enable_filter_pushdown` encounters subqueries\n\nCo-authored-by: Moe <mdashti@gmail.com>\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-29T08:22:16-07:00",
          "tree_id": "732f60b60f88cdf8e7f2a624cce8cf47e7b0661f",
          "url": "https://github.com/paradedb/paradedb/commit/ce0fc0ba98917d4c8bac6d5559795e36f8bf97bf"
        },
        "date": 1756481898923,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.761163901039549, max cpu: 9.467456, count: 55146"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 89.6328125,
            "unit": "median mem",
            "extra": "avg mem: 91.07437791555598, max mem: 147.046875, count: 55146"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.6707033359003916, max cpu: 9.239654, count: 55146"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 85.07421875,
            "unit": "median mem",
            "extra": "avg mem: 85.17462437778805, max mem: 140.4453125, count: 55146"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.761391416702342, max cpu: 9.458128, count: 55146"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 90.265625,
            "unit": "median mem",
            "extra": "avg mem: 92.1662215414536, max mem: 148.13671875, count: 55146"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.880878108520946, max cpu: 9.213051, count: 55146"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 90.46484375,
            "unit": "median mem",
            "extra": "avg mem: 91.48055346829325, max mem: 147.9375, count: 55146"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.213051,
            "unit": "median cpu",
            "extra": "avg cpu: 7.772290440507241, max cpu: 23.738873, count: 110292"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 95.93359375,
            "unit": "median mem",
            "extra": "avg mem: 97.35957836640463, max mem: 158.71484375, count: 110292"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7544,
            "unit": "median block_count",
            "extra": "avg block_count: 7767.136129547021, max block_count: 14835.0, count: 55146"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.559133935371559, max segment_count: 32.0, count: 55146"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 6.184262807181482, max cpu: 14.215202, count: 55146"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 99.53515625,
            "unit": "median mem",
            "extra": "avg mem: 101.22431725272459, max mem: 158.0, count: 55146"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.66838216559974, max cpu: 7.5412407, count: 55146"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 86.3515625,
            "unit": "median mem",
            "extra": "avg mem: 85.9098299145677, max mem: 141.1015625, count: 55146"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ee69a6c03a7138668d2427a24a518896de28842d",
          "message": "fix: don't include target_segment_count in background_layer_sizes (#3073)\n\n## What\n\nThis removes the (sneaky) addition of an \"average layer size\" based on\nthe configured `target_segment_count` into the list of\n`background_layer_sizes`.\n\nThe reason we're removing this is that when this happens on an existing,\nlarge, unbalanced index, it will cause essentially the entire index to\nbe merged in the background, and that's almost never what one would want\nin a production setting.\n\n## Why\n\nLooking to improve operational problems.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-29T15:18:32-04:00",
          "tree_id": "a66bf0aecc9fbeb00bcdae8c4ce8859b0dc76376",
          "url": "https://github.com/paradedb/paradedb/commit/ee69a6c03a7138668d2427a24a518896de28842d"
        },
        "date": 1756496079029,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.722090887408806, max cpu: 9.458128, count: 55284"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 97.13671875,
            "unit": "median mem",
            "extra": "avg mem: 99.35085097519173, max mem: 155.84375, count: 55284"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.599499531150505, max cpu: 9.458128, count: 55284"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 91.765625,
            "unit": "median mem",
            "extra": "avg mem: 93.2833362444378, max mem: 149.68359375, count: 55284"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.716052785819157, max cpu: 9.467456, count: 55284"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 96.86328125,
            "unit": "median mem",
            "extra": "avg mem: 98.64061623842342, max mem: 153.16796875, count: 55284"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.507634607615798, max cpu: 4.7808766, count: 55284"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 97.03515625,
            "unit": "median mem",
            "extra": "avg mem: 99.02980285604787, max mem: 155.50390625, count: 55284"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.090909,
            "unit": "median cpu",
            "extra": "avg cpu: 7.427395326410731, max cpu: 24.096386, count: 110568"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 109.71875,
            "unit": "median mem",
            "extra": "avg mem: 111.12076554416738, max mem: 176.3828125, count: 110568"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8345,
            "unit": "median block_count",
            "extra": "avg block_count: 8720.557430721366, max block_count: 17389.0, count: 55284"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.679093408581144, max segment_count: 28.0, count: 55284"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.669261,
            "unit": "median cpu",
            "extra": "avg cpu: 6.234447272168684, max cpu: 14.45783, count: 55284"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.11328125,
            "unit": "median mem",
            "extra": "avg mem: 106.7842709774754, max mem: 165.046875, count: 55284"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.7151275,
            "unit": "median cpu",
            "extra": "avg cpu: 4.531535096884975, max cpu: 9.239654, count: 55284"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.2109375,
            "unit": "median mem",
            "extra": "avg mem: 90.41588448398271, max mem: 147.36328125, count: 55284"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e38c1e286700d77433f203f511db37c06e5232d2",
          "message": "fix: don't include target_segment_count in background_layer_sizes (#3076)\n\n## What\n\nThis removes the (sneaky) addition of an \"average layer size\" based on\nthe configured `target_segment_count` into the list of\n`background_layer_sizes`.\n\nThe reason we're removing this is that when this happens on an existing,\nlarge, unbalanced index, it will cause essentially the entire index to\nbe merged in the background, and that's almost never what one would want\nin a production setting.\n\n## Why\n\nLooking to improve operational problems.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-29T13:41:41-07:00",
          "tree_id": "612afe926217ff65d05dece7911ab8592cb99695",
          "url": "https://github.com/paradedb/paradedb/commit/e38c1e286700d77433f203f511db37c06e5232d2"
        },
        "date": 1756501066366,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.722744659910764, max cpu: 9.486166, count: 55217"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 95.56640625,
            "unit": "median mem",
            "extra": "avg mem: 94.60784424973288, max mem: 151.671875, count: 55217"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.610971308745855, max cpu: 9.257474, count: 55217"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.875,
            "unit": "median mem",
            "extra": "avg mem: 87.1548270629969, max mem: 144.953125, count: 55217"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.735912579812312, max cpu: 9.495549, count: 55217"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 93.9140625,
            "unit": "median mem",
            "extra": "avg mem: 94.0771734984244, max mem: 151.09765625, count: 55217"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.545090521048726, max cpu: 4.7105007, count: 55217"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 94.38671875,
            "unit": "median mem",
            "extra": "avg mem: 93.81882030500118, max mem: 151.70703125, count: 55217"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.17782,
            "unit": "median cpu",
            "extra": "avg cpu: 7.3057338621294, max cpu: 24.120604, count: 110434"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 105.31640625,
            "unit": "median mem",
            "extra": "avg mem: 104.94016576077114, max mem: 168.51953125, count: 110434"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7985,
            "unit": "median block_count",
            "extra": "avg block_count: 7993.851386348407, max block_count: 15270.0, count: 55217"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.570150497129507, max segment_count: 29.0, count: 55217"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.827953299564308, max cpu: 18.443804, count: 55217"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 110.80859375,
            "unit": "median mem",
            "extra": "avg mem: 109.44872538405292, max mem: 169.86328125, count: 55217"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 2.8193228293998605, max cpu: 4.6829267, count: 55217"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 83.078125,
            "unit": "median mem",
            "extra": "avg mem: 83.64507526837296, max mem: 141.2109375, count: 55217"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "843745590ada545bde4f761e2ee89cfa8fc47ff0",
          "message": "fix: don't include target_segment_count in background_layer_sizes (#3075)\n\n## What\n\nThis removes the (sneaky) addition of an \"average layer size\" based on\nthe configured `target_segment_count` into the list of\n`background_layer_sizes`.\n\nThe reason we're removing this is that when this happens on an existing,\nlarge, unbalanced index, it will cause essentially the entire index to\nbe merged in the background, and that's almost never what one would want\nin a production setting.\n\n## Why\n\nLooking to improve operational problems.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-29T13:42:40-07:00",
          "tree_id": "ca5049b6aa5789ad5e20c72a1f12a1050bae393f",
          "url": "https://github.com/paradedb/paradedb/commit/843745590ada545bde4f761e2ee89cfa8fc47ff0"
        },
        "date": 1756501124413,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.716218430242253, max cpu: 9.476802, count: 55144"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 103.8515625,
            "unit": "median mem",
            "extra": "avg mem: 102.47224921909002, max mem: 155.4453125, count: 55144"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.603729752669261, max cpu: 9.204219, count: 55144"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 97.74609375,
            "unit": "median mem",
            "extra": "avg mem: 95.10732936153525, max mem: 148.16796875, count: 55144"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.730363106103781, max cpu: 9.458128, count: 55144"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 103.73046875,
            "unit": "median mem",
            "extra": "avg mem: 102.42774067951636, max mem: 154.92578125, count: 55144"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.274144121780676, max cpu: 4.6421666, count: 55144"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 105.23828125,
            "unit": "median mem",
            "extra": "avg mem: 102.36198166958327, max mem: 155.65625, count: 55144"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.142857,
            "unit": "median cpu",
            "extra": "avg cpu: 7.145516975997857, max cpu: 23.121387, count: 110288"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 110.6484375,
            "unit": "median mem",
            "extra": "avg mem: 108.71496112734387, max mem: 170.515625, count: 110288"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 9292,
            "unit": "median block_count",
            "extra": "avg block_count: 9132.5333671841, max block_count: 17182.0, count: 55144"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.679421151893225, max segment_count: 35.0, count: 55144"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 6.101261039368768, max cpu: 14.145383, count: 55144"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 115.890625,
            "unit": "median mem",
            "extra": "avg mem: 114.38261932678533, max mem: 169.10546875, count: 55144"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.944540392336821, max cpu: 9.275363, count: 55144"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 96.953125,
            "unit": "median mem",
            "extra": "avg mem: 94.4227237012413, max mem: 148.62109375, count: 55144"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "04fe0ea8742b0b37ee31b6492b707cac443275e0",
          "message": "perf: update tantivy dependency (#3081)\n\n## What\n\nUpdate our tantivy dependency to pick (mostly pg_search-specific)\noptimizations made in https://github.com/paradedb/tantivy/pull/60\n\nThis will be cherry-picked to v0.18.x. A different PR will be for 0.17.x\nas our tantivy timeline has forked.\n\n## Why\n\nThis drastically improves INSERT/UPDATE performance for single-row\n\"atomic updates\", especially if the connection doing it is\npersistent/long-lived.\n\n## How\n\n## Tests\n\nAll existing tests pass.",
          "timestamp": "2025-08-31T16:56:04-04:00",
          "tree_id": "494ef38e19163e5af49456cbcec5cbd290c6205a",
          "url": "https://github.com/paradedb/paradedb/commit/04fe0ea8742b0b37ee31b6492b707cac443275e0"
        },
        "date": 1756674824703,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.746064685180442, max cpu: 9.628887, count: 54982"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 93.875,
            "unit": "median mem",
            "extra": "avg mem: 94.26905133441399, max mem: 152.8984375, count: 54982"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.569567047878798, max cpu: 9.302325, count: 54982"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.19140625,
            "unit": "median mem",
            "extra": "avg mem: 87.82077387258558, max mem: 146.83984375, count: 54982"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.732089943568392, max cpu: 9.599999, count: 54982"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 96.56640625,
            "unit": "median mem",
            "extra": "avg mem: 95.59853388097468, max mem: 154.0859375, count: 54982"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.345685800407218, max cpu: 4.7105007, count: 54982"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 95.4296875,
            "unit": "median mem",
            "extra": "avg mem: 94.07634472986614, max mem: 152.1796875, count: 54982"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.244361531690171, max cpu: 14.443329, count: 109964"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 102.35546875,
            "unit": "median mem",
            "extra": "avg mem: 102.03334070553773, max mem: 162.5078125, count: 109964"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8209,
            "unit": "median block_count",
            "extra": "avg block_count: 8179.851951547779, max block_count: 15595.0, count: 54982"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.470517623949656, max segment_count: 33.0, count: 54982"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.661672283816467, max cpu: 9.448819, count: 54982"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 104.0390625,
            "unit": "median mem",
            "extra": "avg mem: 103.56101499695355, max mem: 159.859375, count: 54982"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 3.444926216967293, max cpu: 9.248554, count: 54982"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 86.6328125,
            "unit": "median mem",
            "extra": "avg mem: 86.16180728749863, max mem: 143.26171875, count: 54982"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "18b62a62c4f789341be9f475a1d0d2da78cc65eb",
          "message": "perf: update tantivy dependency (#3082)\n\n## What\n\nThis is the 0.17.x-specific version of PR #3081.\n\n## Why\n\nOur tantivy timeline has forked and so has our dependency points.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T16:56:21-04:00",
          "tree_id": "7048f5dc1e63c9791a8f987db324e71a6e94cdc0",
          "url": "https://github.com/paradedb/paradedb/commit/18b62a62c4f789341be9f475a1d0d2da78cc65eb"
        },
        "date": 1756674836982,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.755424544145245, max cpu: 9.638554, count: 55281"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 92.9375,
            "unit": "median mem",
            "extra": "avg mem: 94.91586267772833, max mem: 154.0625, count: 55281"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.606717372125996, max cpu: 9.384164, count: 55281"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 85.0390625,
            "unit": "median mem",
            "extra": "avg mem: 87.78392617094933, max mem: 148.1484375, count: 55281"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.703983968498856, max cpu: 9.448819, count: 55281"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 93.62109375,
            "unit": "median mem",
            "extra": "avg mem: 96.5617552962365, max mem: 154.79296875, count: 55281"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6021094,
            "unit": "median cpu",
            "extra": "avg cpu: 4.384739395790365, max cpu: 9.204219, count: 55281"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 92.96484375,
            "unit": "median mem",
            "extra": "avg mem: 95.28531467355421, max mem: 153.96875, count: 55281"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.2258896656516445, max cpu: 11.428572, count: 110562"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 100.12890625,
            "unit": "median mem",
            "extra": "avg mem: 101.8852185665622, max mem: 162.3984375, count: 110562"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7946,
            "unit": "median block_count",
            "extra": "avg block_count: 8205.118539823809, max block_count: 15808.0, count: 55281"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.441942077748232, max segment_count: 36.0, count: 55281"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.946839986804278, max cpu: 9.4395275, count: 55281"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 102.5078125,
            "unit": "median mem",
            "extra": "avg mem: 104.51037123118702, max mem: 162.48828125, count: 55281"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 5.147287588059781, max cpu: 9.239654, count: 55281"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 84.8203125,
            "unit": "median mem",
            "extra": "avg mem: 86.41385934758326, max mem: 145.39453125, count: 55281"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "997b50e18ae26aa147b1228635a79740df1d137c",
          "message": "perf: FSM conditional locking & other minor drive-bys (#3083)\n\n## What\n\nTeach the FSM how to conditionally upgrade its buffer lock to an\nexclusive lock, skipping the page if it can't be acquired (unless it's\nthe last page, then we wait).\n\nWhile here, centralize `std::thread::available_parallelism()` (it\nactually showed up on profiles!) and gate some `pgrx::debug!()`\nstatements\n\n## Why\n\nTrying to remove some overhead that showed up during profiling.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T17:00:19-04:00",
          "tree_id": "7fd6ec90f00ff021061576bba5a811b99db53be1",
          "url": "https://github.com/paradedb/paradedb/commit/997b50e18ae26aa147b1228635a79740df1d137c"
        },
        "date": 1756675077755,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7173006076270125, max cpu: 14.693878, count: 55290"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.140625,
            "unit": "median mem",
            "extra": "avg mem: 98.00649473232049, max mem: 155.2265625, count: 55290"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.567257962293803, max cpu: 9.257474, count: 55290"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 91.6953125,
            "unit": "median mem",
            "extra": "avg mem: 91.18676665084102, max mem: 148.4609375, count: 55290"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.723462156375411, max cpu: 9.795918, count: 55290"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 98.79296875,
            "unit": "median mem",
            "extra": "avg mem: 98.47944474588533, max mem: 154.73828125, count: 55290"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.461045480141112, max cpu: 4.669261, count: 55290"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 98.46484375,
            "unit": "median mem",
            "extra": "avg mem: 98.19326371461838, max mem: 154.93359375, count: 55290"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.956561443114754, max cpu: 13.953489, count: 110580"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 107.5546875,
            "unit": "median mem",
            "extra": "avg mem: 107.85015249847396, max mem: 170.5078125, count: 110580"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8591,
            "unit": "median block_count",
            "extra": "avg block_count: 8601.486778802677, max block_count: 16791.0, count: 55290"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.493760173629951, max segment_count: 33.0, count: 55290"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.755342907475064, max cpu: 9.599999, count: 55290"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 109.078125,
            "unit": "median mem",
            "extra": "avg mem: 108.22958350289383, max mem: 163.51171875, count: 55290"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 5.151008225909657, max cpu: 9.284333, count: 55290"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 91.92578125,
            "unit": "median mem",
            "extra": "avg mem: 92.05231676162055, max mem: 149.8671875, count: 55290"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "61f7d5fa27516625eba0d94622d397bd79de8b65",
          "message": "perf: update tantivy dependency (#3086)\n\n## What\n\nUpdate our tantivy dependency to pick (mostly pg_search-specific)\noptimizations made in https://github.com/paradedb/tantivy/pull/60\n\nThis will be cherry-picked to v0.18.x. A different PR will be for 0.17.x\nas our tantivy timeline has forked.\n\n## Why\n\nThis drastically improves INSERT/UPDATE performance for single-row\n\"atomic updates\", especially if the connection doing it is\npersistent/long-lived.\n\n## How\n\n## Tests\n\nAll existing tests pass.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T17:04:08-04:00",
          "tree_id": "be8e82a10b78e99894f4679688cc3cb8ab8e66fd",
          "url": "https://github.com/paradedb/paradedb/commit/61f7d5fa27516625eba0d94622d397bd79de8b65"
        },
        "date": 1756675310602,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.759914485282536, max cpu: 13.899614, count: 54859"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 93.046875,
            "unit": "median mem",
            "extra": "avg mem: 94.65417614646184, max mem: 153.9296875, count: 54859"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.561355362241287, max cpu: 9.284333, count: 54859"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.515625,
            "unit": "median mem",
            "extra": "avg mem: 89.0662766564055, max mem: 147.65234375, count: 54859"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7572745756397765, max cpu: 14.708885, count: 54859"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 95.4296875,
            "unit": "median mem",
            "extra": "avg mem: 96.46854393194371, max mem: 155.94921875, count: 54859"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.524356144267599, max cpu: 4.804805, count: 54859"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.703125,
            "unit": "median mem",
            "extra": "avg mem: 94.59360908476731, max mem: 153.66796875, count: 54859"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.200497952474608, max cpu: 14.754097, count: 109718"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.10546875,
            "unit": "median mem",
            "extra": "avg mem: 104.57539078877213, max mem: 166.87890625, count: 109718"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8015,
            "unit": "median block_count",
            "extra": "avg block_count: 8193.145445596894, max block_count: 15836.0, count: 54859"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.451083687271003, max segment_count: 31.0, count: 54859"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.672445634731617, max cpu: 9.458128, count: 54859"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 103.5,
            "unit": "median mem",
            "extra": "avg mem: 105.91539859571812, max mem: 164.26953125, count: 54859"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6829267,
            "unit": "median cpu",
            "extra": "avg cpu: 3.0201594322892897, max cpu: 4.7105007, count: 54859"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.78125,
            "unit": "median mem",
            "extra": "avg mem: 86.69958645402303, max mem: 147.80859375, count: 54859"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f7a1efb6ab66a1083669275a76c64bb2fdb774c5",
          "message": "fix: Patch null subselects (#3084)",
          "timestamp": "2025-08-31T17:13:32-04:00",
          "tree_id": "7af3a47e9d5360e7deb0796f3a63eaeb9458c016",
          "url": "https://github.com/paradedb/paradedb/commit/f7a1efb6ab66a1083669275a76c64bb2fdb774c5"
        },
        "date": 1756675870957,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.729331557194653, max cpu: 14.4723625, count: 55094"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 102.3828125,
            "unit": "median mem",
            "extra": "avg mem: 101.75887432161397, max mem: 153.62109375, count: 55094"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.5367228320936075, max cpu: 9.421001, count: 55094"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 97.15625,
            "unit": "median mem",
            "extra": "avg mem: 95.72480789934022, max mem: 148.89453125, count: 55094"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.740472950978459, max cpu: 14.486921, count: 55094"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 103.74609375,
            "unit": "median mem",
            "extra": "avg mem: 103.26866440764874, max mem: 156.1328125, count: 55094"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.578400880291048, max cpu: 4.824121, count: 55094"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 103.25390625,
            "unit": "median mem",
            "extra": "avg mem: 102.21006044782554, max mem: 155.47265625, count: 55094"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.041993728376468, max cpu: 14.486921, count: 110188"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 113.1171875,
            "unit": "median mem",
            "extra": "avg mem: 110.62600534852933, max mem: 164.40234375, count: 110188"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 9242,
            "unit": "median block_count",
            "extra": "avg block_count: 9115.84355828221, max block_count: 16767.0, count: 55094"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.443405815515302, max segment_count: 34.0, count: 55094"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.812455061434691, max cpu: 9.561753, count: 55094"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 113.3828125,
            "unit": "median mem",
            "extra": "avg mem: 112.59113181846027, max mem: 164.80078125, count: 55094"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.413480259610481, max cpu: 9.421001, count: 55094"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 94.09375,
            "unit": "median mem",
            "extra": "avg mem: 91.32395832860657, max mem: 148.3671875, count: 55094"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b5168d5548573f33931eaaf7391be49785ae563c",
          "message": "perf: FSM conditional locking & other minor drive-bys (#3087)\n\n## What\n\nTeach the FSM how to conditionally upgrade its buffer lock to an\nexclusive lock, skipping the page if it can't be acquired (unless it's\nthe last page, then we wait).\n\nWhile here, centralize `std::thread::available_parallelism()` (it\nactually showed up on profiles!) and gate some `pgrx::debug!()`\nstatements\n\n## Why\n\nTrying to remove some overhead that showed up during profiling.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T17:21:58-04:00",
          "tree_id": "7b94457372b11bf3eae0e9b4926a1b0b075f873f",
          "url": "https://github.com/paradedb/paradedb/commit/b5168d5548573f33931eaaf7391be49785ae563c"
        },
        "date": 1756676285375,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.730396714281078, max cpu: 14.738997, count: 55116"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 93.0546875,
            "unit": "median mem",
            "extra": "avg mem: 93.0698344599345, max mem: 144.68359375, count: 55116"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.545894816145342, max cpu: 9.825998, count: 55116"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.1640625,
            "unit": "median mem",
            "extra": "avg mem: 87.46021806564791, max mem: 138.32421875, count: 55116"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.758431271144816, max cpu: 9.846154, count: 55116"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 94.08984375,
            "unit": "median mem",
            "extra": "avg mem: 94.62883814080757, max mem: 146.17578125, count: 55116"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.494237887170082, max cpu: 4.833837, count: 55116"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 95.02734375,
            "unit": "median mem",
            "extra": "avg mem: 93.80845512192467, max mem: 145.4609375, count: 55116"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 5.147618915059312, max cpu: 14.738997, count: 110232"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 101.2265625,
            "unit": "median mem",
            "extra": "avg mem: 101.0902165078539, max mem: 155.23828125, count: 110232"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8035,
            "unit": "median block_count",
            "extra": "avg block_count: 8039.713585891574, max block_count: 14598.0, count: 55116"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.16884389288047, max segment_count: 30.0, count: 55116"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.70553967580596, max cpu: 9.648242, count: 55116"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 103.83203125,
            "unit": "median mem",
            "extra": "avg mem: 103.30888390508201, max mem: 153.91796875, count: 55116"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6647234,
            "unit": "median cpu",
            "extra": "avg cpu: 4.2435765253349755, max cpu: 9.275363, count: 55116"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 87.3671875,
            "unit": "median mem",
            "extra": "avg mem: 84.58180651092695, max mem: 137.39453125, count: 55116"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "66416cd75501ccbc7dccc4fa5ff52351515297f9",
          "message": "chore: clean up + test null subselects (#3085)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n- Makes warning when a subselect is null less noisy\n- Adds a regression test\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T17:26:18-04:00",
          "tree_id": "fce6e0f4193a8ed265430eec17e026251778bed2",
          "url": "https://github.com/paradedb/paradedb/commit/66416cd75501ccbc7dccc4fa5ff52351515297f9"
        },
        "date": 1756676539073,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.746211754943203, max cpu: 9.657948, count: 55004"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 101.078125,
            "unit": "median mem",
            "extra": "avg mem: 100.0783580086221, max mem: 154.02734375, count: 55004"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.669520159888548, max cpu: 9.347614, count: 55004"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 94.015625,
            "unit": "median mem",
            "extra": "avg mem: 94.30285517587357, max mem: 149.8671875, count: 55004"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.711215763898852, max cpu: 9.657948, count: 55004"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 101.828125,
            "unit": "median mem",
            "extra": "avg mem: 100.68120408004418, max mem: 154.6796875, count: 55004"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.660194,
            "unit": "median cpu",
            "extra": "avg cpu: 4.1827894167455995, max cpu: 4.733728, count: 55004"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 101.6328125,
            "unit": "median mem",
            "extra": "avg mem: 101.35826790722038, max mem: 155.890625, count: 55004"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 5.158019187127136, max cpu: 14.356929, count: 110008"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 108.77734375,
            "unit": "median mem",
            "extra": "avg mem: 108.32986532087439, max mem: 165.37109375, count: 110008"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8874,
            "unit": "median block_count",
            "extra": "avg block_count: 8838.880754126973, max block_count: 16323.0, count: 55004"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.456148643735002, max segment_count: 33.0, count: 55004"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.601612566977105, max cpu: 9.393347, count: 55004"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 113.2734375,
            "unit": "median mem",
            "extra": "avg mem: 111.88471534456585, max mem: 166.06640625, count: 55004"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 3.764586419938397, max cpu: 4.6966734, count: 55004"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 92.01171875,
            "unit": "median mem",
            "extra": "avg mem: 91.606726044924, max mem: 147.9921875, count: 55004"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7880880ebd7ac0d11324c3535f09d8cccad14bfa",
          "message": "fix: cherry pick excluded sub-queries from filter-pushdown (on non-indexed fields… (#3089)\n\n…). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Moe <mdashti@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-31T17:26:43-04:00",
          "tree_id": "669aeeae50dcf9a9e766c99607331fffa18556af",
          "url": "https://github.com/paradedb/paradedb/commit/7880880ebd7ac0d11324c3535f09d8cccad14bfa"
        },
        "date": 1756676561527,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.733821736964524, max cpu: 9.580839, count: 55320"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 100.15625,
            "unit": "median mem",
            "extra": "avg mem: 100.264574859906, max mem: 155.0703125, count: 55320"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.560782310795303, max cpu: 9.302325, count: 55320"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 94.33984375,
            "unit": "median mem",
            "extra": "avg mem: 94.16576234013468, max mem: 149.14453125, count: 55320"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.738452960305448, max cpu: 9.495549, count: 55320"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 99.703125,
            "unit": "median mem",
            "extra": "avg mem: 100.00824824600055, max mem: 154.7421875, count: 55320"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.4500900473157055, max cpu: 4.7105007, count: 55320"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 99.82421875,
            "unit": "median mem",
            "extra": "avg mem: 99.7256302111578, max mem: 154.84765625, count: 55320"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.011544016434748, max cpu: 13.779904, count: 110640"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 107.84375,
            "unit": "median mem",
            "extra": "avg mem: 108.09523020183704, max mem: 165.0625, count: 110640"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8720,
            "unit": "median block_count",
            "extra": "avg block_count: 8826.355712219813, max block_count: 16526.0, count: 55320"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.502729573391179, max segment_count: 33.0, count: 55320"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.62447786212605, max cpu: 9.448819, count: 55320"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 110.16796875,
            "unit": "median mem",
            "extra": "avg mem: 110.24120804241232, max mem: 163.5390625, count: 55320"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.080981522556675, max cpu: 4.7244096, count: 55320"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 91.88671875,
            "unit": "median mem",
            "extra": "avg mem: 90.42795715552694, max mem: 146.1953125, count: 55320"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5dbe9f72e059209d7bcfe329add81a3defc1373b",
          "message": "perf: FSM conditional locking & other minor drive-bys (#3088)\n\n## What\n\nTeach the FSM how to conditionally upgrade its buffer lock to an\nexclusive lock, skipping the page if it can't be acquired (unless it's\nthe last page, then we wait).\n\nWhile here, centralize `std::thread::available_parallelism()` (it\nactually showed up on profiles!) and gate some `pgrx::debug!()`\nstatements\n\n## Why\n\nTrying to remove some overhead that showed up during profiling.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T18:03:44-04:00",
          "tree_id": "c07eb1a6be295bf0f48ecb2015ad817f66eed5d6",
          "url": "https://github.com/paradedb/paradedb/commit/5dbe9f72e059209d7bcfe329add81a3defc1373b"
        },
        "date": 1756678782183,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.781397285213358, max cpu: 9.638554, count: 55354"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 95.66796875,
            "unit": "median mem",
            "extra": "avg mem: 96.33490345943834, max mem: 153.03515625, count: 55354"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.655115839713883, max cpu: 9.448819, count: 55354"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 91.68359375,
            "unit": "median mem",
            "extra": "avg mem: 91.33572099577266, max mem: 149.55859375, count: 55354"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.770530802433342, max cpu: 11.464969, count: 55354"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 98.21484375,
            "unit": "median mem",
            "extra": "avg mem: 98.0098449440194, max mem: 153.16796875, count: 55354"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.4190575134278, max cpu: 4.7856426, count: 55354"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 96.7734375,
            "unit": "median mem",
            "extra": "avg mem: 97.60044885814484, max mem: 155.4375, count: 55354"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.1024358693641485, max cpu: 14.45783, count: 110708"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.6796875,
            "unit": "median mem",
            "extra": "avg mem: 104.84393062013359, max mem: 165.234375, count: 110708"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8429,
            "unit": "median block_count",
            "extra": "avg block_count: 8462.413050547386, max block_count: 16117.0, count: 55354"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.464970914477725, max segment_count: 31.0, count: 55354"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.63169340741642, max cpu: 9.476802, count: 55354"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 106.89453125,
            "unit": "median mem",
            "extra": "avg mem: 106.56710212620136, max mem: 162.36328125, count: 55354"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 4.737674527099371, max cpu: 9.458128, count: 55354"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 93.21875,
            "unit": "median mem",
            "extra": "avg mem: 90.85788452223416, max mem: 146.9921875, count: 55354"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13c4ff7d629f86262ffcccb04bcd81cb839dffc2",
          "message": "fix: fix failing test (#3092)\n\n## What\n\nOur recent changes to tantivy have adjusted the default MemoryArena page\nsize from 1MB to 512k, and this actually has a downstream effect of\nallowing indexers to fit more docs in the arena before tantivy calcuates\nthat the indexer has exceeded its memory budget.\n\nWe have a test that exposed this, so this adjustes the number of\ndocuments to insert to generate 5 segments.\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T18:25:55-04:00",
          "tree_id": "bab403fb4244937da102295355dc877175f94a0a",
          "url": "https://github.com/paradedb/paradedb/commit/13c4ff7d629f86262ffcccb04bcd81cb839dffc2"
        },
        "date": 1756680114668,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.774065310063135, max cpu: 9.648242, count: 55269"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 94.53125,
            "unit": "median mem",
            "extra": "avg mem: 94.78275853100291, max mem: 154.09765625, count: 55269"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.642971645149397, max cpu: 9.311348, count: 55269"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.953125,
            "unit": "median mem",
            "extra": "avg mem: 89.33220949752574, max mem: 148.21484375, count: 55269"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.709204538869373, max cpu: 9.619239, count: 55269"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 95.55078125,
            "unit": "median mem",
            "extra": "avg mem: 96.82243910182471, max mem: 155.34765625, count: 55269"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.5568180075840825, max cpu: 4.7244096, count: 55269"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 94.27734375,
            "unit": "median mem",
            "extra": "avg mem: 94.51064014750584, max mem: 153.2890625, count: 55269"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.02714843421516, max cpu: 14.0625, count: 110538"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 107.0078125,
            "unit": "median mem",
            "extra": "avg mem: 107.25086777284734, max mem: 168.40625, count: 110538"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8236,
            "unit": "median block_count",
            "extra": "avg block_count: 8297.585192422515, max block_count: 16070.0, count: 55269"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.43803940726266, max segment_count: 34.0, count: 55269"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.577654624880959, max cpu: 9.448819, count: 55269"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 106.015625,
            "unit": "median mem",
            "extra": "avg mem: 106.26942078176735, max mem: 163.9296875, count: 55269"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.241489759395247, max cpu: 4.660194, count: 55269"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 89.56640625,
            "unit": "median mem",
            "extra": "avg mem: 90.27368147718431, max mem: 147.74609375, count: 55269"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c1319a7927e12e96a27d54ebc0eb1c107d4378e",
          "message": "fix: fix failing test (#3093)\n\n## What\n\nOur recent changes to tantivy have adjusted the default MemoryArena page\nsize from 1MB to 512k, and this actually has a downstream effect of\nallowing indexers to fit more docs in the arena before tantivy calcuates\nthat the indexer has exceeded its memory budget.\n\nWe have a test that exposed this, so this adjustes the number of\ndocuments to insert to generate 5 segments.\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T19:13:25-04:00",
          "tree_id": "803c44b58b03e5f37cdecdac428495b710cea410",
          "url": "https://github.com/paradedb/paradedb/commit/5c1319a7927e12e96a27d54ebc0eb1c107d4378e"
        },
        "date": 1756682969195,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.753495664414964, max cpu: 9.687184, count: 55288"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 103.1171875,
            "unit": "median mem",
            "extra": "avg mem: 100.69091655569473, max mem: 154.8984375, count: 55288"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.688969182481944, max cpu: 9.476802, count: 55288"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 96.84765625,
            "unit": "median mem",
            "extra": "avg mem: 95.00658003318985, max mem: 149.4921875, count: 55288"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.758289795622237, max cpu: 9.60961, count: 55288"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 103.86328125,
            "unit": "median mem",
            "extra": "avg mem: 101.66809733802995, max mem: 155.28125, count: 55288"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.582865411177023, max cpu: 4.738401, count: 55288"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 103.88671875,
            "unit": "median mem",
            "extra": "avg mem: 101.42992199652275, max mem: 155.33203125, count: 55288"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 5.159927815103414, max cpu: 14.117648, count: 110576"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 110.87890625,
            "unit": "median mem",
            "extra": "avg mem: 108.86848115210353, max mem: 165.2109375, count: 110576"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 9275,
            "unit": "median block_count",
            "extra": "avg block_count: 9037.240305310375, max block_count: 17011.0, count: 55288"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.583743307770222, max segment_count: 33.0, count: 55288"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.811012944382199, max cpu: 9.476802, count: 55288"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 114.06640625,
            "unit": "median mem",
            "extra": "avg mem: 111.16937594109481, max mem: 162.1796875, count: 55288"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.491025541572336, max cpu: 9.266409, count: 55288"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 94.34375,
            "unit": "median mem",
            "extra": "avg mem: 94.31931163294928, max mem: 150.0234375, count: 55288"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1cfc7c5a684d93ff742844cc9a73f47a88a1c2e",
          "message": "fix: fix failing test (#3094)\n\n## What\n\nOur recent changes to tantivy have adjusted the default MemoryArena page\nsize from 1MB to 512k, and this actually has a downstream effect of\nallowing indexers to fit more docs in the arena before tantivy calcuates\nthat the indexer has exceeded its memory budget.\n\nWe have a test that exposed this, so this adjustes the number of\ndocuments to insert to generate 5 segments.\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-31T19:27:45-04:00",
          "tree_id": "8deb2601fc513f26b18413cdcd95b63227800cef",
          "url": "https://github.com/paradedb/paradedb/commit/c1cfc7c5a684d93ff742844cc9a73f47a88a1c2e"
        },
        "date": 1756683835810,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.759817363580756, max cpu: 9.448819, count: 55265"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 92.73828125,
            "unit": "median mem",
            "extra": "avg mem: 92.71576996912603, max mem: 147.11328125, count: 55265"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.529801351289478, max cpu: 4.7952046, count: 55265"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.0078125,
            "unit": "median mem",
            "extra": "avg mem: 86.8079121618565, max mem: 141.5078125, count: 55265"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.78319135678784, max cpu: 9.448819, count: 55265"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 93.44921875,
            "unit": "median mem",
            "extra": "avg mem: 93.87795628166562, max mem: 147.9921875, count: 55265"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.487151638540227, max cpu: 4.6875, count: 55265"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.73828125,
            "unit": "median mem",
            "extra": "avg mem: 93.558659908509, max mem: 147.67578125, count: 55265"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 5.067678180205732, max cpu: 9.628887, count: 110530"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 100.71875,
            "unit": "median mem",
            "extra": "avg mem: 101.33366347795847, max mem: 154.4921875, count: 110530"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7951,
            "unit": "median block_count",
            "extra": "avg block_count: 7944.5554329141405, max block_count: 14714.0, count: 55265"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.345408486383787, max segment_count: 33.0, count: 55265"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.8264048910487505, max cpu: 14.414414, count: 55265"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 103.56640625,
            "unit": "median mem",
            "extra": "avg mem: 103.3840731164616, max mem: 156.578125, count: 55265"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.634100775698481, max cpu: 9.266409, count: 55265"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 89.3984375,
            "unit": "median mem",
            "extra": "avg mem: 88.14663722518773, max mem: 141.28125, count: 55265"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cea1e8a6034491ad9e758c9ca40b3bf03dd0ad80",
          "message": "chore: Upgrade to `0.17.10` (#3091)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-31T21:10:59-04:00",
          "tree_id": "bb9aa9d90f45f351627b62d17644c53e944c44bb",
          "url": "https://github.com/paradedb/paradedb/commit/cea1e8a6034491ad9e758c9ca40b3bf03dd0ad80"
        },
        "date": 1756690021861,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.760371309496096, max cpu: 9.825998, count: 55336"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 93.05859375,
            "unit": "median mem",
            "extra": "avg mem: 93.10725598502783, max mem: 152.71484375, count: 55336"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.574143787990657, max cpu: 9.311348, count: 55336"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.703125,
            "unit": "median mem",
            "extra": "avg mem: 87.16225804065165, max mem: 145.6328125, count: 55336"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.720289921978177, max cpu: 9.657948, count: 55336"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 94.01953125,
            "unit": "median mem",
            "extra": "avg mem: 94.08185999507553, max mem: 153.3984375, count: 55336"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 3.931822167700382, max cpu: 4.701273, count: 55336"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.765625,
            "unit": "median mem",
            "extra": "avg mem: 94.05434823735904, max mem: 152.75390625, count: 55336"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.066881798826721, max cpu: 14.738997, count: 110672"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 102.12890625,
            "unit": "median mem",
            "extra": "avg mem: 101.45718482175934, max mem: 162.078125, count: 110672"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7973,
            "unit": "median block_count",
            "extra": "avg block_count: 8016.590320948388, max block_count: 15539.0, count: 55336"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.399866271504989, max segment_count: 31.0, count: 55336"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.761026700652198, max cpu: 9.467456, count: 55336"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.15625,
            "unit": "median mem",
            "extra": "avg mem: 105.02838024466442, max mem: 163.734375, count: 55336"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 6.731422850058551, max cpu: 9.160305, count: 55336"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 87.7109375,
            "unit": "median mem",
            "extra": "avg mem: 86.36616985326009, max mem: 144.7109375, count: 55336"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7feaa3f26a1cdd76926c0df1914a973c4dd07ae5",
          "message": "chore: clean up + test null subselects (#3090)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n- Makes warning when a subselect is null less noisy\n- Adds a regression test\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-09-01T20:17:03-04:00",
          "tree_id": "7dc76314573192fb1180f64ffaa480c1e9f20e23",
          "url": "https://github.com/paradedb/paradedb/commit/7feaa3f26a1cdd76926c0df1914a973c4dd07ae5"
        },
        "date": 1756773188558,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7386206306581204, max cpu: 9.628887, count: 55325"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 98.62890625,
            "unit": "median mem",
            "extra": "avg mem: 97.58399740171713, max mem: 155.06640625, count: 55325"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.554245378354467, max cpu: 9.257474, count: 55325"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 88.72265625,
            "unit": "median mem",
            "extra": "avg mem: 89.5711348424085, max mem: 146.59765625, count: 55325"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.73938773866172, max cpu: 9.657948, count: 55325"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 99.2265625,
            "unit": "median mem",
            "extra": "avg mem: 98.65301873870312, max mem: 154.19921875, count: 55325"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.316141148103087, max cpu: 4.8144436, count: 55325"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 97.6484375,
            "unit": "median mem",
            "extra": "avg mem: 97.74082926174876, max mem: 154.49609375, count: 55325"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.081048073571762, max cpu: 9.657948, count: 110650"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 105.32421875,
            "unit": "median mem",
            "extra": "avg mem: 104.74966261155672, max mem: 160.796875, count: 110650"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8574,
            "unit": "median block_count",
            "extra": "avg block_count: 8524.955011296883, max block_count: 15732.0, count: 55325"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.432715770447356, max segment_count: 35.0, count: 55325"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.601044376671911, max cpu: 9.257474, count: 55325"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 111.4609375,
            "unit": "median mem",
            "extra": "avg mem: 109.5715027677361, max mem: 164.96875, count: 55325"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 4.30103013830813, max cpu: 9.257474, count: 55325"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 90.9921875,
            "unit": "median mem",
            "extra": "avg mem: 90.75560042928151, max mem: 145.9453125, count: 55325"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756835807556,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.721026109750946, max cpu: 9.7859335, count: 55049"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 95.94140625,
            "unit": "median mem",
            "extra": "avg mem: 94.40359285023342, max mem: 151.953125, count: 55049"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.670212804676081, max cpu: 9.628887, count: 55049"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 89.00390625,
            "unit": "median mem",
            "extra": "avg mem: 88.2807541349525, max mem: 146.74609375, count: 55049"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.701253020632476, max cpu: 9.657948, count: 55049"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 97.76953125,
            "unit": "median mem",
            "extra": "avg mem: 96.77907459433868, max mem: 155.14453125, count: 55049"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.489866560308847, max cpu: 4.729064, count: 55049"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 96.4921875,
            "unit": "median mem",
            "extra": "avg mem: 95.42151608680449, max mem: 153.2421875, count: 55049"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.150446504552635, max cpu: 14.678899, count: 110098"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 103.4609375,
            "unit": "median mem",
            "extra": "avg mem: 101.76502273116905, max mem: 160.87890625, count: 110098"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8345,
            "unit": "median block_count",
            "extra": "avg block_count: 8195.829515522535, max block_count: 15529.0, count: 55049"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.436411197296954, max segment_count: 29.0, count: 55049"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.644947950294859, max cpu: 9.476802, count: 55049"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 107.99609375,
            "unit": "median mem",
            "extra": "avg mem: 106.53041423890534, max mem: 162.546875, count: 55049"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.660194,
            "unit": "median cpu",
            "extra": "avg cpu: 4.2175119482893395, max cpu: 4.8144436, count: 55049"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 90.3046875,
            "unit": "median mem",
            "extra": "avg mem: 87.45076105492379, max mem: 144.93359375, count: 55049"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "12a5dd0083189771b71a13a34642cc8b648b8b8a",
          "message": "feat: ability to apply a slop value to \"phrase queries\" (#3100)\n\n## What\n\nThis adds a new `slop` SQL type with a typmod which allows for the easy\napplication of a phrase slop value as part of the SQL query.\n\nOnly phrases support slop, so this only works with the `###` operator\nand the `@@@ pdb.phrase()` function.\n\n## Why\n\nThis is in furtherance of our SQL UX improvements.\n\n## How\n\n```sql\nSELECT * FROM t WHERE field ### 'bbq chicken'::slop(3);\nSELECT * FROM t WHERE field @@@ pdb.phrase('bbq chicken')::slop(3);\n```\n\n## Tests\n\nA new regression test has been added.",
          "timestamp": "2025-09-02T13:41:15-04:00",
          "tree_id": "91fdace9b6c4bd5ae2d6c9c4df0cfd3778fb1740",
          "url": "https://github.com/paradedb/paradedb/commit/12a5dd0083189771b71a13a34642cc8b648b8b8a"
        },
        "date": 1756835836418,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.720117764713226, max cpu: 9.60961, count: 55265"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 95.421875,
            "unit": "median mem",
            "extra": "avg mem: 94.74580642698815, max mem: 149.78515625, count: 55265"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.724393794912719, max cpu: 9.458128, count: 55265"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.7734375,
            "unit": "median mem",
            "extra": "avg mem: 87.00896285227992, max mem: 141.03125, count: 55265"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.770967344432825, max cpu: 11.510792, count: 55265"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 96.08984375,
            "unit": "median mem",
            "extra": "avg mem: 95.38385548606713, max mem: 149.734375, count: 55265"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.5292809124519, max cpu: 4.6647234, count: 55265"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.44921875,
            "unit": "median mem",
            "extra": "avg mem: 93.38956434339093, max mem: 148.609375, count: 55265"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.947890409190644, max cpu: 13.766731, count: 110530"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 104.6484375,
            "unit": "median mem",
            "extra": "avg mem: 102.93579885692799, max mem: 159.27734375, count: 110530"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8182,
            "unit": "median block_count",
            "extra": "avg block_count: 8102.213987152809, max block_count: 15008.0, count: 55265"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.461956030037094, max segment_count: 33.0, count: 55265"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.652055283723331, max cpu: 9.638554, count: 55265"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.6328125,
            "unit": "median mem",
            "extra": "avg mem: 105.46003036505925, max mem: 160.08984375, count: 55265"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.534814165825305, max cpu: 9.239654, count: 55265"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 90.234375,
            "unit": "median mem",
            "extra": "avg mem: 88.59405421604994, max mem: 141.12890625, count: 55265"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "661293354b63ed9f8ea05dc1d484ab7ee83bfafc",
          "message": "feat: ability to apply a slop value to \"phrase queries\" (#3105)\n\n## What\n\nThis adds a new `slop` SQL type with a typmod which allows for the easy\napplication of a phrase slop value as part of the SQL query.\n\nOnly phrases support slop, so this only works with the `###` operator\nand the `@@@ pdb.phrase()` function.\n\n## Why\n\nThis is in furtherance of our SQL UX improvements.\n\n## How\n\n```sql\nSELECT * FROM t WHERE field ### 'bbq chicken'::slop(3);\nSELECT * FROM t WHERE field @@@ pdb.phrase('bbq chicken')::slop(3);\n```\n\n## Tests\n\nA new regression test has been added.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-09-02T13:58:31-04:00",
          "tree_id": "0e70c63e07bfcdbadf9aaeb8ff4d32bb07b2e896",
          "url": "https://github.com/paradedb/paradedb/commit/661293354b63ed9f8ea05dc1d484ab7ee83bfafc"
        },
        "date": 1756836881745,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.747609953498533, max cpu: 9.657948, count: 55293"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 94.75,
            "unit": "median mem",
            "extra": "avg mem: 95.80117785874795, max mem: 149.8125, count: 55293"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.635550038162995, max cpu: 9.448819, count: 55293"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 87.82421875,
            "unit": "median mem",
            "extra": "avg mem: 89.082146050359, max mem: 142.4375, count: 55293"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.707103840847662, max cpu: 9.60961, count: 55293"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 95.890625,
            "unit": "median mem",
            "extra": "avg mem: 96.03073442275695, max mem: 149.70703125, count: 55293"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.280923568600342, max cpu: 4.6647234, count: 55293"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 96.59765625,
            "unit": "median mem",
            "extra": "avg mem: 96.6480435758143, max mem: 150.3203125, count: 55293"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.1407615301181755, max cpu: 14.769231, count: 110586"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 107.53515625,
            "unit": "median mem",
            "extra": "avg mem: 107.50634637578446, max mem: 167.265625, count: 110586"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8223,
            "unit": "median block_count",
            "extra": "avg block_count: 8319.028828242273, max block_count: 15151.0, count: 55293"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.359810464254064, max segment_count: 31.0, count: 55293"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.823889188882324, max cpu: 9.458128, count: 55293"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.796875,
            "unit": "median mem",
            "extra": "avg mem: 106.79205946051037, max mem: 159.62109375, count: 55293"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 3.9419191620844747, max cpu: 4.7244096, count: 55293"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 89.26171875,
            "unit": "median mem",
            "extra": "avg mem: 88.05551914912375, max mem: 141.08203125, count: 55293"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c3aa7fa0842c3676fc02353c5dca079d49df2be7",
          "message": "chore: cherry-pick PR3013 to main (#3104)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.\n\n---------\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric B. Ridge <eebbrr@paradedb.com>",
          "timestamp": "2025-09-02T16:55:33-04:00",
          "tree_id": "ffdcc5d9a2529e1b14e30bad2aa355dc46717288",
          "url": "https://github.com/paradedb/paradedb/commit/c3aa7fa0842c3676fc02353c5dca079d49df2be7"
        },
        "date": 1756847498580,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.789656731610303, max cpu: 9.638554, count: 55247"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 92.4921875,
            "unit": "median mem",
            "extra": "avg mem: 92.24976186489764, max mem: 147.59375, count: 55247"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.67282697142449, max cpu: 9.448819, count: 55247"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 85.45703125,
            "unit": "median mem",
            "extra": "avg mem: 85.4007042378998, max mem: 139.4921875, count: 55247"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7298182141434415, max cpu: 14.723927, count: 55247"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 93.1953125,
            "unit": "median mem",
            "extra": "avg mem: 93.58664349138867, max mem: 149.37890625, count: 55247"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 4.567008459028032, max cpu: 4.729064, count: 55247"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 93.046875,
            "unit": "median mem",
            "extra": "avg mem: 93.68985929100222, max mem: 149.6171875, count: 55247"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 5.184545544320604, max cpu: 14.159292, count: 110494"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 105.01953125,
            "unit": "median mem",
            "extra": "avg mem: 102.82368489041261, max mem: 161.2109375, count: 110494"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7901,
            "unit": "median block_count",
            "extra": "avg block_count: 7843.609625862037, max block_count: 14711.0, count: 55247"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.379007004905244, max segment_count: 29.0, count: 55247"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.651585848707959, max cpu: 9.81595, count: 55247"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 105.234375,
            "unit": "median mem",
            "extra": "avg mem: 104.511388344616, max mem: 158.28125, count: 55247"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.655674,
            "unit": "median cpu",
            "extra": "avg cpu: 4.4426894886411, max cpu: 4.7244096, count: 55247"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 88.85546875,
            "unit": "median mem",
            "extra": "avg mem: 84.78046693994696, max mem: 140.55859375, count: 55247"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756914416935,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.774754472390916, max cpu: 9.628887, count: 55287"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 102.04296875,
            "unit": "median mem",
            "extra": "avg mem: 101.12142638922803, max mem: 155.2265625, count: 55287"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.701740384789022, max cpu: 9.347614, count: 55287"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 95.62109375,
            "unit": "median mem",
            "extra": "avg mem: 93.6755995278049, max mem: 148.57421875, count: 55287"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.734568723609109, max cpu: 9.619239, count: 55287"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 102.67578125,
            "unit": "median mem",
            "extra": "avg mem: 101.55146977363576, max mem: 155.625, count: 55287"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 4.039057043925956, max cpu: 4.729064, count: 55287"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 102.125,
            "unit": "median mem",
            "extra": "avg mem: 100.1864613149339, max mem: 153.8203125, count: 55287"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 5.040801745275058, max cpu: 13.872832, count: 110574"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 111.09375,
            "unit": "median mem",
            "extra": "avg mem: 108.2745598041244, max mem: 165.0234375, count: 110574"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 9027,
            "unit": "median block_count",
            "extra": "avg block_count: 8936.987447320347, max block_count: 16959.0, count: 55287"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.505417186680413, max segment_count: 32.0, count: 55287"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.798501548703746, max cpu: 9.458128, count: 55287"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 112.72265625,
            "unit": "median mem",
            "extra": "avg mem: 111.37564676709715, max mem: 165.1171875, count: 55287"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.57332074815019, max cpu: 9.230769, count: 55287"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 93.2421875,
            "unit": "median mem",
            "extra": "avg mem: 94.01494961801599, max mem: 150.91015625, count: 55287"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e1895283ef244b91334cdfab6ddaeaec2bfe227c",
          "message": "feat: EXPLAIN metrics for parallel workers (#3113)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:47:41-07:00",
          "tree_id": "04be54f839a1e26575aeb541e332465bdeaf8d94",
          "url": "https://github.com/paradedb/paradedb/commit/e1895283ef244b91334cdfab6ddaeaec2bfe227c"
        },
        "date": 1756915526398,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.755192256974682, max cpu: 9.476802, count: 55252"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 97.38671875,
            "unit": "median mem",
            "extra": "avg mem: 96.98721030460436, max mem: 154.66796875, count: 55252"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.748957290604632, max cpu: 9.284333, count: 55252"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 90.21484375,
            "unit": "median mem",
            "extra": "avg mem: 89.32934504916112, max mem: 147.0859375, count: 55252"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.728137809481412, max cpu: 9.49868, count: 55252"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 97.5546875,
            "unit": "median mem",
            "extra": "avg mem: 97.50678128732896, max mem: 154.4609375, count: 55252"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.402110407235515, max cpu: 4.7151275, count: 55252"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 97.8828125,
            "unit": "median mem",
            "extra": "avg mem: 97.71837239771864, max mem: 155.4453125, count: 55252"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 5.116614773301199, max cpu: 14.443329, count: 110504"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 105.65234375,
            "unit": "median mem",
            "extra": "avg mem: 105.80676554977647, max mem: 167.23046875, count: 110504"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8436,
            "unit": "median block_count",
            "extra": "avg block_count: 8450.792260913631, max block_count: 15925.0, count: 55252"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.414754217041917, max segment_count: 39.0, count: 55252"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.714599231355422, max cpu: 9.448819, count: 55252"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 107.734375,
            "unit": "median mem",
            "extra": "avg mem: 107.96177259420473, max mem: 164.8359375, count: 55252"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.1779296889169695, max cpu: 7.4766355, count: 55252"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 89.53515625,
            "unit": "median mem",
            "extra": "avg mem: 90.88571334239032, max mem: 148.27734375, count: 55252"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7",
          "message": "fix: Fix handling of nulls in TopN (#3110)\n\n## What\n\nTopN was not handling nulls properly: instead, they were filled in with\na default, which would cause an error when the limit was high enough to\ninclude them.\n\n## How\n\nSee https://github.com/paradedb/tantivy/pull/61.\n\n## Tests\n\nAdded a regression test and property tests (which exposed a related\nissue in pushdown: https://github.com/paradedb/paradedb/pull/3110).",
          "timestamp": "2025-09-03T11:49:57-07:00",
          "tree_id": "406781ed0840de7d7c190e6d69ef8af7a0a8eb76",
          "url": "https://github.com/paradedb/paradedb/commit/daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7"
        },
        "date": 1756926461506,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.7488441552108505, max cpu: 9.448819, count: 55208"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 101.28125,
            "unit": "median mem",
            "extra": "avg mem: 100.3116797356135, max mem: 155.73828125, count: 55208"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.620928367268405, max cpu: 9.266409, count: 55208"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 92.08984375,
            "unit": "median mem",
            "extra": "avg mem: 92.09534262754039, max mem: 147.15234375, count: 55208"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.762521512561339, max cpu: 11.356467, count: 55208"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 100.7109375,
            "unit": "median mem",
            "extra": "avg mem: 99.72520499180372, max mem: 154.33984375, count: 55208"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.448973745134031, max cpu: 9.230769, count: 55208"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 100.640625,
            "unit": "median mem",
            "extra": "avg mem: 100.01234656039432, max mem: 155.55859375, count: 55208"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.994206766951651, max cpu: 11.44674, count: 110416"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 109.98046875,
            "unit": "median mem",
            "extra": "avg mem: 108.78991467495653, max mem: 167.05078125, count: 110416"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 8836,
            "unit": "median block_count",
            "extra": "avg block_count: 8800.208303144473, max block_count: 16823.0, count: 55208"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.436404144326909, max segment_count: 36.0, count: 55208"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.838770901806015, max cpu: 9.430255, count: 55208"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 113.37109375,
            "unit": "median mem",
            "extra": "avg mem: 110.73776565726435, max mem: 164.52734375, count: 55208"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.5933013,
            "unit": "median cpu",
            "extra": "avg cpu: 4.114869815529527, max cpu: 9.476802, count: 55208"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 89.90625,
            "unit": "median mem",
            "extra": "avg mem: 89.29656509246848, max mem: 145.4765625, count: 55208"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developers@paradedb.com",
            "name": "paradedb[bot]",
            "username": "paradedb-bot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e32b5f3fcf2fc6dcc9b32f180f6954e53800be13",
          "message": "feat: EXPLAIN metrics for parallel workers (#3112)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-09-03T12:11:09-07:00",
          "tree_id": "0e699e02dc2089d12fa9f72bd954261e49904273",
          "url": "https://github.com/paradedb/paradedb/commit/e32b5f3fcf2fc6dcc9b32f180f6954e53800be13"
        },
        "date": 1756927737555,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.727819776736928, max cpu: 9.448819, count: 55221"
          },
          {
            "name": "Custom Scan - Primary - mem",
            "value": 87.3359375,
            "unit": "median mem",
            "extra": "avg mem: 88.87393319287499, max mem: 140.5234375, count: 55221"
          },
          {
            "name": "Delete values - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 4.632464608726238, max cpu: 9.320388, count: 55221"
          },
          {
            "name": "Delete values - Primary - mem",
            "value": 79.4921875,
            "unit": "median mem",
            "extra": "avg mem: 80.93634752856703, max mem: 131.53125, count: 55221"
          },
          {
            "name": "Index Only Scan - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.772474344437342, max cpu: 9.467456, count: 55221"
          },
          {
            "name": "Index Only Scan - Primary - mem",
            "value": 88.3203125,
            "unit": "median mem",
            "extra": "avg mem: 89.72899328663462, max mem: 142.6328125, count: 55221"
          },
          {
            "name": "Index Scan - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 4.141878194456023, max cpu: 4.655674, count: 55221"
          },
          {
            "name": "Index Scan - Primary - mem",
            "value": 86.98828125,
            "unit": "median mem",
            "extra": "avg mem: 88.53189471057206, max mem: 140.6171875, count: 55221"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 5.027475855474915, max cpu: 11.267606, count: 110442"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 95.28125,
            "unit": "median mem",
            "extra": "avg mem: 95.40427890742426, max mem: 148.55078125, count: 110442"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 7209,
            "unit": "median block_count",
            "extra": "avg block_count: 7348.804458448779, max block_count: 13980.0, count: 55221"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 10,
            "unit": "median segment_count",
            "extra": "avg segment_count: 10.272287716629544, max segment_count: 36.0, count: 55221"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.761625803597733, max cpu: 9.302325, count: 55221"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 96.6171875,
            "unit": "median mem",
            "extra": "avg mem: 97.69316219146701, max mem: 148.85546875, count: 55221"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 4.619827,
            "unit": "median cpu",
            "extra": "avg cpu: 5.2488025729399315, max cpu: 9.275363, count: 55221"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 79.2734375,
            "unit": "median mem",
            "extra": "avg mem: 81.29139290872132, max mem: 134.125, count: 55221"
          }
        ]
      }
    ],
    "pg_search bulk-updates.toml Performance - TPS": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755716036756,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.756446977464457,
            "unit": "median tps",
            "extra": "avg tps: 5.803493442503363, max tps: 8.776875796286348, count: 57767"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.8675198469742424,
            "unit": "median tps",
            "extra": "avg tps: 5.256345765480045, max tps: 6.615598829208859, count: 57767"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755716163778,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.776908165368656,
            "unit": "median tps",
            "extra": "avg tps: 5.836842792102271, max tps: 8.790577583553445, count: 57510"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.571663166294946,
            "unit": "median tps",
            "extra": "avg tps: 4.982886432593411, max tps: 6.317742235279659, count: 57510"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755716196855,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.71847561443096,
            "unit": "median tps",
            "extra": "avg tps: 5.765804920524814, max tps: 8.60127126911043, count: 57942"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.902979378878519,
            "unit": "median tps",
            "extra": "avg tps: 5.280683886069507, max tps: 6.7054643082124885, count: 57942"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755725306998,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.771200626675449,
            "unit": "median tps",
            "extra": "avg tps: 5.79199760248553, max tps: 8.669853127851368, count: 57907"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.919417332534481,
            "unit": "median tps",
            "extra": "avg tps: 5.30032750803755, max tps: 6.696960299404023, count: 57907"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T13:19:49-04:00",
          "tree_id": "26f07dc326d4e53d8df249d9268a911b9d59d86b",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755725354427,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.788251074941238,
            "unit": "median tps",
            "extra": "avg tps: 5.826339693157543, max tps: 8.695569688198225, count: 57920"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.773949040940641,
            "unit": "median tps",
            "extra": "avg tps: 5.170705907826859, max tps: 6.521927069976282, count: 57920"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755725714962,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.70638872906968,
            "unit": "median tps",
            "extra": "avg tps: 5.7469084425852115, max tps: 8.588556230369807, count: 57918"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.910028671869697,
            "unit": "median tps",
            "extra": "avg tps: 5.2971521027980675, max tps: 6.711607562876859, count: 57918"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755726827225,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.902447324541406,
            "unit": "median tps",
            "extra": "avg tps: 5.900711347199286, max tps: 8.806789600765168, count: 57747"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.753408181129046,
            "unit": "median tps",
            "extra": "avg tps: 5.1668942879502895, max tps: 6.530891170148713, count: 57747"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755795575040,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.725057285366136,
            "unit": "median tps",
            "extra": "avg tps: 5.757325840457212, max tps: 8.606235202500832, count: 57880"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.888186454103314,
            "unit": "median tps",
            "extra": "avg tps: 5.273427334351231, max tps: 6.64321957527865, count: 57880"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755797785100,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.748924161782917,
            "unit": "median tps",
            "extra": "avg tps: 5.79062394215111, max tps: 8.6414469209464, count: 57733"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.803365907745763,
            "unit": "median tps",
            "extra": "avg tps: 5.205432038263172, max tps: 6.57126333550232, count: 57733"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bb7c02ed7b398872104e7879aed251dd18a6414",
          "message": "fix: don't ERROR if `paradedb.terms_with_operator` is missing (#3013)\n\n\n## What\n\nIt's possible that when upgrading pg_search from `v0.15.26` to `v0.17.x`\nwe could generate an ERROR complaining that\n`paradedb.terms_with_operator(...)` doesn't exist if the user upgraded\nthe extension binary but has not yet run `ALTER EXTENSION pg_search\nUPDATE;`.\n\nThis fixes that by inspecting the catalogs directly when it's necessary\nto lookup that function and plumbing through an `Option<pg_sys::Oid>`\nreturn value.\n\n## Why\n\nTo help users/customers/partners better deal with upgrading from really\nold pg_search versions.\n\n## How\n\n## Tests\n\nExisting tests pass, especially the ones added in #2730, and a new\nregress test has been added that explicitly removes the function from\nthe schema and ensures the query still works (tho with a different plan,\nof course).",
          "timestamp": "2025-08-21T15:17:35-04:00",
          "tree_id": "4c5e053bc28da403546f6c1b9ad61b9b62a75bdf",
          "url": "https://github.com/paradedb/paradedb/commit/2bb7c02ed7b398872104e7879aed251dd18a6414"
        },
        "date": 1755805535430,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.622367150187077,
            "unit": "median tps",
            "extra": "avg tps: 5.695066935323378, max tps: 8.545488642539713, count: 57713"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.75076722313134,
            "unit": "median tps",
            "extra": "avg tps: 5.155225844911593, max tps: 6.512659816886702, count: 57713"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ori@eigenstate.org",
            "name": "Ori Bernstein",
            "username": "oridb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "97ad25718b14ab34440c0587cb8bb9968598bf7d",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:11:27-04:00",
          "tree_id": "74eee4eb0e1503ed631c849c97ccf32653c4e203",
          "url": "https://github.com/paradedb/paradedb/commit/97ad25718b14ab34440c0587cb8bb9968598bf7d"
        },
        "date": 1755812332039,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.750632011401726,
            "unit": "median tps",
            "extra": "avg tps: 5.815933820777128, max tps: 8.717529746464027, count: 57491"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.742868989737723,
            "unit": "median tps",
            "extra": "avg tps: 5.143136354588341, max tps: 6.466997973109033, count: 57491"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f2428be0ee6a082b53176d781e62ee2519ccccc",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015) (#3016)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ori Bernstein <ori@eigenstate.org>\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:33:35-04:00",
          "tree_id": "b3df08f37cb0652f7b23674356d6a786d632a136",
          "url": "https://github.com/paradedb/paradedb/commit/7f2428be0ee6a082b53176d781e62ee2519ccccc"
        },
        "date": 1755813659041,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.798292948451294,
            "unit": "median tps",
            "extra": "avg tps: 5.819962986444398, max tps: 8.686044075894594, count: 57686"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.761309054827524,
            "unit": "median tps",
            "extra": "avg tps: 5.179435689178295, max tps: 6.495068239888188, count: 57686"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f929495a112d17ce5992a41cbd1d3b05aa17cbb",
          "message": "chore: Upgrade to `0.17.6` (#3017)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-21T18:03:19-04:00",
          "tree_id": "f3d6f5fb6a9f1748954b75791999f0080ecf1fb5",
          "url": "https://github.com/paradedb/paradedb/commit/4f929495a112d17ce5992a41cbd1d3b05aa17cbb"
        },
        "date": 1755815439706,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.940452690665845,
            "unit": "median tps",
            "extra": "avg tps: 5.956810865729291, max tps: 8.909224164909922, count: 57465"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.647523742408952,
            "unit": "median tps",
            "extra": "avg tps: 5.043956965423059, max tps: 6.4204229880084185, count: 57465"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755835051233,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.862472965209608,
            "unit": "median tps",
            "extra": "avg tps: 5.885013025631855, max tps: 8.805737297828076, count: 57754"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.758756648778571,
            "unit": "median tps",
            "extra": "avg tps: 5.156711148327658, max tps: 6.49844099663835, count: 57754"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755835355972,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.85810925920981,
            "unit": "median tps",
            "extra": "avg tps: 5.875905791786639, max tps: 8.782568771497829, count: 57186"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.725182496460671,
            "unit": "median tps",
            "extra": "avg tps: 5.130871448806732, max tps: 6.4700576567791135, count: 57186"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fbe8d2ee63335d61db9665e1eec916cc530f7a0",
          "message": "chore: Upgrade to `0.17.7` (#3024)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T10:27:16-04:00",
          "tree_id": "d8a53236b167b06e2b4e1beaeaf72fb424454256",
          "url": "https://github.com/paradedb/paradedb/commit/5fbe8d2ee63335d61db9665e1eec916cc530f7a0"
        },
        "date": 1755874483006,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.82289623878645,
            "unit": "median tps",
            "extra": "avg tps: 5.848144906434408, max tps: 8.745214456938537, count: 57735"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.754817655720525,
            "unit": "median tps",
            "extra": "avg tps: 5.1578249804193375, max tps: 6.492082597046589, count: 57735"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755888077008,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 6.698737998363695,
            "unit": "median tps",
            "extra": "avg tps: 5.747763168897072, max tps: 8.613129992232622, count: 57890"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.759795689873016,
            "unit": "median tps",
            "extra": "avg tps: 5.160932447188653, max tps: 6.5040380204866945, count: 57890"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755891423614,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.26568396997451,
            "unit": "median tps",
            "extra": "avg tps: 7.054716110467783, max tps: 10.904767720639486, count: 57524"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.428302337530054,
            "unit": "median tps",
            "extra": "avg tps: 4.9037378123836515, max tps: 6.005010258200556, count: 57524"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8386fa71d8c2979fb63993f4045d140aff8768fe",
          "message": "perf: optimize merging heuristics to prefer background merging (#3032)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:56-07:00",
          "tree_id": "fa86b284fe7c52c4cf1226cd910b7b9f1c0507d2",
          "url": "https://github.com/paradedb/paradedb/commit/8386fa71d8c2979fb63993f4045d140aff8768fe"
        },
        "date": 1755892524156,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.242358987040967,
            "unit": "median tps",
            "extra": "avg tps: 7.015981981947876, max tps: 10.811479463729357, count: 57757"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.486706902046442,
            "unit": "median tps",
            "extra": "avg tps: 4.967084571373688, max tps: 6.095110410943558, count: 57757"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cad75ef84c3942edd137497c4b6864b384a3655",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3037)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-24T13:29:07-04:00",
          "tree_id": "d76d1a8d15e8ca4d61db683033627e7bf4ec476d",
          "url": "https://github.com/paradedb/paradedb/commit/0cad75ef84c3942edd137497c4b6864b384a3655"
        },
        "date": 1756058201519,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.602084478520775,
            "unit": "median tps",
            "extra": "avg tps: 6.538961881894259, max tps: 10.199816839344647, count: 57867"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.688525123104231,
            "unit": "median tps",
            "extra": "avg tps: 5.11452501591372, max tps: 6.313834313207874, count: 57867"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6832efa7662fee49675d88dd2ceecb31dfffdd45",
          "message": "chore: Upgrade to `0.17.9` (#3041)",
          "timestamp": "2025-08-24T13:40:28-04:00",
          "tree_id": "4b3ff40f76aaaa9a2242a4bee88214604e92587a",
          "url": "https://github.com/paradedb/paradedb/commit/6832efa7662fee49675d88dd2ceecb31dfffdd45"
        },
        "date": 1756058884829,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.004134266811894,
            "unit": "median tps",
            "extra": "avg tps: 6.831519477946425, max tps: 10.546885861822863, count: 57807"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.504793344321183,
            "unit": "median tps",
            "extra": "avg tps: 4.972771887229804, max tps: 6.1571026710471815, count: 57807"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b08446356edfe8faed3798c0521304b8789d3e5",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3040)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:13-04:00",
          "tree_id": "1335b21c3132607da548eff65e5a684aa86ebecf",
          "url": "https://github.com/paradedb/paradedb/commit/4b08446356edfe8faed3798c0521304b8789d3e5"
        },
        "date": 1756059231711,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.903677691683938,
            "unit": "median tps",
            "extra": "avg tps: 6.753852745914065, max tps: 10.415776187714847, count: 57917"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.563748064454779,
            "unit": "median tps",
            "extra": "avg tps: 5.015313956178831, max tps: 6.2021124768392255, count: 57917"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756146499332,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.102961314829784,
            "unit": "median tps",
            "extra": "avg tps: 6.927095944275992, max tps: 10.677917284856171, count: 57571"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.434656324230331,
            "unit": "median tps",
            "extra": "avg tps: 4.9112096237754495, max tps: 6.046946944129212, count: 57571"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756148805970,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.898091912488695,
            "unit": "median tps",
            "extra": "avg tps: 6.754047296658512, max tps: 10.405865135790734, count: 57570"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.52823714810596,
            "unit": "median tps",
            "extra": "avg tps: 4.986977104933683, max tps: 6.164067150536034, count: 57570"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756163540210,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.076065581037321,
            "unit": "median tps",
            "extra": "avg tps: 6.914400789832204, max tps: 10.70544762244845, count: 57941"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.4431755716033585,
            "unit": "median tps",
            "extra": "avg tps: 4.912729498130966, max tps: 6.032705429609534, count: 57941"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756166605519,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.8496404019211115,
            "unit": "median tps",
            "extra": "avg tps: 6.724216993613739, max tps: 10.400985608917125, count: 57606"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.469450839202591,
            "unit": "median tps",
            "extra": "avg tps: 4.90524206923708, max tps: 6.1081494541637555, count: 57606"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756232652377,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.79667203430889,
            "unit": "median tps",
            "extra": "avg tps: 6.684938630361414, max tps: 10.339749977603727, count: 57595"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.554163995012476,
            "unit": "median tps",
            "extra": "avg tps: 5.002703512023845, max tps: 6.186988973212368, count: 57595"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756384693720,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.816405981782915,
            "unit": "median tps",
            "extra": "avg tps: 6.704354075852035, max tps: 10.406588101582159, count: 57817"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.5737965128658375,
            "unit": "median tps",
            "extra": "avg tps: 5.020055929729917, max tps: 6.187942292130942, count: 57817"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756402361169,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.945901296718623,
            "unit": "median tps",
            "extra": "avg tps: 6.802391317016395, max tps: 10.467272870022425, count: 57541"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.585009943878876,
            "unit": "median tps",
            "extra": "avg tps: 5.050647529758301, max tps: 6.2131627456435465, count: 57541"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756404533163,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.956142979332439,
            "unit": "median tps",
            "extra": "avg tps: 6.813064417173998, max tps: 10.615846819297587, count: 57424"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.564925443247558,
            "unit": "median tps",
            "extra": "avg tps: 5.02319577954508, max tps: 6.164263589105752, count: 57424"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756417798360,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 7.709259732834255,
            "unit": "median tps",
            "extra": "avg tps: 6.635688807215431, max tps: 10.311876475769795, count: 57432"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.61371045085348,
            "unit": "median tps",
            "extra": "avg tps: 5.052890639439188, max tps: 6.2173320024764145, count: 57432"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756836474904,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.184092190957205,
            "unit": "median tps",
            "extra": "avg tps: 6.99869079281532, max tps: 10.834139792488143, count: 57792"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.345077840983438,
            "unit": "median tps",
            "extra": "avg tps: 4.829842675347582, max tps: 5.942435954470086, count: 57792"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756915087673,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.13284068071935,
            "unit": "median tps",
            "extra": "avg tps: 6.987406917443833, max tps: 10.893628906457606, count: 57827"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.405310125348616,
            "unit": "median tps",
            "extra": "avg tps: 4.870144676357725, max tps: 6.000284085898811, count: 57827"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7",
          "message": "fix: Fix handling of nulls in TopN (#3110)\n\n## What\n\nTopN was not handling nulls properly: instead, they were filled in with\na default, which would cause an error when the limit was high enough to\ninclude them.\n\n## How\n\nSee https://github.com/paradedb/tantivy/pull/61.\n\n## Tests\n\nAdded a regression test and property tests (which exposed a related\nissue in pushdown: https://github.com/paradedb/paradedb/pull/3110).",
          "timestamp": "2025-09-03T11:49:57-07:00",
          "tree_id": "406781ed0840de7d7c190e6d69ef8af7a0a8eb76",
          "url": "https://github.com/paradedb/paradedb/commit/daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7"
        },
        "date": 1756927135491,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 8.417391477440622,
            "unit": "median tps",
            "extra": "avg tps: 7.175013203774868, max tps: 11.114655189553385, count: 57370"
          },
          {
            "name": "Count Query - Primary - tps",
            "value": 5.323238833095073,
            "unit": "median tps",
            "extra": "avg tps: 4.8130867858978865, max tps: 5.8957940857353455, count: 57370"
          }
        ]
      }
    ],
    "pg_search bulk-updates.toml Performance - Other Metrics": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755716039503,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.14626637700689, max cpu: 55.92233, count: 57767"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 238.0234375,
            "unit": "median mem",
            "extra": "avg mem: 236.94477538808923, max mem: 243.484375, count: 57767"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.311381815931945, max cpu: 33.3996, count: 57767"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.625,
            "unit": "median mem",
            "extra": "avg mem: 159.8865327252151, max mem: 162.5, count: 57767"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22575,
            "unit": "median block_count",
            "extra": "avg block_count: 20737.431457406477, max block_count: 23515.0, count: 57767"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.62102930739003, max segment_count: 96.0, count: 57767"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755716166626,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 21.322116744740892, max cpu: 42.772278, count: 57510"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 228.1640625,
            "unit": "median mem",
            "extra": "avg mem: 226.48976319335767, max mem: 237.0234375, count: 57510"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.33255297882187, max cpu: 33.267326, count: 57510"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.44921875,
            "unit": "median mem",
            "extra": "avg mem: 161.18733997348286, max mem: 163.4453125, count: 57510"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22503,
            "unit": "median block_count",
            "extra": "avg block_count: 20730.061171970094, max block_count: 23506.0, count: 57510"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.65798991479743, max segment_count: 97.0, count: 57510"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755716199603,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 21.43332124488102, max cpu: 42.814667, count: 57942"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 227.4140625,
            "unit": "median mem",
            "extra": "avg mem: 226.93131163221412, max mem: 232.1640625, count: 57942"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.17182429279233, max cpu: 33.333336, count: 57942"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.05078125,
            "unit": "median mem",
            "extra": "avg mem: 158.99376228329623, max mem: 161.25, count: 57942"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 21371,
            "unit": "median block_count",
            "extra": "avg block_count: 19849.484122053087, max block_count: 21486.0, count: 57942"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.35295640468054, max segment_count: 95.0, count: 57942"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755725309634,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 21.37084736472876, max cpu: 42.985077, count: 57907"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 226.95703125,
            "unit": "median mem",
            "extra": "avg mem: 226.1433216056565, max mem: 231.2265625, count: 57907"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.081449747023605, max cpu: 33.23442, count: 57907"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 158.7421875,
            "unit": "median mem",
            "extra": "avg mem: 158.85206080709153, max mem: 159.93359375, count: 57907"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22392,
            "unit": "median block_count",
            "extra": "avg block_count: 20729.29866855475, max block_count: 23686.0, count: 57907"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.58177767800093, max segment_count: 98.0, count: 57907"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T13:19:49-04:00",
          "tree_id": "26f07dc326d4e53d8df249d9268a911b9d59d86b",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755725356966,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.218911768885796, max cpu: 51.014496, count: 57920"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 236.04296875,
            "unit": "median mem",
            "extra": "avg mem: 235.1811462065133, max mem: 240.7890625, count: 57920"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.26704603189405, max cpu: 33.168808, count: 57920"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.9140625,
            "unit": "median mem",
            "extra": "avg mem: 161.34936584135446, max mem: 163.671875, count: 57920"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22435,
            "unit": "median block_count",
            "extra": "avg block_count: 20885.423705110497, max block_count: 23735.0, count: 57920"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.66740331491712, max segment_count: 96.0, count: 57920"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755725717685,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.188406,
            "unit": "median cpu",
            "extra": "avg cpu: 22.284980025947643, max cpu: 46.198265, count: 57918"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 235.76171875,
            "unit": "median mem",
            "extra": "avg mem: 234.912577169986, max mem: 241.828125, count: 57918"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.164569649440132, max cpu: 33.20158, count: 57918"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 162.2578125,
            "unit": "median mem",
            "extra": "avg mem: 161.59178291399047, max mem: 164.375, count: 57918"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22333,
            "unit": "median block_count",
            "extra": "avg block_count: 20735.324527780656, max block_count: 23580.0, count: 57918"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.43093684174177, max segment_count: 95.0, count: 57918"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755726829838,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 21.54306344496765, max cpu: 42.772278, count: 57747"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 228.57421875,
            "unit": "median mem",
            "extra": "avg mem: 227.4350219221345, max mem: 231.64453125, count: 57747"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.353333667071077, max cpu: 33.432835, count: 57747"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.37109375,
            "unit": "median mem",
            "extra": "avg mem: 159.3239910596005, max mem: 160.4375, count: 57747"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22691,
            "unit": "median block_count",
            "extra": "avg block_count: 20948.924498242333, max block_count: 23887.0, count: 57747"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.88875612585935, max segment_count: 99.0, count: 57747"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755795577576,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.231754928937104, max cpu: 65.11628, count: 57880"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 236.4453125,
            "unit": "median mem",
            "extra": "avg mem: 235.30394181658173, max mem: 241.58203125, count: 57880"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.229046122090065, max cpu: 33.23442, count: 57880"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.81640625,
            "unit": "median mem",
            "extra": "avg mem: 160.61876417264168, max mem: 162.1171875, count: 57880"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22265,
            "unit": "median block_count",
            "extra": "avg block_count: 20778.52303040774, max block_count: 23672.0, count: 57880"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.50722183828611, max segment_count: 95.0, count: 57880"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755797787793,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.210833,
            "unit": "median cpu",
            "extra": "avg cpu: 22.19870326034441, max cpu: 47.61905, count: 57733"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 237.0703125,
            "unit": "median mem",
            "extra": "avg mem: 236.27487670883636, max mem: 243.12890625, count: 57733"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.164122560292522, max cpu: 33.103447, count: 57733"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.2265625,
            "unit": "median mem",
            "extra": "avg mem: 161.06626639551902, max mem: 162.69921875, count: 57733"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22074,
            "unit": "median block_count",
            "extra": "avg block_count: 20715.235186115395, max block_count: 23602.0, count: 57733"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.48817833821211, max segment_count: 95.0, count: 57733"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bb7c02ed7b398872104e7879aed251dd18a6414",
          "message": "fix: don't ERROR if `paradedb.terms_with_operator` is missing (#3013)\n\n\n## What\n\nIt's possible that when upgrading pg_search from `v0.15.26` to `v0.17.x`\nwe could generate an ERROR complaining that\n`paradedb.terms_with_operator(...)` doesn't exist if the user upgraded\nthe extension binary but has not yet run `ALTER EXTENSION pg_search\nUPDATE;`.\n\nThis fixes that by inspecting the catalogs directly when it's necessary\nto lookup that function and plumbing through an `Option<pg_sys::Oid>`\nreturn value.\n\n## Why\n\nTo help users/customers/partners better deal with upgrading from really\nold pg_search versions.\n\n## How\n\n## Tests\n\nExisting tests pass, especially the ones added in #2730, and a new\nregress test has been added that explicitly removes the function from\nthe schema and ensures the query still works (tho with a different plan,\nof course).",
          "timestamp": "2025-08-21T15:17:35-04:00",
          "tree_id": "4c5e053bc28da403546f6c1b9ad61b9b62a75bdf",
          "url": "https://github.com/paradedb/paradedb/commit/2bb7c02ed7b398872104e7879aed251dd18a6414"
        },
        "date": 1755805537485,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.041644535584457, max cpu: 50.623203, count: 57713"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 237.8984375,
            "unit": "median mem",
            "extra": "avg mem: 236.9529358230598, max mem: 243.4921875, count: 57713"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.170203438398996, max cpu: 33.168808, count: 57713"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.2265625,
            "unit": "median mem",
            "extra": "avg mem: 160.24442093852338, max mem: 161.765625, count: 57713"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22466,
            "unit": "median block_count",
            "extra": "avg block_count: 20816.09127926117, max block_count: 23607.0, count: 57713"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.29800911406443, max segment_count: 96.0, count: 57713"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ori@eigenstate.org",
            "name": "Ori Bernstein",
            "username": "oridb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "97ad25718b14ab34440c0587cb8bb9968598bf7d",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:11:27-04:00",
          "tree_id": "74eee4eb0e1503ed631c849c97ccf32653c4e203",
          "url": "https://github.com/paradedb/paradedb/commit/97ad25718b14ab34440c0587cb8bb9968598bf7d"
        },
        "date": 1755812334144,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.099520737258167, max cpu: 47.43083, count: 57491"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 237.07421875,
            "unit": "median mem",
            "extra": "avg mem: 235.85208133120835, max mem: 242.51953125, count: 57491"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.303162175156494, max cpu: 33.267326, count: 57491"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.0390625,
            "unit": "median mem",
            "extra": "avg mem: 160.50896709648032, max mem: 162.58203125, count: 57491"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22107,
            "unit": "median block_count",
            "extra": "avg block_count: 20777.328973230593, max block_count: 23701.0, count: 57491"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.73601085387278, max segment_count: 97.0, count: 57491"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f2428be0ee6a082b53176d781e62ee2519ccccc",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015) (#3016)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ori Bernstein <ori@eigenstate.org>\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:33:35-04:00",
          "tree_id": "b3df08f37cb0652f7b23674356d6a786d632a136",
          "url": "https://github.com/paradedb/paradedb/commit/7f2428be0ee6a082b53176d781e62ee2519ccccc"
        },
        "date": 1755813661238,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.405347098981984, max cpu: 65.30612, count: 57686"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 235.6796875,
            "unit": "median mem",
            "extra": "avg mem: 234.63195366130864, max mem: 240.37890625, count: 57686"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.333545503333497, max cpu: 33.136093, count: 57686"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.97265625,
            "unit": "median mem",
            "extra": "avg mem: 159.9890391245276, max mem: 161.6015625, count: 57686"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22440,
            "unit": "median block_count",
            "extra": "avg block_count: 20832.477810907327, max block_count: 23624.0, count: 57686"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.58287972818361, max segment_count: 96.0, count: 57686"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f929495a112d17ce5992a41cbd1d3b05aa17cbb",
          "message": "chore: Upgrade to `0.17.6` (#3017)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-21T18:03:19-04:00",
          "tree_id": "f3d6f5fb6a9f1748954b75791999f0080ecf1fb5",
          "url": "https://github.com/paradedb/paradedb/commit/4f929495a112d17ce5992a41cbd1d3b05aa17cbb"
        },
        "date": 1755815441847,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.034480048489474, max cpu: 55.976677, count: 57465"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 237.140625,
            "unit": "median mem",
            "extra": "avg mem: 236.1066821244453, max mem: 243.8671875, count: 57465"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.339480656455105, max cpu: 33.432835, count: 57465"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.22265625,
            "unit": "median mem",
            "extra": "avg mem: 160.98299032563298, max mem: 162.65625, count: 57465"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22550,
            "unit": "median block_count",
            "extra": "avg block_count: 20899.51128513008, max block_count: 23764.0, count: 57465"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.94031149395285, max segment_count: 95.0, count: 57465"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755835053438,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.016054059759195, max cpu: 42.985077, count: 57754"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 237.26171875,
            "unit": "median mem",
            "extra": "avg mem: 236.18887422840842, max mem: 242.875, count: 57754"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.307242580239638, max cpu: 33.267326, count: 57754"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.1953125,
            "unit": "median mem",
            "extra": "avg mem: 160.3087786668456, max mem: 162.5625, count: 57754"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22472,
            "unit": "median block_count",
            "extra": "avg block_count: 20842.14452678602, max block_count: 23736.0, count: 57754"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.84555182325033, max segment_count: 96.0, count: 57754"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755835358165,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.210833,
            "unit": "median cpu",
            "extra": "avg cpu: 22.11732743267086, max cpu: 47.38401, count: 57186"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 235.265625,
            "unit": "median mem",
            "extra": "avg mem: 234.6369654094752, max mem: 242.0625, count: 57186"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.245575839086126, max cpu: 33.23442, count: 57186"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.27734375,
            "unit": "median mem",
            "extra": "avg mem: 159.34331897776553, max mem: 160.4375, count: 57186"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22652,
            "unit": "median block_count",
            "extra": "avg block_count: 20912.312681425523, max block_count: 23791.0, count: 57186"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.80705067673907, max segment_count: 98.0, count: 57186"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fbe8d2ee63335d61db9665e1eec916cc530f7a0",
          "message": "chore: Upgrade to `0.17.7` (#3024)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T10:27:16-04:00",
          "tree_id": "d8a53236b167b06e2b4e1beaeaf72fb424454256",
          "url": "https://github.com/paradedb/paradedb/commit/5fbe8d2ee63335d61db9665e1eec916cc530f7a0"
        },
        "date": 1755874485208,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.04206592719476, max cpu: 46.966736, count: 57735"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 236.12109375,
            "unit": "median mem",
            "extra": "avg mem: 235.27101763445052, max mem: 242.54296875, count: 57735"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.24929588337496, max cpu: 33.20158, count: 57735"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.06640625,
            "unit": "median mem",
            "extra": "avg mem: 160.7694593969213, max mem: 162.8671875, count: 57735"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22434,
            "unit": "median block_count",
            "extra": "avg block_count: 20851.509829392915, max block_count: 23701.0, count: 57735"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.69851909586906, max segment_count: 97.0, count: 57735"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755888079276,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.245455743929845, max cpu: 57.086224, count: 57890"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 235.9375,
            "unit": "median mem",
            "extra": "avg mem: 235.13470158922092, max mem: 241.25, count: 57890"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.17511596270286, max cpu: 33.300297, count: 57890"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 158.9765625,
            "unit": "median mem",
            "extra": "avg mem: 158.73184393353773, max mem: 160.421875, count: 57890"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22151,
            "unit": "median block_count",
            "extra": "avg block_count: 20648.298721713596, max block_count: 23686.0, count: 57890"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 67,
            "unit": "median segment_count",
            "extra": "avg segment_count: 68.48201761962342, max segment_count: 97.0, count: 57890"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755891425837,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.879055,
            "unit": "median cpu",
            "extra": "avg cpu: 19.661939170610555, max cpu: 42.899704, count: 57524"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 233.53515625,
            "unit": "median mem",
            "extra": "avg mem: 232.68117186685123, max mem: 237.8203125, count: 57524"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.498464217601754, max cpu: 33.103447, count: 57524"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.10546875,
            "unit": "median mem",
            "extra": "avg mem: 160.062798041361, max mem: 163.328125, count: 57524"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 24416,
            "unit": "median block_count",
            "extra": "avg block_count: 22492.318041165425, max block_count: 26405.0, count: 57524"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 38,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.09437799874835, max segment_count: 53.0, count: 57524"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8386fa71d8c2979fb63993f4045d140aff8768fe",
          "message": "perf: optimize merging heuristics to prefer background merging (#3032)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:56-07:00",
          "tree_id": "fa86b284fe7c52c4cf1226cd910b7b9f1c0507d2",
          "url": "https://github.com/paradedb/paradedb/commit/8386fa71d8c2979fb63993f4045d140aff8768fe"
        },
        "date": 1755892531431,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.991098,
            "unit": "median cpu",
            "extra": "avg cpu: 19.869592779020646, max cpu: 47.19764, count: 57757"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 232.25390625,
            "unit": "median mem",
            "extra": "avg mem: 231.0563492303963, max mem: 235.40234375, count: 57757"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.262423024167468, max cpu: 33.20158, count: 57757"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.02734375,
            "unit": "median mem",
            "extra": "avg mem: 160.04122849827726, max mem: 161.8515625, count: 57757"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23351,
            "unit": "median block_count",
            "extra": "avg block_count: 21842.117821216474, max block_count: 25320.0, count: 57757"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 37,
            "unit": "median segment_count",
            "extra": "avg segment_count: 37.59852485413023, max segment_count: 54.0, count: 57757"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cad75ef84c3942edd137497c4b6864b384a3655",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3037)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests",
          "timestamp": "2025-08-24T13:29:07-04:00",
          "tree_id": "d76d1a8d15e8ca4d61db683033627e7bf4ec476d",
          "url": "https://github.com/paradedb/paradedb/commit/0cad75ef84c3942edd137497c4b6864b384a3655"
        },
        "date": 1756058203661,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.121387,
            "unit": "median cpu",
            "extra": "avg cpu: 20.60518136822052, max cpu: 42.899704, count: 57867"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 235.05078125,
            "unit": "median mem",
            "extra": "avg mem: 231.61742788149982, max mem: 240.2578125, count: 57867"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.31298669023521, max cpu: 33.333336, count: 57867"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.06640625,
            "unit": "median mem",
            "extra": "avg mem: 160.49562088496035, max mem: 162.54296875, count: 57867"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 25479,
            "unit": "median block_count",
            "extra": "avg block_count: 23268.020806331762, max block_count: 26375.0, count: 57867"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.691309381858396, max segment_count: 71.0, count: 57867"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6832efa7662fee49675d88dd2ceecb31dfffdd45",
          "message": "chore: Upgrade to `0.17.9` (#3041)",
          "timestamp": "2025-08-24T13:40:28-04:00",
          "tree_id": "4b3ff40f76aaaa9a2242a4bee88214604e92587a",
          "url": "https://github.com/paradedb/paradedb/commit/6832efa7662fee49675d88dd2ceecb31dfffdd45"
        },
        "date": 1756058886982,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.010548,
            "unit": "median cpu",
            "extra": "avg cpu: 20.10252118135072, max cpu: 42.899704, count: 57807"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 232.36328125,
            "unit": "median mem",
            "extra": "avg mem: 229.70637409288668, max mem: 239.65234375, count: 57807"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.300623684158435, max cpu: 33.3996, count: 57807"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.91796875,
            "unit": "median mem",
            "extra": "avg mem: 160.82079551892505, max mem: 163.39453125, count: 57807"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23332,
            "unit": "median block_count",
            "extra": "avg block_count: 21726.916013631566, max block_count: 25126.0, count: 57807"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.67221962738077, max segment_count: 71.0, count: 57807"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b08446356edfe8faed3798c0521304b8789d3e5",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3040)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:13-04:00",
          "tree_id": "1335b21c3132607da548eff65e5a684aa86ebecf",
          "url": "https://github.com/paradedb/paradedb/commit/4b08446356edfe8faed3798c0521304b8789d3e5"
        },
        "date": 1756059233960,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.054754,
            "unit": "median cpu",
            "extra": "avg cpu: 20.52370158410105, max cpu: 42.72997, count: 57917"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 230.87890625,
            "unit": "median mem",
            "extra": "avg mem: 228.31202234987137, max mem: 233.51953125, count: 57917"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.18117471693188, max cpu: 33.23442, count: 57917"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.01953125,
            "unit": "median mem",
            "extra": "avg mem: 159.83655773024327, max mem: 161.7890625, count: 57917"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23688,
            "unit": "median block_count",
            "extra": "avg block_count: 22034.631196367216, max block_count: 25324.0, count: 57917"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 49.155394789094736, max segment_count: 71.0, count: 57917"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756146501558,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 22.64151,
            "unit": "median cpu",
            "extra": "avg cpu: 19.99417191348231, max cpu: 42.814667, count: 57571"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 233.625,
            "unit": "median mem",
            "extra": "avg mem: 231.1248165308923, max mem: 238.51953125, count: 57571"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.372783022333135, max cpu: 33.73494, count: 57571"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.38671875,
            "unit": "median mem",
            "extra": "avg mem: 161.30275713901096, max mem: 163.96875, count: 57571"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 24773,
            "unit": "median block_count",
            "extra": "avg block_count: 22813.966649875805, max block_count: 25724.0, count: 57571"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 51,
            "unit": "median segment_count",
            "extra": "avg segment_count: 49.29028503934273, max segment_count: 72.0, count: 57571"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756148808250,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.121387,
            "unit": "median cpu",
            "extra": "avg cpu: 20.495009238890386, max cpu: 43.02789, count: 57570"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 232.453125,
            "unit": "median mem",
            "extra": "avg mem: 229.8228626563314, max mem: 235.86328125, count: 57570"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.430113780279058, max cpu: 33.83686, count: 57570"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 163.41796875,
            "unit": "median mem",
            "extra": "avg mem: 162.4411205923224, max mem: 164.9296875, count: 57570"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 25306,
            "unit": "median block_count",
            "extra": "avg block_count: 23183.574674309537, max block_count: 26213.0, count: 57570"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.741862080944934, max segment_count: 71.0, count: 57570"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756163542441,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.010548,
            "unit": "median cpu",
            "extra": "avg cpu: 20.1422663202287, max cpu: 42.942345, count: 57941"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 231.140625,
            "unit": "median mem",
            "extra": "avg mem: 228.83333241195785, max mem: 235.14453125, count: 57941"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.26162629576086, max cpu: 33.267326, count: 57941"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.296875,
            "unit": "median mem",
            "extra": "avg mem: 159.99272407761774, max mem: 162.2890625, count: 57941"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23651,
            "unit": "median block_count",
            "extra": "avg block_count: 21992.822888800678, max block_count: 24967.0, count: 57941"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.86748589081997, max segment_count: 71.0, count: 57941"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756166607804,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.099133,
            "unit": "median cpu",
            "extra": "avg cpu: 20.341190691051054, max cpu: 43.32999, count: 57606"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 232.15234375,
            "unit": "median mem",
            "extra": "avg mem: 230.31246880750268, max mem: 239.4375, count: 57606"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.32025644339088, max cpu: 33.333336, count: 57606"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.34765625,
            "unit": "median mem",
            "extra": "avg mem: 161.12701951077145, max mem: 163.76171875, count: 57606"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 24848,
            "unit": "median block_count",
            "extra": "avg block_count: 22774.003628094295, max block_count: 25725.0, count: 57606"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.665347359650035, max segment_count: 71.0, count: 57606"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756232654728,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.099133,
            "unit": "median cpu",
            "extra": "avg cpu: 20.375651851653828, max cpu: 46.55674, count: 57595"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 231.5546875,
            "unit": "median mem",
            "extra": "avg mem: 228.8923551577828, max mem: 234.5546875, count: 57595"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.28630012695819, max cpu: 33.20158, count: 57595"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.98828125,
            "unit": "median mem",
            "extra": "avg mem: 159.73894760829933, max mem: 161.9296875, count: 57595"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23763,
            "unit": "median block_count",
            "extra": "avg block_count: 22051.8252626096, max block_count: 24907.0, count: 57595"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.6156784443094, max segment_count: 71.0, count: 57595"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756384696033,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.121387,
            "unit": "median cpu",
            "extra": "avg cpu: 20.23508759937073, max cpu: 47.01273, count: 57817"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 232.79296875,
            "unit": "median mem",
            "extra": "avg mem: 229.84849821149058, max mem: 235.9296875, count: 57817"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.30097,
            "unit": "median cpu",
            "extra": "avg cpu: 22.394996275427474, max cpu: 33.23442, count: 57817"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.0546875,
            "unit": "median mem",
            "extra": "avg mem: 160.90119910936662, max mem: 163.0546875, count: 57817"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23124,
            "unit": "median block_count",
            "extra": "avg block_count: 21848.628621339743, max block_count: 25143.0, count: 57817"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.64716259923552, max segment_count: 70.0, count: 57817"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756402363637,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.054754,
            "unit": "median cpu",
            "extra": "avg cpu: 20.219205456582028, max cpu: 47.151276, count: 57541"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 231.453125,
            "unit": "median mem",
            "extra": "avg mem: 228.92256194224552, max mem: 238.08203125, count: 57541"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.255816,
            "unit": "median cpu",
            "extra": "avg cpu: 22.37356507949739, max cpu: 33.667336, count: 57541"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.4375,
            "unit": "median mem",
            "extra": "avg mem: 161.05086807667575, max mem: 163.796875, count: 57541"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23687,
            "unit": "median block_count",
            "extra": "avg block_count: 22047.877478667386, max block_count: 25195.0, count: 57541"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 49.12271250065171, max segment_count: 70.0, count: 57541"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756404535350,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 22.857143,
            "unit": "median cpu",
            "extra": "avg cpu: 20.081958386279496, max cpu: 42.64561, count: 57424"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 242.5859375,
            "unit": "median mem",
            "extra": "avg mem: 237.58241341272813, max mem: 243.3359375, count: 57424"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 22.183563937383923, max cpu: 33.23442, count: 57424"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.3984375,
            "unit": "median mem",
            "extra": "avg mem: 160.93295084862166, max mem: 163.4296875, count: 57424"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23580,
            "unit": "median block_count",
            "extra": "avg block_count: 22015.436193925885, max block_count: 25226.0, count: 57424"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.88377681805517, max segment_count: 70.0, count: 57424"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756417800487,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 23.099133,
            "unit": "median cpu",
            "extra": "avg cpu: 20.445542703154082, max cpu: 42.857143, count: 57432"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 232.41015625,
            "unit": "median mem",
            "extra": "avg mem: 229.6700205650813, max mem: 242.0390625, count: 57432"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.302633176346074, max cpu: 33.333336, count: 57432"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 160.7421875,
            "unit": "median mem",
            "extra": "avg mem: 160.55844513674867, max mem: 163.07421875, count: 57432"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23573,
            "unit": "median block_count",
            "extra": "avg block_count: 21834.73264033988, max block_count: 24796.0, count: 57432"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 50,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.67171611645076, max segment_count: 71.0, count: 57432"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756836477425,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.991098,
            "unit": "median cpu",
            "extra": "avg cpu: 19.7665637432011, max cpu: 42.857143, count: 57792"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 230.66015625,
            "unit": "median mem",
            "extra": "avg mem: 230.62712514545697, max mem: 233.125, count: 57792"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.537846568104076, max cpu: 33.432835, count: 57792"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.0234375,
            "unit": "median mem",
            "extra": "avg mem: 158.56109064890038, max mem: 162.28515625, count: 57792"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 24034,
            "unit": "median block_count",
            "extra": "avg block_count: 22835.439351467332, max block_count: 25667.0, count: 57792"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 70,
            "unit": "median segment_count",
            "extra": "avg segment_count: 72.20509759136213, max segment_count: 105.0, count: 57792"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756915090233,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.927444,
            "unit": "median cpu",
            "extra": "avg cpu: 19.515697381848234, max cpu: 42.814667, count: 57827"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 231.05078125,
            "unit": "median mem",
            "extra": "avg mem: 230.8534127116226, max mem: 232.5859375, count: 57827"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.323614,
            "unit": "median cpu",
            "extra": "avg cpu: 22.48655660605478, max cpu: 33.300297, count: 57827"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 161.86328125,
            "unit": "median mem",
            "extra": "avg mem: 161.8349548410561, max mem: 163.2265625, count: 57827"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 23844,
            "unit": "median block_count",
            "extra": "avg block_count: 22825.64775969703, max block_count: 25823.0, count: 57827"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 71,
            "unit": "median segment_count",
            "extra": "avg segment_count: 72.37029415325021, max segment_count: 108.0, count: 57827"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7",
          "message": "fix: Fix handling of nulls in TopN (#3110)\n\n## What\n\nTopN was not handling nulls properly: instead, they were filled in with\na default, which would cause an error when the limit was high enough to\ninclude them.\n\n## How\n\nSee https://github.com/paradedb/tantivy/pull/61.\n\n## Tests\n\nAdded a regression test and property tests (which exposed a related\nissue in pushdown: https://github.com/paradedb/paradedb/pull/3110).",
          "timestamp": "2025-09-03T11:49:57-07:00",
          "tree_id": "406781ed0840de7d7c190e6d69ef8af7a0a8eb76",
          "url": "https://github.com/paradedb/paradedb/commit/daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7"
        },
        "date": 1756927137998,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.779343,
            "unit": "median cpu",
            "extra": "avg cpu: 19.485604070396032, max cpu: 42.772278, count: 57370"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 229.95703125,
            "unit": "median mem",
            "extra": "avg mem: 230.16328009249173, max mem: 233.37109375, count: 57370"
          },
          {
            "name": "Count Query - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 22.415190106144635, max cpu: 33.267326, count: 57370"
          },
          {
            "name": "Count Query - Primary - mem",
            "value": 159.8828125,
            "unit": "median mem",
            "extra": "avg mem: 159.88992348189385, max mem: 162.13671875, count: 57370"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 24113,
            "unit": "median block_count",
            "extra": "avg block_count: 22992.08026843298, max block_count: 25996.0, count: 57370"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 71,
            "unit": "median segment_count",
            "extra": "avg segment_count: 72.73618616001394, max segment_count: 107.0, count: 57370"
          }
        ]
      }
    ],
    "pg_search wide-table.toml Performance - TPS": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755716686075,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.47798649638836,
            "unit": "median tps",
            "extra": "avg tps: 28.228372308112576, max tps: 28.603561939181894, count: 57683"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 122.41983291779356,
            "unit": "median tps",
            "extra": "avg tps: 121.78283495851011, max tps: 124.0763733444903, count: 57683"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755716811710,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.310844705620088,
            "unit": "median tps",
            "extra": "avg tps: 29.15897198316339, max tps: 29.45261508816826, count: 57611"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 142.278591044247,
            "unit": "median tps",
            "extra": "avg tps: 141.25687421479807, max tps: 144.97181674347308, count: 57611"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755716844710,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.36828747735019,
            "unit": "median tps",
            "extra": "avg tps: 27.402531391546894, max tps: 30.131720435964127, count: 56618"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 131.93315904069212,
            "unit": "median tps",
            "extra": "avg tps: 131.5839916147656, max tps: 141.53827636008072, count: 56618"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755725960262,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.1524880649853,
            "unit": "median tps",
            "extra": "avg tps: 28.88060258721591, max tps: 29.309166949872175, count: 57552"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 138.31465973590366,
            "unit": "median tps",
            "extra": "avg tps: 137.73380767050494, max tps: 140.199756237339, count: 57552"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T13:19:49-04:00",
          "tree_id": "26f07dc326d4e53d8df249d9268a911b9d59d86b",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755726008274,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.65277117932587,
            "unit": "median tps",
            "extra": "avg tps: 27.525939512813824, max tps: 27.807969364587233, count: 57901"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 121.87635268790595,
            "unit": "median tps",
            "extra": "avg tps: 121.08808709076678, max tps: 123.68287900340925, count: 57901"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755726369201,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.605926938859938,
            "unit": "median tps",
            "extra": "avg tps: 27.51511685225382, max tps: 27.796150463475772, count: 57911"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 125.63255786603655,
            "unit": "median tps",
            "extra": "avg tps: 124.30101917813028, max tps: 127.42199761021526, count: 57911"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755727481049,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.06820658131072,
            "unit": "median tps",
            "extra": "avg tps: 27.078805535396377, max tps: 27.724941843183146, count: 56104"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 130.16978737667642,
            "unit": "median tps",
            "extra": "avg tps: 129.64204277392818, max tps: 137.67630363567616, count: 56104"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755796230455,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.914330088704904,
            "unit": "median tps",
            "extra": "avg tps: 27.77285738772965, max tps: 28.090710330444978, count: 57490"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 125.72014156602968,
            "unit": "median tps",
            "extra": "avg tps: 124.838775510516, max tps: 127.78227829890407, count: 57490"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755798442308,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.751970543497457,
            "unit": "median tps",
            "extra": "avg tps: 27.59256961049825, max tps: 27.8750426412571, count: 57950"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 125.36456912011604,
            "unit": "median tps",
            "extra": "avg tps: 124.60452251155385, max tps: 127.20675589559362, count: 57950"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bb7c02ed7b398872104e7879aed251dd18a6414",
          "message": "fix: don't ERROR if `paradedb.terms_with_operator` is missing (#3013)\n\n\n## What\n\nIt's possible that when upgrading pg_search from `v0.15.26` to `v0.17.x`\nwe could generate an ERROR complaining that\n`paradedb.terms_with_operator(...)` doesn't exist if the user upgraded\nthe extension binary but has not yet run `ALTER EXTENSION pg_search\nUPDATE;`.\n\nThis fixes that by inspecting the catalogs directly when it's necessary\nto lookup that function and plumbing through an `Option<pg_sys::Oid>`\nreturn value.\n\n## Why\n\nTo help users/customers/partners better deal with upgrading from really\nold pg_search versions.\n\n## How\n\n## Tests\n\nExisting tests pass, especially the ones added in #2730, and a new\nregress test has been added that explicitly removes the function from\nthe schema and ensures the query still works (tho with a different plan,\nof course).",
          "timestamp": "2025-08-21T15:17:35-04:00",
          "tree_id": "4c5e053bc28da403546f6c1b9ad61b9b62a75bdf",
          "url": "https://github.com/paradedb/paradedb/commit/2bb7c02ed7b398872104e7879aed251dd18a6414"
        },
        "date": 1755806191494,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 25.62718114148919,
            "unit": "median tps",
            "extra": "avg tps: 25.637460767297092, max tps: 26.10059515803176, count: 56374"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 112.48527316617279,
            "unit": "median tps",
            "extra": "avg tps: 112.30971693449584, max tps: 116.56825229991374, count: 56374"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ori@eigenstate.org",
            "name": "Ori Bernstein",
            "username": "oridb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "97ad25718b14ab34440c0587cb8bb9968598bf7d",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:11:27-04:00",
          "tree_id": "74eee4eb0e1503ed631c849c97ccf32653c4e203",
          "url": "https://github.com/paradedb/paradedb/commit/97ad25718b14ab34440c0587cb8bb9968598bf7d"
        },
        "date": 1755812992961,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.9210612058077,
            "unit": "median tps",
            "extra": "avg tps: 27.803490539484862, max tps: 28.123781872539574, count: 57893"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 127.15367848468138,
            "unit": "median tps",
            "extra": "avg tps: 126.17567665894045, max tps: 129.08489386483387, count: 57893"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f2428be0ee6a082b53176d781e62ee2519ccccc",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015) (#3016)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ori Bernstein <ori@eigenstate.org>\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:33:35-04:00",
          "tree_id": "b3df08f37cb0652f7b23674356d6a786d632a136",
          "url": "https://github.com/paradedb/paradedb/commit/7f2428be0ee6a082b53176d781e62ee2519ccccc"
        },
        "date": 1755814317063,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.619673863515462,
            "unit": "median tps",
            "extra": "avg tps: 28.49081606306439, max tps: 28.784795387112712, count: 57684"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 123.96564836493808,
            "unit": "median tps",
            "extra": "avg tps: 123.44596352825539, max tps: 126.32218546027934, count: 57684"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f929495a112d17ce5992a41cbd1d3b05aa17cbb",
          "message": "chore: Upgrade to `0.17.6` (#3017)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-21T18:03:19-04:00",
          "tree_id": "f3d6f5fb6a9f1748954b75791999f0080ecf1fb5",
          "url": "https://github.com/paradedb/paradedb/commit/4f929495a112d17ce5992a41cbd1d3b05aa17cbb"
        },
        "date": 1755816097544,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.9436151942169,
            "unit": "median tps",
            "extra": "avg tps: 27.88375425333968, max tps: 28.181820982158705, count: 57464"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 124.25021067120949,
            "unit": "median tps",
            "extra": "avg tps: 123.56730289600678, max tps: 126.17359771359985, count: 57464"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755835706848,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 25.752467788216798,
            "unit": "median tps",
            "extra": "avg tps: 25.693557835615987, max tps: 25.960941905089875, count: 56401"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 114.32151162372178,
            "unit": "median tps",
            "extra": "avg tps: 113.86465307069838, max tps: 118.2122881486496, count: 56401"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755836015446,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 27.823085509435614,
            "unit": "median tps",
            "extra": "avg tps: 27.707246536370008, max tps: 28.021036390280727, count: 57478"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 124.02018036986799,
            "unit": "median tps",
            "extra": "avg tps: 123.3486993263159, max tps: 126.15408212910008, count: 57478"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fbe8d2ee63335d61db9665e1eec916cc530f7a0",
          "message": "chore: Upgrade to `0.17.7` (#3024)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T10:27:16-04:00",
          "tree_id": "d8a53236b167b06e2b4e1beaeaf72fb424454256",
          "url": "https://github.com/paradedb/paradedb/commit/5fbe8d2ee63335d61db9665e1eec916cc530f7a0"
        },
        "date": 1755875145865,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 25.805338368965753,
            "unit": "median tps",
            "extra": "avg tps: 25.80049308633475, max tps: 26.223755060605296, count: 56334"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 119.35594005286413,
            "unit": "median tps",
            "extra": "avg tps: 118.76549921801025, max tps: 120.69977704137285, count: 56334"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755888741323,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.601555167559386,
            "unit": "median tps",
            "extra": "avg tps: 28.377896764544943, max tps: 28.707820898469627, count: 57710"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 120.42065172850022,
            "unit": "median tps",
            "extra": "avg tps: 119.8796351502216, max tps: 121.9327453728469, count: 57710"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755892085784,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.845226071746392,
            "unit": "median tps",
            "extra": "avg tps: 29.773872825684155, max tps: 30.124201135648036, count: 57911"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 157.9882824128506,
            "unit": "median tps",
            "extra": "avg tps: 157.28077785633104, max tps: 159.88683765811697, count: 57911"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8386fa71d8c2979fb63993f4045d140aff8768fe",
          "message": "perf: optimize merging heuristics to prefer background merging (#3032)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:56-07:00",
          "tree_id": "fa86b284fe7c52c4cf1226cd910b7b9f1c0507d2",
          "url": "https://github.com/paradedb/paradedb/commit/8386fa71d8c2979fb63993f4045d140aff8768fe"
        },
        "date": 1755893195269,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 30.03997078630587,
            "unit": "median tps",
            "extra": "avg tps: 29.860781300093084, max tps: 30.31027173816866, count: 57785"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 155.83451237742153,
            "unit": "median tps",
            "extra": "avg tps: 155.11473170611237, max tps: 158.6554674013907, count: 57785"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6832efa7662fee49675d88dd2ceecb31dfffdd45",
          "message": "chore: Upgrade to `0.17.9` (#3041)",
          "timestamp": "2025-08-24T13:40:28-04:00",
          "tree_id": "4b3ff40f76aaaa9a2242a4bee88214604e92587a",
          "url": "https://github.com/paradedb/paradedb/commit/6832efa7662fee49675d88dd2ceecb31dfffdd45"
        },
        "date": 1756059550896,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.96357850701081,
            "unit": "median tps",
            "extra": "avg tps: 28.873496638355483, max tps: 29.242707008014694, count: 58006"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 152.8361356970769,
            "unit": "median tps",
            "extra": "avg tps: 152.06425933162836, max tps: 155.35744728717785, count: 58006"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b08446356edfe8faed3798c0521304b8789d3e5",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3040)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:13-04:00",
          "tree_id": "1335b21c3132607da548eff65e5a684aa86ebecf",
          "url": "https://github.com/paradedb/paradedb/commit/4b08446356edfe8faed3798c0521304b8789d3e5"
        },
        "date": 1756059901635,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.831186207259034,
            "unit": "median tps",
            "extra": "avg tps: 29.74027749499618, max tps: 30.110756622711456, count: 57815"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 151.10806278493897,
            "unit": "median tps",
            "extra": "avg tps: 150.17614688167515, max tps: 153.1682632865189, count: 57815"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756147145526,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 30.18451957156361,
            "unit": "median tps",
            "extra": "avg tps: 30.053264710500407, max tps: 30.493574030293964, count: 57906"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 149.9365585010159,
            "unit": "median tps",
            "extra": "avg tps: 149.0892912135121, max tps: 152.5838309727801, count: 57906"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756149454154,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.81906062809507,
            "unit": "median tps",
            "extra": "avg tps: 28.771283807911804, max tps: 29.119043906369136, count: 57334"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 151.79217835884788,
            "unit": "median tps",
            "extra": "avg tps: 150.67613334757166, max tps: 154.06458094256394, count: 57334"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756164188724,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.559065120282423,
            "unit": "median tps",
            "extra": "avg tps: 29.277329880749217, max tps: 29.724149328293084, count: 57675"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 151.97878769969037,
            "unit": "median tps",
            "extra": "avg tps: 151.40765998020066, max tps: 154.50167125870033, count: 57675"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756167255731,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.763221061560063,
            "unit": "median tps",
            "extra": "avg tps: 29.640445476313797, max tps: 29.99077644588139, count: 57884"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 152.5310024004432,
            "unit": "median tps",
            "extra": "avg tps: 152.1340784688833, max tps: 155.12580948942104, count: 57884"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756233309547,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.6076701507502,
            "unit": "median tps",
            "extra": "avg tps: 28.49083587549011, max tps: 28.869413234049716, count: 57321"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 150.0900467130065,
            "unit": "median tps",
            "extra": "avg tps: 149.4609506348113, max tps: 151.62421694828174, count: 57321"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756385366718,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.830487395476485,
            "unit": "median tps",
            "extra": "avg tps: 29.71889520090245, max tps: 30.031375243332864, count: 57883"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 152.70447489476018,
            "unit": "median tps",
            "extra": "avg tps: 152.32514824772628, max tps: 155.55396310317096, count: 57883"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756403039899,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.219658009188688,
            "unit": "median tps",
            "extra": "avg tps: 28.19364803116986, max tps: 28.829493351105018, count: 57086"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 145.3899055908887,
            "unit": "median tps",
            "extra": "avg tps: 145.1788205846552, max tps: 147.49089669101568, count: 57086"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756405209558,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 29.710695469959376,
            "unit": "median tps",
            "extra": "avg tps: 29.54981009714096, max tps: 29.97604141115893, count: 57964"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 147.52819150784268,
            "unit": "median tps",
            "extra": "avg tps: 146.95757975185643, max tps: 149.76073688493364, count: 57964"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756418481285,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 28.82990362732267,
            "unit": "median tps",
            "extra": "avg tps: 28.56149841959153, max tps: 29.006897133850295, count: 57352"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 148.51094505204927,
            "unit": "median tps",
            "extra": "avg tps: 147.79835798027096, max tps: 150.19044655104582, count: 57352"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756837122829,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 34.14756538973905,
            "unit": "median tps",
            "extra": "avg tps: 34.034272719468845, max tps: 34.349689796064055, count: 57802"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 376.2724760420283,
            "unit": "median tps",
            "extra": "avg tps: 374.80902215410316, max tps: 392.0543536805481, count: 57802"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756915737292,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 32.51005905034607,
            "unit": "median tps",
            "extra": "avg tps: 32.48693081652562, max tps: 32.925716123893665, count: 57160"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 385.9839347139548,
            "unit": "median tps",
            "extra": "avg tps: 384.4088559783798, max tps: 396.28067958835953, count: 57160"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7",
          "message": "fix: Fix handling of nulls in TopN (#3110)\n\n## What\n\nTopN was not handling nulls properly: instead, they were filled in with\na default, which would cause an error when the limit was high enough to\ninclude them.\n\n## How\n\nSee https://github.com/paradedb/tantivy/pull/61.\n\n## Tests\n\nAdded a regression test and property tests (which exposed a related\nissue in pushdown: https://github.com/paradedb/paradedb/pull/3110).",
          "timestamp": "2025-09-03T11:49:57-07:00",
          "tree_id": "406781ed0840de7d7c190e6d69ef8af7a0a8eb76",
          "url": "https://github.com/paradedb/paradedb/commit/daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7"
        },
        "date": 1756927787057,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - tps",
            "value": 33.840183412562766,
            "unit": "median tps",
            "extra": "avg tps: 33.751879534357336, max tps: 34.18666756857594, count: 57306"
          },
          {
            "name": "Single Update - Primary - tps",
            "value": 382.5610478061756,
            "unit": "median tps",
            "extra": "avg tps: 380.1023818512893, max tps: 394.35195123588613, count: 57306"
          }
        ]
      }
    ],
    "pg_search wide-table.toml Performance - Other Metrics": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755716688816,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.731707,
            "unit": "median cpu",
            "extra": "avg cpu: 20.608533923891983, max cpu: 101.53847, count: 57683"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 174.39453125,
            "unit": "median mem",
            "extra": "avg mem: 172.98578362830037, max mem: 180.23046875, count: 57683"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18255,
            "unit": "median block_count",
            "extra": "avg block_count: 16728.99977463031, max block_count: 21557.0, count: 57683"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.08966246554444, max segment_count: 117.0, count: 57683"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 19.792525672820176, max cpu: 171.26326, count: 57683"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 165.953125,
            "unit": "median mem",
            "extra": "avg mem: 156.4320274035461, max mem: 174.7890625, count: 57683"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755716814461,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.713451,
            "unit": "median cpu",
            "extra": "avg cpu: 20.245597187303883, max cpu: 47.43083, count: 57611"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 175.6953125,
            "unit": "median mem",
            "extra": "avg mem: 173.8543355435594, max mem: 178.59375, count: 57611"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18424,
            "unit": "median block_count",
            "extra": "avg block_count: 17043.88104702227, max block_count: 22537.0, count: 57611"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 41,
            "unit": "median segment_count",
            "extra": "avg segment_count: 43.079724358195485, max segment_count: 119.0, count: 57611"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.384164,
            "unit": "median cpu",
            "extra": "avg cpu: 11.341203239543852, max cpu: 37.426903, count: 57611"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 162.28515625,
            "unit": "median mem",
            "extra": "avg mem: 151.8968074944455, max mem: 169.765625, count: 57611"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "309944e7eb5d08d60af4a4b78822d7da10f12323",
          "message": "chore: Upgrade to `0.16.5` (#2928)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-03T18:49:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/309944e7eb5d08d60af4a4b78822d7da10f12323"
        },
        "date": 1755716847451,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.731707,
            "unit": "median cpu",
            "extra": "avg cpu: 20.730506195329546, max cpu: 60.523766, count: 56618"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 173.0390625,
            "unit": "median mem",
            "extra": "avg mem: 171.1407422882299, max mem: 176.578125, count: 56618"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 16962,
            "unit": "median block_count",
            "extra": "avg block_count: 15356.353491822389, max block_count: 16962.0, count: 56618"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 82,
            "unit": "median segment_count",
            "extra": "avg segment_count: 83.79557737821894, max segment_count: 173.0, count: 56618"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 13.899614,
            "unit": "median cpu",
            "extra": "avg cpu: 12.218379585551643, max cpu: 36.994217, count: 56618"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 161.3203125,
            "unit": "median mem",
            "extra": "avg mem: 151.71469686374033, max mem: 168.57421875, count: 56618"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755725962951,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.640776,
            "unit": "median cpu",
            "extra": "avg cpu: 20.200463266256484, max cpu: 49.72111, count: 57552"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 170.671875,
            "unit": "median mem",
            "extra": "avg mem: 169.92523276504292, max mem: 177.36328125, count: 57552"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18607,
            "unit": "median block_count",
            "extra": "avg block_count: 17084.51417848207, max block_count: 22705.0, count: 57552"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.327946900194604, max segment_count: 116.0, count: 57552"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.448819,
            "unit": "median cpu",
            "extra": "avg cpu: 11.601608477240424, max cpu: 37.28155, count: 57552"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 168.03515625,
            "unit": "median mem",
            "extra": "avg mem: 156.42472290005125, max mem: 177.5625, count: 57552"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T13:19:49-04:00",
          "tree_id": "26f07dc326d4e53d8df249d9268a911b9d59d86b",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755726011142,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.779343,
            "unit": "median cpu",
            "extra": "avg cpu: 20.946357666378937, max cpu: 124.61539, count: 57901"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 174.3671875,
            "unit": "median mem",
            "extra": "avg mem: 172.72370336328387, max mem: 178.7890625, count: 57901"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19108,
            "unit": "median block_count",
            "extra": "avg block_count: 17198.649211585293, max block_count: 21362.0, count: 57901"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 41,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.570870969413306, max segment_count: 122.0, count: 57901"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 19.435803937249748, max cpu: 157.83366, count: 57901"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 167.515625,
            "unit": "median mem",
            "extra": "avg mem: 158.260034099152, max mem: 176.32421875, count: 57901"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755726372018,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.786694,
            "unit": "median cpu",
            "extra": "avg cpu: 20.986929191245167, max cpu: 47.66634, count: 57911"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 175.59375,
            "unit": "median mem",
            "extra": "avg mem: 174.5593554926957, max mem: 180.859375, count: 57911"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18696,
            "unit": "median block_count",
            "extra": "avg block_count: 16969.1119476438, max block_count: 21706.0, count: 57911"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.31988741344477, max segment_count: 118.0, count: 57911"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 19.159468347197958, max cpu: 166.15385, count: 57911"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 169.45703125,
            "unit": "median mem",
            "extra": "avg mem: 158.74774998219252, max mem: 177.35546875, count: 57911"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755727483704,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.768328,
            "unit": "median cpu",
            "extra": "avg cpu: 20.876677091331103, max cpu: 55.54484, count: 56104"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 170.41015625,
            "unit": "median mem",
            "extra": "avg mem: 168.66011538003085, max mem: 172.14453125, count: 56104"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19717,
            "unit": "median block_count",
            "extra": "avg block_count: 17824.590938257523, max block_count: 22223.0, count: 56104"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 41.834058177670045, max segment_count: 139.0, count: 56104"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 13.899614,
            "unit": "median cpu",
            "extra": "avg cpu: 12.564867272659752, max cpu: 37.573387, count: 56104"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 162.11328125,
            "unit": "median mem",
            "extra": "avg mem: 153.68710014270374, max mem: 169.0078125, count: 56104"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755796232996,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.768328,
            "unit": "median cpu",
            "extra": "avg cpu: 20.834232540489097, max cpu: 88.115944, count: 57490"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 173.328125,
            "unit": "median mem",
            "extra": "avg mem: 171.75086740628805, max mem: 176.7109375, count: 57490"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18816,
            "unit": "median block_count",
            "extra": "avg block_count: 17028.12830057401, max block_count: 21523.0, count: 57490"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 41.80172203861541, max segment_count: 115.0, count: 57490"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 19.264299057690092, max cpu: 139.80582, count: 57490"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 167.88671875,
            "unit": "median mem",
            "extra": "avg mem: 158.06920028211428, max mem: 175.9453125, count: 57490"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755798444969,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.768328,
            "unit": "median cpu",
            "extra": "avg cpu: 20.874412288161633, max cpu: 51.6129, count: 57950"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 174.3828125,
            "unit": "median mem",
            "extra": "avg mem: 173.1825626887403, max mem: 179.06640625, count: 57950"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19433,
            "unit": "median block_count",
            "extra": "avg block_count: 17425.868559102673, max block_count: 21883.0, count: 57950"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.05304572907679, max segment_count: 125.0, count: 57950"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 19.391354590469533, max cpu: 174.88016, count: 57950"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 167.7421875,
            "unit": "median mem",
            "extra": "avg mem: 157.56318391393444, max mem: 177.12890625, count: 57950"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bb7c02ed7b398872104e7879aed251dd18a6414",
          "message": "fix: don't ERROR if `paradedb.terms_with_operator` is missing (#3013)\n\n\n## What\n\nIt's possible that when upgrading pg_search from `v0.15.26` to `v0.17.x`\nwe could generate an ERROR complaining that\n`paradedb.terms_with_operator(...)` doesn't exist if the user upgraded\nthe extension binary but has not yet run `ALTER EXTENSION pg_search\nUPDATE;`.\n\nThis fixes that by inspecting the catalogs directly when it's necessary\nto lookup that function and plumbing through an `Option<pg_sys::Oid>`\nreturn value.\n\n## Why\n\nTo help users/customers/partners better deal with upgrading from really\nold pg_search versions.\n\n## How\n\n## Tests\n\nExisting tests pass, especially the ones added in #2730, and a new\nregress test has been added that explicitly removes the function from\nthe schema and ensures the query still works (tho with a different plan,\nof course).",
          "timestamp": "2025-08-21T15:17:35-04:00",
          "tree_id": "4c5e053bc28da403546f6c1b9ad61b9b62a75bdf",
          "url": "https://github.com/paradedb/paradedb/commit/2bb7c02ed7b398872104e7879aed251dd18a6414"
        },
        "date": 1755806194114,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.897638,
            "unit": "median cpu",
            "extra": "avg cpu: 21.277215141388183, max cpu: 106.87318, count: 56374"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 172.86328125,
            "unit": "median mem",
            "extra": "avg mem: 171.0025393327376, max mem: 176.53515625, count: 56374"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 17950,
            "unit": "median block_count",
            "extra": "avg block_count: 16300.251144144464, max block_count: 21247.0, count: 56374"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 39,
            "unit": "median segment_count",
            "extra": "avg segment_count: 40.73335225458545, max segment_count: 110.0, count: 56374"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 22.966507,
            "unit": "median cpu",
            "extra": "avg cpu: 21.332558583916704, max cpu: 184.61539, count: 56374"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 168.84765625,
            "unit": "median mem",
            "extra": "avg mem: 158.25303421402154, max mem: 176.80859375, count: 56374"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ori@eigenstate.org",
            "name": "Ori Bernstein",
            "username": "oridb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "97ad25718b14ab34440c0587cb8bb9968598bf7d",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:11:27-04:00",
          "tree_id": "74eee4eb0e1503ed631c849c97ccf32653c4e203",
          "url": "https://github.com/paradedb/paradedb/commit/97ad25718b14ab34440c0587cb8bb9968598bf7d"
        },
        "date": 1755812995011,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.713451,
            "unit": "median cpu",
            "extra": "avg cpu: 20.916341767860903, max cpu: 97.391304, count: 57893"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 176.16015625,
            "unit": "median mem",
            "extra": "avg mem: 174.6017860400869, max mem: 180.69140625, count: 57893"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18833,
            "unit": "median block_count",
            "extra": "avg block_count: 17060.453940890955, max block_count: 21347.0, count: 57893"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.087782633479, max segment_count: 115.0, count: 57893"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.622696,
            "unit": "median cpu",
            "extra": "avg cpu: 19.35328746684494, max cpu: 161.53847, count: 57893"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 165.09765625,
            "unit": "median mem",
            "extra": "avg mem: 155.77951707514293, max mem: 174.23046875, count: 57893"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f2428be0ee6a082b53176d781e62ee2519ccccc",
          "message": "fix: fsm: we have space if any slots are invalid, no need for all (#3015) (#3016)\n\n## What\n\nWhen walking the free space map looking for blocks with open slots, we\nwant to pick a block with any empty slots, not all open slots, so that\nwe don't end up with a long, low occupancy list.\n\n## Why\n\nPerformance.\n\n## How\n\nAdd a function to query whether any slots in the fsm block are empty,\nand then use it.\n\n## Tests\n\nRan unit tests.\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests\n\nCo-authored-by: Ori Bernstein <ori@eigenstate.org>\nCo-authored-by: Ori Bernstein <ori@paradedb.com>",
          "timestamp": "2025-08-21T17:33:35-04:00",
          "tree_id": "b3df08f37cb0652f7b23674356d6a786d632a136",
          "url": "https://github.com/paradedb/paradedb/commit/7f2428be0ee6a082b53176d781e62ee2519ccccc"
        },
        "date": 1755814319174,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.75,
            "unit": "median cpu",
            "extra": "avg cpu: 20.667697050803728, max cpu: 88.97562, count: 57684"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 172.53125,
            "unit": "median mem",
            "extra": "avg mem: 171.80926205977826, max mem: 178.55859375, count: 57684"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19085,
            "unit": "median block_count",
            "extra": "avg block_count: 17233.65760002774, max block_count: 21528.0, count: 57684"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 41,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.79708411344567, max segment_count: 121.0, count: 57684"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.695229,
            "unit": "median cpu",
            "extra": "avg cpu: 19.89305525329344, max cpu: 162.16216, count: 57684"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.2421875,
            "unit": "median mem",
            "extra": "avg mem: 156.3475453277772, max mem: 174.9453125, count: 57684"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f929495a112d17ce5992a41cbd1d3b05aa17cbb",
          "message": "chore: Upgrade to `0.17.6` (#3017)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-21T18:03:19-04:00",
          "tree_id": "f3d6f5fb6a9f1748954b75791999f0080ecf1fb5",
          "url": "https://github.com/paradedb/paradedb/commit/4f929495a112d17ce5992a41cbd1d3b05aa17cbb"
        },
        "date": 1755816099638,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.75,
            "unit": "median cpu",
            "extra": "avg cpu: 20.85337372878651, max cpu: 57.657658, count: 57464"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 175.4765625,
            "unit": "median mem",
            "extra": "avg mem: 174.02873925686083, max mem: 179.75390625, count: 57464"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18937,
            "unit": "median block_count",
            "extra": "avg block_count: 17087.595851315607, max block_count: 21224.0, count: 57464"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40.5,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.45518933593206, max segment_count: 122.0, count: 57464"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.640776,
            "unit": "median cpu",
            "extra": "avg cpu: 19.54253263874948, max cpu: 171.76016, count: 57464"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.474609375,
            "unit": "median mem",
            "extra": "avg mem: 156.56022778935508, max mem: 175.0625, count: 57464"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755835709046,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.879055,
            "unit": "median cpu",
            "extra": "avg cpu: 21.245632555659252, max cpu: 56.03113, count: 56401"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 173.25390625,
            "unit": "median mem",
            "extra": "avg mem: 171.56733292904823, max mem: 176.953125, count: 56401"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 17721,
            "unit": "median block_count",
            "extra": "avg block_count: 16154.310012233826, max block_count: 20948.0, count: 56401"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 39,
            "unit": "median segment_count",
            "extra": "avg segment_count: 40.722256697576285, max segment_count: 108.0, count: 56401"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 22.922636,
            "unit": "median cpu",
            "extra": "avg cpu: 21.315465469610682, max cpu: 166.79536, count: 56401"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 165.3984375,
            "unit": "median mem",
            "extra": "avg mem: 155.58824928026542, max mem: 174.921875, count: 56401"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755836017557,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.731707,
            "unit": "median cpu",
            "extra": "avg cpu: 20.87900809459248, max cpu: 74.05979, count: 57478"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 174.50390625,
            "unit": "median mem",
            "extra": "avg mem: 173.02437542679374, max mem: 178.484375, count: 57478"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18665,
            "unit": "median block_count",
            "extra": "avg block_count: 16902.924579839244, max block_count: 21168.0, count: 57478"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.413688715682525, max segment_count: 117.0, count: 57478"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.640776,
            "unit": "median cpu",
            "extra": "avg cpu: 19.582184132665056, max cpu: 172.25995, count: 57478"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.1171875,
            "unit": "median mem",
            "extra": "avg mem: 156.34653897469465, max mem: 174.8046875, count: 57478"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fbe8d2ee63335d61db9665e1eec916cc530f7a0",
          "message": "chore: Upgrade to `0.17.7` (#3024)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-22T10:27:16-04:00",
          "tree_id": "d8a53236b167b06e2b4e1beaeaf72fb424454256",
          "url": "https://github.com/paradedb/paradedb/commit/5fbe8d2ee63335d61db9665e1eec916cc530f7a0"
        },
        "date": 1755875148142,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.916256,
            "unit": "median cpu",
            "extra": "avg cpu: 21.26245671983156, max cpu: 102.52427, count: 56334"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 173.43359375,
            "unit": "median mem",
            "extra": "avg mem: 172.23893409452995, max mem: 178.421875, count: 56334"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 17648,
            "unit": "median block_count",
            "extra": "avg block_count: 16173.668601555011, max block_count: 21020.0, count: 56334"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 41.29935740405439, max segment_count: 110.0, count: 56334"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.934912,
            "unit": "median cpu",
            "extra": "avg cpu: 21.148021573147453, max cpu: 148.98157, count: 56334"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 169.51953125,
            "unit": "median mem",
            "extra": "avg mem: 158.25033560993361, max mem: 177.59765625, count: 56334"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755888743631,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.731707,
            "unit": "median cpu",
            "extra": "avg cpu: 20.578128790380923, max cpu: 107.91789, count: 57710"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 175.5703125,
            "unit": "median mem",
            "extra": "avg mem: 174.9033572360726, max mem: 182.8046875, count: 57710"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18792,
            "unit": "median block_count",
            "extra": "avg block_count: 17030.820516374977, max block_count: 21511.0, count: 57710"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 40,
            "unit": "median segment_count",
            "extra": "avg segment_count: 42.08840755501646, max segment_count: 113.0, count: 57710"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 18.695229,
            "unit": "median cpu",
            "extra": "avg cpu: 19.9401921439003, max cpu: 157.68115, count: 57710"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.6953125,
            "unit": "median mem",
            "extra": "avg mem: 157.3265480148588, max mem: 175.328125, count: 57710"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755892088890,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.695229,
            "unit": "median cpu",
            "extra": "avg cpu: 20.369457964669223, max cpu: 47.151276, count: 57911"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 172.05078125,
            "unit": "median mem",
            "extra": "avg mem: 170.45196238624786, max mem: 174.93359375, count: 57911"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19435,
            "unit": "median block_count",
            "extra": "avg block_count: 17908.333321821414, max block_count: 24595.0, count: 57911"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 38,
            "unit": "median segment_count",
            "extra": "avg segment_count: 37.660686225414864, max segment_count: 83.0, count: 57911"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.329447,
            "unit": "median cpu",
            "extra": "avg cpu: 10.777405502542925, max cpu: 33.005894, count: 57911"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 169.890625,
            "unit": "median mem",
            "extra": "avg mem: 159.34976515687865, max mem: 179.546875, count: 57911"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8386fa71d8c2979fb63993f4045d140aff8768fe",
          "message": "perf: optimize merging heuristics to prefer background merging (#3032)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-22T12:27:56-07:00",
          "tree_id": "fa86b284fe7c52c4cf1226cd910b7b9f1c0507d2",
          "url": "https://github.com/paradedb/paradedb/commit/8386fa71d8c2979fb63993f4045d140aff8768fe"
        },
        "date": 1755893197449,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.658894,
            "unit": "median cpu",
            "extra": "avg cpu: 20.24578380371751, max cpu: 46.60194, count: 57785"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 171.98046875,
            "unit": "median mem",
            "extra": "avg mem: 170.37683871246864, max mem: 176.0859375, count: 57785"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18831,
            "unit": "median block_count",
            "extra": "avg block_count: 17897.816388336072, max block_count: 24866.0, count: 57785"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 38,
            "unit": "median segment_count",
            "extra": "avg segment_count: 37.70466384009691, max segment_count: 78.0, count: 57785"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.329447,
            "unit": "median cpu",
            "extra": "avg cpu: 11.211352317045256, max cpu: 37.907207, count: 57785"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 167.8359375,
            "unit": "median mem",
            "extra": "avg mem: 158.7233802430345, max mem: 180.42578125, count: 57785"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ming.ying.nyc@gmail.com",
            "name": "Ming",
            "username": "rebasedming"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6832efa7662fee49675d88dd2ceecb31dfffdd45",
          "message": "chore: Upgrade to `0.17.9` (#3041)",
          "timestamp": "2025-08-24T13:40:28-04:00",
          "tree_id": "4b3ff40f76aaaa9a2242a4bee88214604e92587a",
          "url": "https://github.com/paradedb/paradedb/commit/6832efa7662fee49675d88dd2ceecb31dfffdd45"
        },
        "date": 1756059553069,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.695229,
            "unit": "median cpu",
            "extra": "avg cpu: 20.541934383510064, max cpu: 67.46988, count: 58006"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 170.453125,
            "unit": "median mem",
            "extra": "avg mem: 168.5941158026756, max mem: 172.73046875, count: 58006"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18896,
            "unit": "median block_count",
            "extra": "avg block_count: 17485.880874392304, max block_count: 23633.0, count: 58006"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 35,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.073009688652895, max segment_count: 110.0, count: 58006"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.329447,
            "unit": "median cpu",
            "extra": "avg cpu: 11.091927233411086, max cpu: 36.78161, count: 58006"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 165.875,
            "unit": "median mem",
            "extra": "avg mem: 156.13785319622107, max mem: 175.71875, count: 58006"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b08446356edfe8faed3798c0521304b8789d3e5",
          "message": "fix: make IndexLayerSizes calculations more accurate (#3040)\n\n## What\n\nThe `From<&PgSearchRelation> for IndexLayerSizes` `from()` ctor was\nimproperly calculating both the total `index_byte_size` and the\n`target_segment_byte_size`.\n\nFor the former, it needs to only consider SegmentMetaEntries that are\nactually visible. In almost every case, at least after a CREATE INDEX of\na large index, the index could actually have 2x+ total segments as there\nare actually visible segments.\n\nSecondly, we need to adjust the `target_segment_byte_size` down by 1/3\nto account for how `LayeredMergePolicy` does the same thing. Failure to\ndo this can cause the background worker to merge segments together that\ndon't actually need to be.\n\n## Why\n\nThese two miscalculations are what contributed to the recent query\nbenchmark regressions we saw after #3031 was merged.\n\n## How\n\n## Tests\n\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>",
          "timestamp": "2025-08-24T13:46:13-04:00",
          "tree_id": "1335b21c3132607da548eff65e5a684aa86ebecf",
          "url": "https://github.com/paradedb/paradedb/commit/4b08446356edfe8faed3798c0521304b8789d3e5"
        },
        "date": 1756059903773,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.695229,
            "unit": "median cpu",
            "extra": "avg cpu: 20.321867986001525, max cpu: 55.813957, count: 57815"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 169.33984375,
            "unit": "median mem",
            "extra": "avg mem: 167.7000993200294, max mem: 171.74609375, count: 57815"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19219,
            "unit": "median block_count",
            "extra": "avg block_count: 17716.72282279685, max block_count: 23783.0, count: 57815"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 36,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.29142955980282, max segment_count: 102.0, count: 57815"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.356726,
            "unit": "median cpu",
            "extra": "avg cpu: 11.308228710152761, max cpu: 41.901066, count: 57815"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 170.296875,
            "unit": "median mem",
            "extra": "avg mem: 158.8315215423117, max mem: 179.31640625, count: 57815"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756147147795,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.695229,
            "unit": "median cpu",
            "extra": "avg cpu: 20.13376903753636, max cpu: 42.857143, count: 57906"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 170.7890625,
            "unit": "median mem",
            "extra": "avg mem: 169.09677665904655, max mem: 172.75390625, count: 57906"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19157,
            "unit": "median block_count",
            "extra": "avg block_count: 17680.797844782923, max block_count: 23781.0, count: 57906"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 35,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.104427865851555, max segment_count: 100.0, count: 57906"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.365853,
            "unit": "median cpu",
            "extra": "avg cpu: 11.184871162448399, max cpu: 37.426903, count: 57906"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 165.57421875,
            "unit": "median mem",
            "extra": "avg mem: 154.93311803288952, max mem: 174.375, count: 57906"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756149456357,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.713451,
            "unit": "median cpu",
            "extra": "avg cpu: 20.636474656758732, max cpu: 47.33728, count: 57334"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 175.78125,
            "unit": "median mem",
            "extra": "avg mem: 174.32382024900147, max mem: 179.18359375, count: 57334"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18874,
            "unit": "median block_count",
            "extra": "avg block_count: 17433.21153242404, max block_count: 23485.0, count: 57334"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 35,
            "unit": "median segment_count",
            "extra": "avg segment_count: 37.92568109673143, max segment_count: 102.0, count: 57334"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.338522,
            "unit": "median cpu",
            "extra": "avg cpu: 11.163330677018171, max cpu: 37.137333, count: 57334"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 170.16796875,
            "unit": "median mem",
            "extra": "avg mem: 159.37830648862368, max mem: 179.2578125, count: 57334"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756164191426,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.731707,
            "unit": "median cpu",
            "extra": "avg cpu: 20.448017469973475, max cpu: 55.706, count: 57675"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 170.75390625,
            "unit": "median mem",
            "extra": "avg mem: 169.23809533485044, max mem: 176.84375, count: 57675"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18793,
            "unit": "median block_count",
            "extra": "avg block_count: 17400.09321196359, max block_count: 23373.0, count: 57675"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 36,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.134720416124836, max segment_count: 102.0, count: 57675"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.365853,
            "unit": "median cpu",
            "extra": "avg cpu: 10.986554042342583, max cpu: 37.137333, count: 57675"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.625,
            "unit": "median mem",
            "extra": "avg mem: 157.9121260701127, max mem: 176.59765625, count: 57675"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756167257984,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 20.218706385964754, max cpu: 46.11689, count: 57884"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 174.43359375,
            "unit": "median mem",
            "extra": "avg mem: 172.26896073936666, max mem: 178.43359375, count: 57884"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18883,
            "unit": "median block_count",
            "extra": "avg block_count: 17585.69651371709, max block_count: 24064.0, count: 57884"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 37,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.793656278073385, max segment_count: 107.0, count: 57884"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.347614,
            "unit": "median cpu",
            "extra": "avg cpu: 11.075626800270543, max cpu: 36.994217, count: 57884"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.99609375,
            "unit": "median mem",
            "extra": "avg mem: 155.28390624190192, max mem: 176.37109375, count: 57884"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756233311942,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 20.45555692455101, max cpu: 47.33728, count: 57321"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 175.640625,
            "unit": "median mem",
            "extra": "avg mem: 173.78551259028106, max mem: 181.0546875, count: 57321"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18884,
            "unit": "median block_count",
            "extra": "avg block_count: 17445.29055668952, max block_count: 23665.0, count: 57321"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 35,
            "unit": "median segment_count",
            "extra": "avg segment_count: 37.766228781772824, max segment_count: 103.0, count: 57321"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.329447,
            "unit": "median cpu",
            "extra": "avg cpu: 11.025844792126806, max cpu: 37.029896, count: 57321"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 167.71484375,
            "unit": "median mem",
            "extra": "avg mem: 155.08982637253362, max mem: 178.22265625, count: 57321"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756385369129,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 20.20509817840281, max cpu: 57.947685, count: 57883"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 172.48828125,
            "unit": "median mem",
            "extra": "avg mem: 170.8593289750445, max mem: 176.82421875, count: 57883"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19250,
            "unit": "median block_count",
            "extra": "avg block_count: 17757.61912824145, max block_count: 23753.0, count: 57883"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 36,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.52657947929444, max segment_count: 99.0, count: 57883"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.347614,
            "unit": "median cpu",
            "extra": "avg cpu: 10.983377099086974, max cpu: 38.63179, count: 57883"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.19921875,
            "unit": "median mem",
            "extra": "avg mem: 155.35678882940587, max mem: 175.578125, count: 57883"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756403042549,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.75,
            "unit": "median cpu",
            "extra": "avg cpu: 20.67323193070815, max cpu: 46.55674, count: 57086"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 180.45703125,
            "unit": "median mem",
            "extra": "avg mem: 179.02731104167395, max mem: 184.078125, count: 57086"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19098,
            "unit": "median block_count",
            "extra": "avg block_count: 17584.198700206707, max block_count: 23505.0, count: 57086"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 35,
            "unit": "median segment_count",
            "extra": "avg segment_count: 37.91356900115615, max segment_count: 102.0, count: 57086"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.384164,
            "unit": "median cpu",
            "extra": "avg cpu: 11.489041966239196, max cpu: 33.333336, count: 57086"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.06640625,
            "unit": "median mem",
            "extra": "avg mem: 154.15843345183146, max mem: 177.6953125, count: 57086"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756405211909,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.658894,
            "unit": "median cpu",
            "extra": "avg cpu: 20.24492742013469, max cpu: 46.421665, count: 57964"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 172.431640625,
            "unit": "median mem",
            "extra": "avg mem: 170.74912075005608, max mem: 177.21875, count: 57964"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 19181,
            "unit": "median block_count",
            "extra": "avg block_count: 17626.97300048306, max block_count: 23639.0, count: 57964"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 36,
            "unit": "median segment_count",
            "extra": "avg segment_count: 38.417379752950104, max segment_count: 102.0, count: 57964"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.329447,
            "unit": "median cpu",
            "extra": "avg cpu: 11.020973432529638, max cpu: 32.973503, count: 57964"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.921875,
            "unit": "median mem",
            "extra": "avg mem: 155.704036597608, max mem: 177.5703125, count: 57964"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756418483424,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.713451,
            "unit": "median cpu",
            "extra": "avg cpu: 20.51020031460877, max cpu: 47.713715, count: 57352"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 178.2578125,
            "unit": "median mem",
            "extra": "avg mem: 176.40147766206934, max mem: 181.75, count: 57352"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 18867,
            "unit": "median block_count",
            "extra": "avg block_count: 17352.682242990653, max block_count: 23389.0, count: 57352"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 35,
            "unit": "median segment_count",
            "extra": "avg segment_count: 37.83881991909611, max segment_count: 101.0, count: 57352"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 9.356726,
            "unit": "median cpu",
            "extra": "avg cpu: 11.20347800749867, max cpu: 33.23442, count: 57352"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 170.31640625,
            "unit": "median mem",
            "extra": "avg mem: 158.7013821989643, max mem: 179.09765625, count: 57352"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756837125273,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.640776,
            "unit": "median cpu",
            "extra": "avg cpu: 20.21813848593324, max cpu: 48.04805, count: 57802"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 167.578125,
            "unit": "median mem",
            "extra": "avg mem: 166.94082263048855, max mem: 172.7265625, count: 57802"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22806,
            "unit": "median block_count",
            "extra": "avg block_count: 20928.12655271444, max block_count: 28374.0, count: 57802"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 46,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.397045084945155, max segment_count: 158.0, count: 57802"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 4.660194,
            "unit": "median cpu",
            "extra": "avg cpu: 5.776633768631794, max cpu: 28.543112, count: 57802"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 165.16015625,
            "unit": "median mem",
            "extra": "avg mem: 156.95185172820578, max mem: 168.31640625, count: 57802"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756915739690,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.713451,
            "unit": "median cpu",
            "extra": "avg cpu: 20.502501748361507, max cpu: 52.380955, count: 57160"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 169.23046875,
            "unit": "median mem",
            "extra": "avg mem: 168.3583072051041, max mem: 172.6484375, count: 57160"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22117,
            "unit": "median block_count",
            "extra": "avg block_count: 20592.636494051785, max block_count: 28876.0, count: 57160"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 46,
            "unit": "median segment_count",
            "extra": "avg segment_count: 47.95981455563331, max segment_count: 150.0, count: 57160"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 4.669261,
            "unit": "median cpu",
            "extra": "avg cpu: 5.6720498817623834, max cpu: 28.458496, count: 57160"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 166.4375,
            "unit": "median mem",
            "extra": "avg mem: 158.39749879723584, max mem: 169.5859375, count: 57160"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7",
          "message": "fix: Fix handling of nulls in TopN (#3110)\n\n## What\n\nTopN was not handling nulls properly: instead, they were filled in with\na default, which would cause an error when the limit was high enough to\ninclude them.\n\n## How\n\nSee https://github.com/paradedb/tantivy/pull/61.\n\n## Tests\n\nAdded a regression test and property tests (which exposed a related\nissue in pushdown: https://github.com/paradedb/paradedb/pull/3110).",
          "timestamp": "2025-09-03T11:49:57-07:00",
          "tree_id": "406781ed0840de7d7c190e6d69ef8af7a0a8eb76",
          "url": "https://github.com/paradedb/paradedb/commit/daa1d5aaa2eb3be4e6da0c93e1d352b89a5bc4b7"
        },
        "date": 1756927789555,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Bulk Update - Primary - cpu",
            "value": 18.677044,
            "unit": "median cpu",
            "extra": "avg cpu: 20.22380276006543, max cpu: 48.3871, count: 57306"
          },
          {
            "name": "Bulk Update - Primary - mem",
            "value": 167.5234375,
            "unit": "median mem",
            "extra": "avg mem: 166.54976838976285, max mem: 171.5, count: 57306"
          },
          {
            "name": "Monitor Index Size - Primary - block_count",
            "value": 22513,
            "unit": "median block_count",
            "extra": "avg block_count: 20763.791575053223, max block_count: 28510.0, count: 57306"
          },
          {
            "name": "Monitor Index Size - Primary - segment_count",
            "value": 46,
            "unit": "median segment_count",
            "extra": "avg segment_count: 48.065316022755034, max segment_count: 144.0, count: 57306"
          },
          {
            "name": "Single Update - Primary - cpu",
            "value": 4.669261,
            "unit": "median cpu",
            "extra": "avg cpu: 5.711939085937698, max cpu: 27.988338, count: 57306"
          },
          {
            "name": "Single Update - Primary - mem",
            "value": 163.80859375,
            "unit": "median mem",
            "extra": "avg mem: 154.59763021105994, max mem: 167.19140625, count: 57306"
          }
        ]
      }
    ],
    "pg_search background-merge.toml Performance - TPS": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755717334889,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 36.28947427224411,
            "unit": "median tps",
            "extra": "avg tps: 36.608473136456524, max tps: 38.08890291277521, count: 55662"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 261.3398652030008,
            "unit": "median tps",
            "extra": "avg tps: 300.1069684460285, max tps: 2514.2766785707904, count: 55662"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 117.78034924175007,
            "unit": "median tps",
            "extra": "avg tps: 117.93236808364414, max tps: 136.4354036757948, count: 55662"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 66.3431770657506,
            "unit": "median tps",
            "extra": "avg tps: 61.842086830854726, max tps: 99.7781783858007, count: 111324"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 16.856713639862562,
            "unit": "median tps",
            "extra": "avg tps: 16.881873775753494, max tps: 18.520684752683295, count: 55662"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755717485697,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Delete value - Primary - tps",
            "value": 5.184261383528083,
            "unit": "median tps",
            "extra": "avg tps: 19.533561348710574, max tps: 605.0007913410351, count: 55419"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 157.3911713164023,
            "unit": "median tps",
            "extra": "avg tps: 154.19016396267634, max tps: 160.86508559138392, count: 55419"
          },
          {
            "name": "Monitor Segment Count - Primary - tps",
            "value": 1959.0284332389115,
            "unit": "median tps",
            "extra": "avg tps: 1948.3051795032209, max tps: 1987.2217585809615, count: 55419"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 3.315667044685341,
            "unit": "median tps",
            "extra": "avg tps: 8.74885366511506, max tps: 79.14797756190453, count: 166257"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 0.3148368099816434,
            "unit": "median tps",
            "extra": "avg tps: 0.6467406041314335, max tps: 4.553118345383784, count: 55419"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755726636139,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Delete value - Primary - tps",
            "value": 263.3277849804827,
            "unit": "median tps",
            "extra": "avg tps: 258.0076716738847, max tps: 604.4180742266462, count: 55421"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 157.5710673413365,
            "unit": "median tps",
            "extra": "avg tps: 152.8721966892048, max tps: 162.96444221942065, count: 55421"
          },
          {
            "name": "Monitor Segment Count - Primary - tps",
            "value": 1987.4201190509352,
            "unit": "median tps",
            "extra": "avg tps: 1949.1446103854707, max tps: 2076.284880568145, count: 55421"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 18.82033166444295,
            "unit": "median tps",
            "extra": "avg tps: 22.747706170916047, max tps: 71.5806309482768, count: 166263"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 0.2941229697597172,
            "unit": "median tps",
            "extra": "avg tps: 0.5695409641449162, max tps: 4.755439143914976, count: 55421"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755727027208,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 36.331521060022936,
            "unit": "median tps",
            "extra": "avg tps: 36.19278080826215, max tps: 37.93155594822544, count: 55589"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 257.75364673533227,
            "unit": "median tps",
            "extra": "avg tps: 295.9258763760244, max tps: 2507.0351698186573, count: 55589"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 117.78087504535272,
            "unit": "median tps",
            "extra": "avg tps: 117.92662377140532, max tps: 130.49698596514907, count: 55589"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 73.29904338082919,
            "unit": "median tps",
            "extra": "avg tps: 65.38934976816272, max tps: 104.14948548139961, count: 111178"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 15.649137119503973,
            "unit": "median tps",
            "extra": "avg tps: 15.828507014210839, max tps: 20.56346146391899, count: 55589"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755728162135,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Delete value - Primary - tps",
            "value": 4.931276016159726,
            "unit": "median tps",
            "extra": "avg tps: 18.924921871200674, max tps: 599.3305628052716, count: 55521"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 124.1012896544035,
            "unit": "median tps",
            "extra": "avg tps: 124.22389626298568, max tps: 133.79153802426728, count: 55521"
          },
          {
            "name": "Monitor Segment Count - Primary - tps",
            "value": 1742.8239330277252,
            "unit": "median tps",
            "extra": "avg tps: 1732.1405919793835, max tps: 1882.319251836727, count: 55521"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 3.2533857987154478,
            "unit": "median tps",
            "extra": "avg tps: 8.61114300970805, max tps: 74.20474521716052, count: 166563"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 0.3052511907782593,
            "unit": "median tps",
            "extra": "avg tps: 0.6349216648576634, max tps: 4.695055690242096, count: 55521"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755796888261,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 34.11576004581176,
            "unit": "median tps",
            "extra": "avg tps: 34.35852236039567, max tps: 36.13738812469355, count: 55616"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 252.27815268977758,
            "unit": "median tps",
            "extra": "avg tps: 283.4026083146275, max tps: 2442.9968306980495, count: 55616"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 129.00891024272158,
            "unit": "median tps",
            "extra": "avg tps: 127.95354528855977, max tps: 129.23869691217422, count: 55616"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 69.31321114505909,
            "unit": "median tps",
            "extra": "avg tps: 64.69598773951684, max tps: 106.83679980263165, count: 111232"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 15.994418576601404,
            "unit": "median tps",
            "extra": "avg tps: 16.32806258010327, max tps: 17.975016434782216, count: 55616"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755799100511,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 33.85994644854997,
            "unit": "median tps",
            "extra": "avg tps: 34.0635734489934, max tps: 36.90008351595902, count: 55609"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 261.0351727562691,
            "unit": "median tps",
            "extra": "avg tps: 300.54352735378876, max tps: 2544.273354984615, count: 55609"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 128.9352690013566,
            "unit": "median tps",
            "extra": "avg tps: 128.29975211978052, max tps: 129.27243912177678, count: 55609"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 69.99873505590342,
            "unit": "median tps",
            "extra": "avg tps: 65.10708107780643, max tps: 100.74379742400765, count: 111218"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 16.405288963627125,
            "unit": "median tps",
            "extra": "avg tps: 16.39208373813903, max tps: 20.02412145718976, count: 55609"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755836365616,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 34.21160935012933,
            "unit": "median tps",
            "extra": "avg tps: 34.74928934031507, max tps: 37.41445996525833, count: 55641"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 259.93713306770314,
            "unit": "median tps",
            "extra": "avg tps: 296.73814421569017, max tps: 2515.2013272823083, count: 55641"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 127.51077280261191,
            "unit": "median tps",
            "extra": "avg tps: 126.96677009119453, max tps: 127.95119230565243, count: 55641"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 70.43807006499993,
            "unit": "median tps",
            "extra": "avg tps: 65.79231432985486, max tps: 101.46283480800678, count: 111282"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 16.181602865774448,
            "unit": "median tps",
            "extra": "avg tps: 16.285367139693385, max tps: 18.183681182608435, count: 55641"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755836677066,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 37.117277068142286,
            "unit": "median tps",
            "extra": "avg tps: 37.406807120393374, max tps: 38.71385873556994, count: 55630"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 255.0932948959213,
            "unit": "median tps",
            "extra": "avg tps: 291.05789517377514, max tps: 2485.6743493178215, count: 55630"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 119.30494973895983,
            "unit": "median tps",
            "extra": "avg tps: 119.0115045911294, max tps: 124.2307430715724, count: 55630"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 65.93934770014886,
            "unit": "median tps",
            "extra": "avg tps: 62.0549995227974, max tps: 106.43794845090592, count: 111260"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 16.86339663695926,
            "unit": "median tps",
            "extra": "avg tps: 16.94173624106889, max tps: 20.412088218269236, count: 55630"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755889403882,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 36.59927110952076,
            "unit": "median tps",
            "extra": "avg tps: 36.534305708693076, max tps: 37.3244242964263, count: 55496"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 255.86980395612505,
            "unit": "median tps",
            "extra": "avg tps: 288.8880872047884, max tps: 2409.8606154040726, count: 55496"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 122.13961820263259,
            "unit": "median tps",
            "extra": "avg tps: 121.46552247506666, max tps: 125.61753882401037, count: 55496"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 67.43322041311897,
            "unit": "median tps",
            "extra": "avg tps: 63.255440752625816, max tps: 101.91021130581525, count: 110992"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 17.164112466054192,
            "unit": "median tps",
            "extra": "avg tps: 17.08633202100464, max tps: 19.468746009211266, count: 55496"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755892753849,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 36.20140430843666,
            "unit": "median tps",
            "extra": "avg tps: 36.48588432577562, max tps: 37.96322219005072, count: 55532"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 255.89317790380696,
            "unit": "median tps",
            "extra": "avg tps: 288.0784993260113, max tps: 2428.5374990698033, count: 55532"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 151.75246157904013,
            "unit": "median tps",
            "extra": "avg tps: 151.62958733783327, max tps: 154.0939488131042, count: 55532"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 68.56893719435283,
            "unit": "median tps",
            "extra": "avg tps: 71.9208443035584, max tps: 129.40768076621055, count: 111064"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 15.921470310186516,
            "unit": "median tps",
            "extra": "avg tps: 16.221796138576032, max tps: 35.00996707505151, count: 55532"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756147793670,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 34.96681945856172,
            "unit": "median tps",
            "extra": "avg tps: 35.04480833027163, max tps: 36.38672040779888, count: 55653"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 139.07810359364882,
            "unit": "median tps",
            "extra": "avg tps: 186.90527031603096, max tps: 2322.8510860057722, count: 55653"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 153.05345848052394,
            "unit": "median tps",
            "extra": "avg tps: 152.29827704329304, max tps: 154.6496498885689, count: 55653"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 69.40630523022324,
            "unit": "median tps",
            "extra": "avg tps: 62.803551531295035, max tps: 132.08446354007268, count: 111306"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.215518628003837,
            "unit": "median tps",
            "extra": "avg tps: 14.228865476879747, max tps: 21.63127033744998, count: 55653"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756150103009,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 34.07035820213021,
            "unit": "median tps",
            "extra": "avg tps: 34.415183985149085, max tps: 36.4379890003428, count: 55648"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 253.60419325493493,
            "unit": "median tps",
            "extra": "avg tps: 284.60061811920906, max tps: 2373.9036707811197, count: 55648"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 151.59241412349428,
            "unit": "median tps",
            "extra": "avg tps: 151.08749320931395, max tps: 152.23124478441326, count: 55648"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 69.70347381488166,
            "unit": "median tps",
            "extra": "avg tps: 70.39162336803349, max tps: 134.4359958745149, count: 111296"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.018232771001315,
            "unit": "median tps",
            "extra": "avg tps: 14.059003579871403, max tps: 20.695413278659363, count: 55648"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756164841387,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 35.271392402666876,
            "unit": "median tps",
            "extra": "avg tps: 35.4739489596003, max tps: 37.313509220011795, count: 55590"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 254.701771480846,
            "unit": "median tps",
            "extra": "avg tps: 285.55907024625947, max tps: 2374.7859674256397, count: 55590"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 143.05494764118595,
            "unit": "median tps",
            "extra": "avg tps: 143.92115986796307, max tps: 151.65313883051755, count: 55590"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 71.82227442750016,
            "unit": "median tps",
            "extra": "avg tps: 71.14355732771591, max tps: 134.14997218333252, count: 111180"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.20516211726283,
            "unit": "median tps",
            "extra": "avg tps: 14.159903794252097, max tps: 20.682347884950715, count: 55590"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756167906862,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 35.249480661415994,
            "unit": "median tps",
            "extra": "avg tps: 35.60087282423209, max tps: 37.2802486040005, count: 55674"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 248.9418166464826,
            "unit": "median tps",
            "extra": "avg tps: 280.0800926044848, max tps: 2297.835048555906, count: 55674"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 141.51474741122036,
            "unit": "median tps",
            "extra": "avg tps: 141.53530411605186, max tps: 144.7759606324335, count: 55674"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 69.01723925386557,
            "unit": "median tps",
            "extra": "avg tps: 69.62643682327277, max tps: 133.60567684158724, count: 111348"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.89323217855071,
            "unit": "median tps",
            "extra": "avg tps: 15.188944196124709, max tps: 21.368449844930762, count: 55674"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756233968112,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 35.060666431389286,
            "unit": "median tps",
            "extra": "avg tps: 35.147847640615836, max tps: 35.961792141560096, count: 55637"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 255.50945748471477,
            "unit": "median tps",
            "extra": "avg tps: 292.683804814437, max tps: 2571.021776389689, count: 55637"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 150.34553402195291,
            "unit": "median tps",
            "extra": "avg tps: 149.72803534176307, max tps: 151.87816905518696, count: 55637"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 68.07959777437662,
            "unit": "median tps",
            "extra": "avg tps: 69.72587941362767, max tps: 133.71294293277415, count: 111274"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.630593131951015,
            "unit": "median tps",
            "extra": "avg tps: 14.824865105052888, max tps: 19.11443108390312, count: 55637"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756386045568,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 34.20800068679367,
            "unit": "median tps",
            "extra": "avg tps: 34.678879457314835, max tps: 36.83269123652996, count: 55614"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 249.82176341372303,
            "unit": "median tps",
            "extra": "avg tps: 279.3001186595504, max tps: 2344.9083325714832, count: 55614"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 155.68379546392674,
            "unit": "median tps",
            "extra": "avg tps: 155.17104560062208, max tps: 156.70433202285716, count: 55614"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 70.52472820535874,
            "unit": "median tps",
            "extra": "avg tps: 71.5569163280203, max tps: 135.79263034718394, count: 111228"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.587917021950389,
            "unit": "median tps",
            "extra": "avg tps: 14.710676120362999, max tps: 19.216673800536537, count: 55614"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756403716593,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 35.0230814603088,
            "unit": "median tps",
            "extra": "avg tps: 35.15751049884705, max tps: 37.50051312086033, count: 55624"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 254.4760749449472,
            "unit": "median tps",
            "extra": "avg tps: 287.8871493326925, max tps: 2358.4492760603885, count: 55624"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 148.06584144503924,
            "unit": "median tps",
            "extra": "avg tps: 147.48812132220831, max tps: 149.2479569055466, count: 55624"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 70.58278663067522,
            "unit": "median tps",
            "extra": "avg tps: 70.54704816887603, max tps: 129.9381886993788, count: 111248"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.874888925203951,
            "unit": "median tps",
            "extra": "avg tps: 14.956421830622215, max tps: 20.770837057948295, count: 55624"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756405886930,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 34.1071598762716,
            "unit": "median tps",
            "extra": "avg tps: 34.5531562520023, max tps: 37.90703133503381, count: 55668"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 248.4581987924131,
            "unit": "median tps",
            "extra": "avg tps: 277.3028434705341, max tps: 2247.433795054771, count: 55668"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 138.59838076005107,
            "unit": "median tps",
            "extra": "avg tps: 138.54767109192696, max tps: 139.7264197537244, count: 55668"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 68.21836525228974,
            "unit": "median tps",
            "extra": "avg tps: 69.75494784105305, max tps: 131.18616363637688, count: 111336"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.822481282114127,
            "unit": "median tps",
            "extra": "avg tps: 14.854891783461971, max tps: 19.322100713474363, count: 55668"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756419162396,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 33.91082898621385,
            "unit": "median tps",
            "extra": "avg tps: 34.32114688816652, max tps: 36.37316366641826, count: 55676"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 249.56764586743384,
            "unit": "median tps",
            "extra": "avg tps: 279.11594592120116, max tps: 2384.150240502827, count: 55676"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 143.59840798353179,
            "unit": "median tps",
            "extra": "avg tps: 143.20369044604433, max tps: 143.95962833628116, count: 55676"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 69.03372697557677,
            "unit": "median tps",
            "extra": "avg tps: 74.0247139813092, max tps: 138.98262026545174, count: 111352"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 14.643420097985917,
            "unit": "median tps",
            "extra": "avg tps: 14.77658214096058, max tps: 20.258210749043087, count: 55676"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756837773744,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 38.61925964604013,
            "unit": "median tps",
            "extra": "avg tps: 38.68589315662706, max tps: 40.588119045792915, count: 55496"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 133.37631973901904,
            "unit": "median tps",
            "extra": "avg tps: 176.92786191014142, max tps: 2373.460688580038, count: 55496"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 516.7187773823798,
            "unit": "median tps",
            "extra": "avg tps: 508.6570407806788, max tps: 520.2030091904985, count: 55496"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 102.44187419296335,
            "unit": "median tps",
            "extra": "avg tps: 92.1579029958479, max tps: 256.8510504100759, count: 110992"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 16.334143563885178,
            "unit": "median tps",
            "extra": "avg tps: 16.412515594727775, max tps: 19.686048732183682, count: 55496"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756916389619,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - tps",
            "value": 37.365866570277134,
            "unit": "median tps",
            "extra": "avg tps: 37.52766420508728, max tps: 39.142583278977334, count: 55462"
          },
          {
            "name": "Delete value - Primary - tps",
            "value": 247.9233355049965,
            "unit": "median tps",
            "extra": "avg tps: 273.36230866589784, max tps: 2357.915944378945, count: 55462"
          },
          {
            "name": "Insert value - Primary - tps",
            "value": 488.62266856256707,
            "unit": "median tps",
            "extra": "avg tps: 481.38298814823656, max tps: 500.7117424092659, count: 55462"
          },
          {
            "name": "Update random values - Primary - tps",
            "value": 102.87150543143599,
            "unit": "median tps",
            "extra": "avg tps: 105.37125231970865, max tps: 244.86752518289913, count: 110924"
          },
          {
            "name": "Vacuum - Primary - tps",
            "value": 15.740712131602171,
            "unit": "median tps",
            "extra": "avg tps: 15.820036080343947, max tps: 19.189627223548882, count: 55462"
          }
        ]
      }
    ],
    "pg_search background-merge.toml Performance - Other Metrics": [
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba",
          "message": "chore: upgrade to `0.18.0` (#2980)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nNote: `cargo.toml` is already on `0.18.0` so this is docs-only\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T19:09:25Z",
          "url": "https://github.com/paradedb/paradedb/commit/60c4cf138fc2eeb08d4326b839ba91c1e8e0fbba"
        },
        "date": 1755717337746,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.550726,
            "unit": "median cpu",
            "extra": "avg cpu: 18.898860047168508, max cpu: 41.458733, count: 55662"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.9140625,
            "unit": "median mem",
            "extra": "avg mem: 154.215805890913, max mem: 155.9140625, count: 55662"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 7.549145027935271, max cpu: 28.152493, count: 55662"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 145.64453125,
            "unit": "median mem",
            "extra": "avg mem: 141.15512280033954, max mem: 146.0234375, count: 55662"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 18.550726,
            "unit": "median cpu",
            "extra": "avg cpu: 19.37756362778912, max cpu: 70.03892, count: 55662"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 156.125,
            "unit": "median mem",
            "extra": "avg mem: 130.07757712005048, max mem: 164.19921875, count: 55662"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20610,
            "unit": "median block_count",
            "extra": "avg block_count: 20801.353149365816, max block_count: 41505.0, count: 55662"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 4.393961969898859, max cpu: 4.678363, count: 55662"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 98.94140625,
            "unit": "median mem",
            "extra": "avg mem: 87.96878642240218, max mem: 128.63671875, count: 55662"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 30,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.249559843340162, max segment_count: 45.0, count: 55662"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 18.622696,
            "unit": "median cpu",
            "extra": "avg cpu: 20.949552997490088, max cpu: 75.22037, count: 111324"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 161.22265625,
            "unit": "median mem",
            "extra": "avg mem: 146.77198463915013, max mem: 170.0859375, count: 111324"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.93998,
            "unit": "median cpu",
            "extra": "avg cpu: 14.038776097183273, max cpu: 28.070175, count: 55662"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 161.00390625,
            "unit": "median mem",
            "extra": "avg mem: 157.9711239125211, max mem: 162.66796875, count: 55662"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "885295995a921682849cc27e412c5c2c7ddf78c4",
          "message": "chore: upgrade to `0.17.3` (#2940)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-05T20:49:37Z",
          "url": "https://github.com/paradedb/paradedb/commit/885295995a921682849cc27e412c5c2c7ddf78c4"
        },
        "date": 1755717488936,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Delete value - Primary - cpu",
            "value": 23.233301,
            "unit": "median cpu",
            "extra": "avg cpu: 23.360471602753343, max cpu: 32.74854, count: 55419"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 204.7265625,
            "unit": "median mem",
            "extra": "avg mem: 203.0932820450793, max mem: 204.7265625, count: 55419"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.29332,
            "unit": "median cpu",
            "extra": "avg cpu: 10.47693568186829, max cpu: 27.87996, count: 55419"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 165.12109375,
            "unit": "median mem",
            "extra": "avg mem: 160.77828586258775, max mem: 165.49609375, count: 55419"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 36176,
            "unit": "median block_count",
            "extra": "avg block_count: 37719.760948411196, max block_count: 51549.0, count: 55419"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 3.5986386535692145, max cpu: 4.655674, count: 55419"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 131.28125,
            "unit": "median mem",
            "extra": "avg mem: 116.0684077634701, max mem: 142.56640625, count: 55419"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 24,
            "unit": "median segment_count",
            "extra": "avg segment_count: 24.565943088110576, max segment_count: 63.0, count: 55419"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 23.188406,
            "unit": "median cpu",
            "extra": "avg cpu: 23.146062513084804, max cpu: 32.78049, count: 166257"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 220.53515625,
            "unit": "median mem",
            "extra": "avg mem: 223.8057640759111, max mem: 452.13671875, count: 166257"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 9.29332,
            "unit": "median cpu",
            "extra": "avg cpu: 13.154616711205062, max cpu: 32.589718, count: 55419"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 191.2265625,
            "unit": "median mem",
            "extra": "avg mem: 189.84395440868656, max mem: 250.1796875, count: 55419"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "707c55b0a36223c016d33a5e6db16abdbc9a93c6",
          "message": "chore: Upgrade to `0.17.4` (#2976)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-18T14:06:23Z",
          "url": "https://github.com/paradedb/paradedb/commit/707c55b0a36223c016d33a5e6db16abdbc9a93c6"
        },
        "date": 1755726638766,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.495837918303824, max cpu: 32.589718, count: 55421"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 205.109375,
            "unit": "median mem",
            "extra": "avg mem: 203.09900706072608, max mem: 205.109375, count: 55421"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.284333,
            "unit": "median cpu",
            "extra": "avg cpu: 10.151527720396277, max cpu: 27.961164, count: 55421"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 167.11328125,
            "unit": "median mem",
            "extra": "avg mem: 160.2108393873712, max mem: 167.11328125, count: 55421"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 41137,
            "unit": "median block_count",
            "extra": "avg block_count: 42227.42211436098, max block_count: 59119.0, count: 55421"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.150864595091473, max cpu: 4.655674, count: 55421"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 117.8046875,
            "unit": "median mem",
            "extra": "avg mem: 105.85507855494758, max mem: 138.05859375, count: 55421"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 26,
            "unit": "median segment_count",
            "extra": "avg segment_count: 26.03054798722506, max segment_count: 50.0, count: 55421"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 23.076923,
            "unit": "median cpu",
            "extra": "avg cpu: 20.468771338290313, max cpu: 32.78049, count: 166263"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 219.5703125,
            "unit": "median mem",
            "extra": "avg mem: 236.67707041141145, max mem: 458.25, count: 166263"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 18.408438,
            "unit": "median cpu",
            "extra": "avg cpu: 15.409615347658875, max cpu: 32.65306, count: 55421"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 193.15625,
            "unit": "median mem",
            "extra": "avg mem: 191.8934858430243, max mem: 223.53125, count: 55421"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Stu Hood",
            "username": "stuhood",
            "email": "stuhood@paradedb.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "f816692c9dd7d6faf21fccfd39aa05c498fa324a",
          "message": "chore: Fix triggers of cherry-pick workflow (#3002)\n\n## What\n\nAttempt to fix the triggers of [the cherry-pick\nworkflow](https://github.com/paradedb/paradedb/actions/workflows/cherry-pick.yml)\nso that it will actually run for a labeled PR.\n\n## Tests\n\nNone! Don't think that there is a way to test this.",
          "timestamp": "2025-08-20T18:13:09Z",
          "url": "https://github.com/paradedb/paradedb/commit/f816692c9dd7d6faf21fccfd39aa05c498fa324a"
        },
        "date": 1755727030419,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.550726,
            "unit": "median cpu",
            "extra": "avg cpu: 19.032154681926293, max cpu: 41.458733, count: 55589"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 157.47265625,
            "unit": "median mem",
            "extra": "avg mem: 144.08315536234687, max mem: 158.9609375, count: 55589"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 7.595660437611333, max cpu: 28.042841, count: 55589"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 147.76953125,
            "unit": "median mem",
            "extra": "avg mem: 142.67729669707586, max mem: 147.76953125, count: 55589"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 18.550726,
            "unit": "median cpu",
            "extra": "avg cpu: 19.28131568777339, max cpu: 78.68852, count: 55589"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 158.46484375,
            "unit": "median mem",
            "extra": "avg mem: 132.27768350640414, max mem: 167.93359375, count: 55589"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20821,
            "unit": "median block_count",
            "extra": "avg block_count: 21064.21471873932, max block_count: 41735.0, count: 55589"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.522273636342635, max cpu: 4.6829267, count: 55589"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 99.51953125,
            "unit": "median mem",
            "extra": "avg mem: 88.52805165196801, max mem: 128.859375, count: 55589"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.727787871701235, max segment_count: 49.0, count: 55589"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 18.568666,
            "unit": "median cpu",
            "extra": "avg cpu: 20.45267066724675, max cpu: 73.84615, count: 111178"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 165.86328125,
            "unit": "median mem",
            "extra": "avg mem: 151.9808231928754, max mem: 175.4140625, count: 111178"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.994169,
            "unit": "median cpu",
            "extra": "avg cpu: 15.101645594171952, max cpu: 32.24568, count: 55589"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 154.421875,
            "unit": "median mem",
            "extra": "avg mem: 152.2003761001502, max mem: 155.796875, count: 55589"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Ming",
            "username": "rebasedming",
            "email": "ming.ying.nyc@gmail.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a",
          "message": "chore: Upgrade to `0.17.5` (#3005)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-20T17:19:49Z",
          "url": "https://github.com/paradedb/paradedb/commit/8cd6a2c7cdf969cf43bd66f12beca6ddedd6889a"
        },
        "date": 1755728165201,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Delete value - Primary - cpu",
            "value": 23.27837,
            "unit": "median cpu",
            "extra": "avg cpu: 24.288847324592247, max cpu: 32.78049, count: 55521"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 205.03515625,
            "unit": "median mem",
            "extra": "avg mem: 203.48465459578358, max mem: 205.03515625, count: 55521"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 13.872832,
            "unit": "median cpu",
            "extra": "avg cpu: 12.179518016475585, max cpu: 18.768328, count: 55521"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 156.875,
            "unit": "median mem",
            "extra": "avg mem: 153.74706874707317, max mem: 163.0625, count: 55521"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 38986,
            "unit": "median block_count",
            "extra": "avg block_count: 39519.44705606887, max block_count: 48721.0, count: 55521"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.316087601594983, max cpu: 4.6829267, count: 55521"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 121.75,
            "unit": "median mem",
            "extra": "avg mem: 110.53004690792673, max mem: 138.73828125, count: 55521"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 24,
            "unit": "median segment_count",
            "extra": "avg segment_count: 24.444552511662256, max segment_count: 56.0, count: 55521"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 23.210833,
            "unit": "median cpu",
            "extra": "avg cpu: 23.19497199208204, max cpu: 32.876713, count: 166563"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 210.6328125,
            "unit": "median mem",
            "extra": "avg mem: 221.93051667199498, max mem: 400.65234375, count: 166563"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.9265,
            "unit": "median cpu",
            "extra": "avg cpu: 14.748091795174721, max cpu: 32.621357, count: 55521"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 193.1953125,
            "unit": "median mem",
            "extra": "avg mem: 191.63622224586192, max mem: 223.66796875, count: 55521"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7008e501092f0d14807ba6c7a99a221724fc6c4c",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3008)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables",
          "timestamp": "2025-08-21T09:32:07-07:00",
          "tree_id": "cc49836a78f32b14f927d373fd12024625747a67",
          "url": "https://github.com/paradedb/paradedb/commit/7008e501092f0d14807ba6c7a99a221724fc6c4c"
        },
        "date": 1755796890706,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.568666,
            "unit": "median cpu",
            "extra": "avg cpu: 19.202061226369096, max cpu: 41.69884, count: 55616"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.65625,
            "unit": "median mem",
            "extra": "avg mem: 141.67252011842365, max mem: 155.65625, count: 55616"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 7.617424348241332, max cpu: 28.09756, count: 55616"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.3671875,
            "unit": "median mem",
            "extra": "avg mem: 141.77816284320159, max mem: 146.3671875, count: 55616"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 18.568666,
            "unit": "median cpu",
            "extra": "avg cpu: 19.24821219791151, max cpu: 64.990326, count: 55616"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 154.2734375,
            "unit": "median mem",
            "extra": "avg mem: 129.7324947800543, max mem: 163.4921875, count: 55616"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 21397,
            "unit": "median block_count",
            "extra": "avg block_count: 21658.449852560414, max block_count: 43135.0, count: 55616"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6647234,
            "unit": "median cpu",
            "extra": "avg cpu: 4.547461626984374, max cpu: 4.6875, count: 55616"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 100,
            "unit": "median mem",
            "extra": "avg mem: 89.17004211917434, max mem: 128.140625, count: 55616"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.59383990218642, max segment_count: 49.0, count: 55616"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 18.622696,
            "unit": "median cpu",
            "extra": "avg cpu: 20.66621699718695, max cpu: 74.635574, count: 111232"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 165.1484375,
            "unit": "median mem",
            "extra": "avg mem: 150.69878033636903, max mem: 174.53515625, count: 111232"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.953489,
            "unit": "median cpu",
            "extra": "avg cpu: 14.493547409079737, max cpu: 32.40116, count: 55616"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 155.84765625,
            "unit": "median mem",
            "extra": "avg mem: 153.57560338414305, max mem: 157.1875, count: 55616"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "218ef2ba755f2e58e10e888347f8778b3cd4cd9f",
          "message": "fix: fixed empty table aggregate errors in aggregate custom scan (#3012)\n\n# Ticket(s) Closed\n\n- Closes #2996\n\n## What\n\nFix aggregate pushdown queries over empty tables that were throwing\nerrors instead of returning proper empty results.\n\n## Why\n\nWhen `paradedb.enable_aggregate_custom_scan` is enabled and aggregate\nqueries are executed on empty tables, two critical errors were\noccurring:\n\n1. **Simple aggregates** (COUNT, SUM, AVG, MIN, MAX): `ERROR: unexpected\naggregate result collection type`\n2. **GROUP BY aggregates**: `ERROR: missing bucket results`\n\nThis happened because the aggregate execution pipeline was returning\n`null` for empty tables, but the aggregate scan state expected proper\nJSON object structures.\n\n## How\n\nFixed `execute_aggregate` function**:\n- Changed return value from `serde_json::Value::Null` to\n`serde_json::json!({})` when no segments exist\n- This ensures a valid JSON object is always returned\n\nImproved `json_to_aggregate_results` function:\n- Added null-safety checks before calling `.as_object()`\n- Implemented proper empty result handling using\n`result_from_aggregate_with_doc_count` with `doc_count = 0`\n- This leverages existing logic that correctly handles COUNT (returns 0)\nvs other aggregates (returns NULL) for empty result sets\n\nUpdated `extract_bucket_results` function:\n- Added graceful handling for missing bucket structures in GROUP BY\nqueries\n- Returns empty result set instead of panicking when buckets are missing\n\n## Tests\n\nAdded regression test `empty_aggregate.sql` covering:\n- Simple SQL aggregates (COUNT, SUM, AVG, MIN, MAX) on empty tables\n- GROUP BY aggregates with single and multiple grouping columns  \n- JSON aggregates using `paradedb.aggregate()` function\n- JSON bucket aggregations (terms, histogram, range) with nested\nsub-aggregations\n- Edge cases with HAVING, FILTER clauses, and complex expressions\n\n**Expected behavior after fix:**\n- COUNT returns 0 for empty tables\n- SUM/AVG/MIN/MAX return NULL for empty tables  \n- GROUP BY queries return empty result sets (0 rows)\n- JSON aggregates return empty objects `{}` instead of `null`\n- No errors or panics when querying empty tables\n\nCo-authored-by: Moe <mdashti@gmail.com>",
          "timestamp": "2025-08-21T10:08:57-07:00",
          "tree_id": "99b6bb355bb88f5cdd62370c6319ed49287e5163",
          "url": "https://github.com/paradedb/paradedb/commit/218ef2ba755f2e58e10e888347f8778b3cd4cd9f"
        },
        "date": 1755799102571,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.568666,
            "unit": "median cpu",
            "extra": "avg cpu: 19.255462834001683, max cpu: 41.860466, count: 55609"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 156.44921875,
            "unit": "median mem",
            "extra": "avg mem: 143.16774586285493, max mem: 157.19921875, count: 55609"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.553359266377503, max cpu: 27.988338, count: 55609"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 147.2578125,
            "unit": "median mem",
            "extra": "avg mem: 142.19979103539896, max mem: 147.65234375, count: 55609"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 18.885819676562466, max cpu: 70.03892, count: 55609"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 158.9453125,
            "unit": "median mem",
            "extra": "avg mem: 133.83780320519162, max mem: 167.71484375, count: 55609"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 21323,
            "unit": "median block_count",
            "extra": "avg block_count: 21632.556762394575, max block_count: 43063.0, count: 55609"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 3.7657580446151333, max cpu: 4.655674, count: 55609"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 103.015625,
            "unit": "median mem",
            "extra": "avg mem: 91.35004169738711, max mem: 130.46875, count: 55609"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 30,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.55642072326422, max segment_count: 52.0, count: 55609"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 18.622696,
            "unit": "median cpu",
            "extra": "avg cpu: 20.670683150867546, max cpu: 82.20742, count: 111218"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 166.28125,
            "unit": "median mem",
            "extra": "avg mem: 151.128251813162, max mem: 174.79296875, count: 111218"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.953489,
            "unit": "median cpu",
            "extra": "avg cpu: 14.291703316282831, max cpu: 28.235296, count: 55609"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 154.16015625,
            "unit": "median mem",
            "extra": "avg mem: 152.1437523040335, max mem: 155.4921875, count: 55609"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a010144b9900b25aad51e82ec239c3eeaa3a3fac",
          "message": "fix: restore the garbage list (#3020)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\n---------\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:30:11-04:00",
          "tree_id": "7aaa1f192dbf4add4a2c522a9f32de6bbaa0ff9b",
          "url": "https://github.com/paradedb/paradedb/commit/a010144b9900b25aad51e82ec239c3eeaa3a3fac"
        },
        "date": 1755836367808,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.58664,
            "unit": "median cpu",
            "extra": "avg cpu: 19.343028639581956, max cpu: 46.421665, count: 55641"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.96875,
            "unit": "median mem",
            "extra": "avg mem: 142.45047449834655, max mem: 156.34375, count: 55641"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 7.587151055425364, max cpu: 28.042841, count: 55641"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.125,
            "unit": "median mem",
            "extra": "avg mem: 141.53839155535036, max mem: 146.125, count: 55641"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 18.449426521908766, max cpu: 70.5191, count: 55641"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 158.0078125,
            "unit": "median mem",
            "extra": "avg mem: 133.26407649878237, max mem: 166.76171875, count: 55641"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 21427,
            "unit": "median block_count",
            "extra": "avg block_count: 21632.365288186767, max block_count: 43044.0, count: 55641"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.587890788426305, max cpu: 4.701273, count: 55641"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 100.76171875,
            "unit": "median mem",
            "extra": "avg mem: 89.92844537133139, max mem: 128.59375, count: 55641"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 30,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.530112686687875, max segment_count: 47.0, count: 55641"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 18.622696,
            "unit": "median cpu",
            "extra": "avg cpu: 20.917598386484965, max cpu: 75.59055, count: 111282"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 162.236328125,
            "unit": "median mem",
            "extra": "avg mem: 149.3211890035001, max mem: 172.9296875, count: 111282"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.9265,
            "unit": "median cpu",
            "extra": "avg cpu: 13.977682712442611, max cpu: 27.988338, count: 55641"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 154.671875,
            "unit": "median mem",
            "extra": "avg mem: 152.6935585101364, max mem: 156.453125, count: 55641"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41898282+github-actions[bot]@users.noreply.github.com",
            "name": "github-actions[bot]",
            "username": "github-actions[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1edf576f60871a1e6ef4ef8eaa7749994ac4a64",
          "message": "fix: restore the garbage list (#3022)\n\n## What\n\nThis brings back our segment meta entry garbage list. It's necessary to\nhelp avoid potential query cancel situations in parallel workers.\n\n## Why\n\n## How\n\n## Tests\n\nSigned-off-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Eric Ridge <eebbrr@gmail.com>\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-21T23:35:10-04:00",
          "tree_id": "561a6e7f3af192d0668156c2bc359a32eabf7664",
          "url": "https://github.com/paradedb/paradedb/commit/a1edf576f60871a1e6ef4ef8eaa7749994ac4a64"
        },
        "date": 1755836679230,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.514948,
            "unit": "median cpu",
            "extra": "avg cpu: 18.533597381646537, max cpu: 41.65863, count: 55630"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 154.12890625,
            "unit": "median mem",
            "extra": "avg mem: 140.8750469058961, max mem: 156.4609375, count: 55630"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.6452245265492245, max cpu: 28.180038, count: 55630"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.74609375,
            "unit": "median mem",
            "extra": "avg mem: 142.18671636257415, max mem: 146.74609375, count: 55630"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 18.58664,
            "unit": "median cpu",
            "extra": "avg cpu: 19.663957379223145, max cpu: 74.05979, count: 55630"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 157.01171875,
            "unit": "median mem",
            "extra": "avg mem: 130.98335219867877, max mem: 165.88671875, count: 55630"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 21023,
            "unit": "median block_count",
            "extra": "avg block_count: 21168.882293726405, max block_count: 42068.0, count: 55630"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 4.476909589553717, max cpu: 4.660194, count: 55630"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 102.171875,
            "unit": "median mem",
            "extra": "avg mem: 90.50752446409311, max mem: 130.703125, count: 55630"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 30,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.234855293906165, max segment_count: 47.0, count: 55630"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 18.622696,
            "unit": "median cpu",
            "extra": "avg cpu: 21.12499968440357, max cpu: 70.17544, count: 111260"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 162.8359375,
            "unit": "median mem",
            "extra": "avg mem: 148.56282760397943, max mem: 173.66015625, count: 111260"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.9265,
            "unit": "median cpu",
            "extra": "avg cpu: 14.245812813270494, max cpu: 28.042841, count: 55630"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 153.99609375,
            "unit": "median mem",
            "extra": "avg mem: 151.98377730091678, max mem: 155.72265625, count: 55630"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc4fe5965d5f99254c795da6f95353b72f8876b7",
          "message": "feat: improved join performance when score and snippets are not used and `@@@` cannot be pushed down to custom scan (#2871)\n\n# Ticket(s) Closed\n\n- Closes #2807\n\n## What\n\nImproved join performance when score and snippets are not used and `@@@`\ncannot be pushed down to custom scan\n\n## Why\n\nA source of our JOIN performance degradation is that we’re pushing\n`joininfo` (i.e., JOIN-level predicates in\n[here](https://github.com/paradedb/paradedb/blob/801e88e9a966b465dee73a381b3902c1a173c5bb/pg_search/src/postgres/customscan/builders/custom_path.rs#L274-L275)\nand\n[here](https://github.com/paradedb/paradedb/blob/6464dc167c77f043bc01a684f8282467ee464cbf/pg_search/src/postgres/customscan/pdbscan/mod.rs#L264))\ndown to tantivy, to be able to produce scores and snippets. However,\nthis almost always leads to a full index scan, which is expected to\nproduce poor performance. As a quick follow-up, we should either:\n1) at least limit this down to the cases that the query is using\nsnippets or scores, instead of always pushing down the JOIN quals that\nalmost certainly lead to a full index scan\n2) or we can even get stricter and give up on scores and snippets in\nthis case, too. Then, this will be fixed as soon as CustomScan Join API\nis implemented.\n\nIn this PR, we go for (1), as it won't have any impact on query results,\nand will only improve the performance.\n\n## How\n\nWe fallback to index scan (as opposed to custom scan) if the join quals\ncannot be pushed down to custom scan, and `score` and `snippet` are not\nused in the query.\n\n## Tests\n\nAll current tests pass.",
          "timestamp": "2025-08-22T11:13:50-07:00",
          "tree_id": "a374e10b164d326326720111fc92435c5b04ce37",
          "url": "https://github.com/paradedb/paradedb/commit/cc4fe5965d5f99254c795da6f95353b72f8876b7"
        },
        "date": 1755889406219,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.550726,
            "unit": "median cpu",
            "extra": "avg cpu: 18.545834035308037, max cpu: 37.982197, count: 55496"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 154.80859375,
            "unit": "median mem",
            "extra": "avg mem: 142.14907908621794, max mem: 156.30859375, count: 55496"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6511626,
            "unit": "median cpu",
            "extra": "avg cpu: 7.636139401951247, max cpu: 41.941746, count: 55496"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.95703125,
            "unit": "median mem",
            "extra": "avg mem: 141.86950467150785, max mem: 146.95703125, count: 55496"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 18.568666,
            "unit": "median cpu",
            "extra": "avg cpu: 19.29707098463604, max cpu: 74.2029, count: 55496"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 154.66796875,
            "unit": "median mem",
            "extra": "avg mem: 129.63405336927437, max mem: 163.37890625, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20706,
            "unit": "median block_count",
            "extra": "avg block_count: 20917.054706645526, max block_count: 41278.0, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 2.9723179983266417, max cpu: 4.6647234, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 101.1953125,
            "unit": "median mem",
            "extra": "avg mem: 90.21058534905669, max mem: 130.0859375, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 30,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.238251405506702, max segment_count: 47.0, count: 55496"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 18.658894,
            "unit": "median cpu",
            "extra": "avg cpu: 21.21069940690526, max cpu: 78.537056, count: 110992"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 163.140625,
            "unit": "median mem",
            "extra": "avg mem: 149.02772148696528, max mem: 172.83984375, count: 110992"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.899614,
            "unit": "median cpu",
            "extra": "avg cpu: 13.116521282211561, max cpu: 28.042841, count: 55496"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 154.71875,
            "unit": "median mem",
            "extra": "avg mem: 152.58480882912733, max mem: 156.26953125, count: 55496"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f29250c078214cab1c7785740c86fd032bce69d0",
          "message": "perf: optimize merging heuristics to prefer background merging (#3031)\n\nWe change the decisions around when/how/what to merge such that we\nprefer to merge in the background if we can. That is defined as all of\nthese being true:\n\n- the user has either a default or non-zero configuration for\n`background_layer_sizes`\n- no other merge (foreground or background) is currently happening\n- the layer policy simulation indicates there is merging work to do \n \n or\n\n- the request to merge came from a VACUUM\n\nOtherwise we'll merge in the foreground if:\n\n- the request to merge came from `aminsert`\n- the user has either a default or non-zero configuration for\n`layer_sizes`\n\nAdditionally, when merging in the background we now consider the\ncombined/unique set of layer sizes from both `layer_sizes` and\n`background_layer_sizes`, and ensure the maximum layer size is clamped\nto our estimate of what an ideal segment size would be based on the\ncurrent index size and the `target_segment_count`.\n\nThis still allows concurrent backends to merge into layers defined in\n`layer_sizes` in the foreground, but they'll prefer to launch that work\nin the background if it looks possible.\n\nIt does not necessarily ensure there'll only ever be one background\nmerger per index at any given time, but in practice it's pretty close.",
          "timestamp": "2025-08-22T15:09:29-04:00",
          "tree_id": "16d37ec0ce591b380c00e4a5aa6b8ed53ac0fa8b",
          "url": "https://github.com/paradedb/paradedb/commit/f29250c078214cab1c7785740c86fd032bce69d0"
        },
        "date": 1755892755980,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.514948,
            "unit": "median cpu",
            "extra": "avg cpu: 18.90785374158384, max cpu: 42.72997, count: 55532"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.96484375,
            "unit": "median mem",
            "extra": "avg mem: 143.91612950922442, max mem: 155.96484375, count: 55532"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 7.615780556880089, max cpu: 28.070175, count: 55532"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.94921875,
            "unit": "median mem",
            "extra": "avg mem: 143.96496494982622, max mem: 146.94921875, count: 55532"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.338522,
            "unit": "median cpu",
            "extra": "avg cpu: 12.181161524834081, max cpu: 37.17328, count: 55532"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 159.421875,
            "unit": "median mem",
            "extra": "avg mem: 136.2603723978967, max mem: 168.9375, count: 55532"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20569,
            "unit": "median block_count",
            "extra": "avg block_count: 21004.67143268746, max block_count: 41233.0, count: 55532"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 3.9297667067372357, max cpu: 4.6421666, count: 55532"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 119.26953125,
            "unit": "median mem",
            "extra": "avg mem: 101.42682625558237, max mem: 136.1640625, count: 55532"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 23,
            "unit": "median segment_count",
            "extra": "avg segment_count: 23.230533746308435, max segment_count: 99.0, count: 55532"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.913043,
            "unit": "median cpu",
            "extra": "avg cpu: 14.863894689450504, max cpu: 37.137333, count: 111064"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 167.109375,
            "unit": "median mem",
            "extra": "avg mem: 154.3566241578617, max mem: 176.28515625, count: 111064"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.88621,
            "unit": "median cpu",
            "extra": "avg cpu: 13.781712685696064, max cpu: 28.125, count: 55532"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 155.3671875,
            "unit": "median mem",
            "extra": "avg mem: 153.58827363896043, max mem: 157.79296875, count: 55532"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63f8cdc8a048cd896087e9de9ae429c1934fbb5d",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3019)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.",
          "timestamp": "2025-08-25T10:59:27-07:00",
          "tree_id": "b67ebb1850debf3ad52031247220f30f60dfd572",
          "url": "https://github.com/paradedb/paradedb/commit/63f8cdc8a048cd896087e9de9ae429c1934fbb5d"
        },
        "date": 1756147796381,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.550726,
            "unit": "median cpu",
            "extra": "avg cpu: 19.249031340646585, max cpu: 37.944664, count: 55653"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.72265625,
            "unit": "median mem",
            "extra": "avg mem: 139.0299327557589, max mem: 155.72265625, count: 55653"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6421666,
            "unit": "median cpu",
            "extra": "avg cpu: 9.250861133984928, max cpu: 37.17328, count: 55653"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.265625,
            "unit": "median mem",
            "extra": "avg mem: 141.48179834757335, max mem: 146.265625, count: 55653"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.329447,
            "unit": "median cpu",
            "extra": "avg cpu: 12.012524389274075, max cpu: 37.426903, count: 55653"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 148.0078125,
            "unit": "median mem",
            "extra": "avg mem: 119.90760430423786, max mem: 159.9765625, count: 55653"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 18887,
            "unit": "median block_count",
            "extra": "avg block_count: 19465.452715936248, max block_count: 39228.0, count: 55653"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 3.9473912948412875, max cpu: 4.673807, count: 55653"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 98.19921875,
            "unit": "median mem",
            "extra": "avg mem: 84.51053788373942, max mem: 125.98046875, count: 55653"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.97033403410418, max segment_count: 51.0, count: 55653"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.953489,
            "unit": "median cpu",
            "extra": "avg cpu: 15.52211366517531, max cpu: 41.819942, count: 111306"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 165.1875,
            "unit": "median mem",
            "extra": "avg mem: 148.01808250594084, max mem: 173.578125, count: 111306"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.806328,
            "unit": "median cpu",
            "extra": "avg cpu: 12.745528578759455, max cpu: 27.988338, count: 55653"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 163.98828125,
            "unit": "median mem",
            "extra": "avg mem: 160.8415480887149, max mem: 165.80859375, count: 55653"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "21990816+philippemnoel@users.noreply.github.com",
            "name": "Philippe Noël",
            "username": "philippemnoel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d05f85a38d70d440f3f070d38cbcd0ba42c3132",
          "message": "fix: Remove the string/numeric classification from fast fields explain (#3044)\n\n## What\n\nRemove the string/numeric classification from MixedFastFields explain.\n\n## Why\n\nThe distinction is no longer actually used in the scan implementation,\nand it can be confusing when the field being projected from is actually\ne.g. a JSON field with nested/dynamic columns for the subtypes.\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T11:37:54-07:00",
          "tree_id": "0446523b383d001cc4ea4496af1b532654eaa621",
          "url": "https://github.com/paradedb/paradedb/commit/4d05f85a38d70d440f3f070d38cbcd0ba42c3132"
        },
        "date": 1756150105194,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 19.357512809256942, max cpu: 41.498558, count: 55648"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.59375,
            "unit": "median mem",
            "extra": "avg mem: 141.26376551605628, max mem: 155.59375, count: 55648"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 7.617967753676909, max cpu: 27.988338, count: 55648"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.56640625,
            "unit": "median mem",
            "extra": "avg mem: 141.81435583376762, max mem: 146.56640625, count: 55648"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.329447,
            "unit": "median cpu",
            "extra": "avg cpu: 12.081791618386228, max cpu: 37.137333, count: 55648"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 153.64453125,
            "unit": "median mem",
            "extra": "avg mem: 128.8328620160428, max mem: 163.92578125, count: 55648"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20092,
            "unit": "median block_count",
            "extra": "avg block_count: 20348.796686313974, max block_count: 40133.0, count: 55648"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.624277,
            "unit": "median cpu",
            "extra": "avg cpu: 3.8719760871674263, max cpu: 4.660194, count: 55648"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 103.265625,
            "unit": "median mem",
            "extra": "avg mem: 90.41461360639646, max mem: 130.6640625, count: 55648"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 31.28281339850489, max segment_count: 51.0, count: 55648"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.913043,
            "unit": "median cpu",
            "extra": "avg cpu: 15.035687669625801, max cpu: 37.10145, count: 111296"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 164.96484375,
            "unit": "median mem",
            "extra": "avg mem: 150.95191415937006, max mem: 173.91796875, count: 111296"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.846154,
            "unit": "median cpu",
            "extra": "avg cpu: 13.14562219911289, max cpu: 27.87996, count: 55648"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 155.82421875,
            "unit": "median mem",
            "extra": "avg mem: 153.0887290423735, max mem: 156.37890625, count: 55648"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "japhethobalak@gmail.com",
            "name": "Japheth Obala",
            "username": "jobala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6636277e6c81e239569461c8cf4a0a65ff954dc1",
          "message": "chore(groupby): add more column types (#2935)\n\n# Ticket(s) Closed\n\n-  Fixes the `groupby` component of  #2903 \n\n## What\n\nAdds `FLOAT8` and `BOOLEAN` column types to generated sql in `qgen.rs` \n\n## Why\n\nTo Increase test coverage for\nhttps://github.com/paradedb/paradedb/pull/2893\n\n## How\n\n## Tests\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@gmail.com>",
          "timestamp": "2025-08-25T14:41:23-07:00",
          "tree_id": "fde5c1236cde19c68b4ed4e977571490d7d6ad3f",
          "url": "https://github.com/paradedb/paradedb/commit/6636277e6c81e239569461c8cf4a0a65ff954dc1"
        },
        "date": 1756164843616,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 18.97464089944631, max cpu: 37.982197, count: 55590"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.25,
            "unit": "median mem",
            "extra": "avg mem: 141.86185710952958, max mem: 156.36328125, count: 55590"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.617592804949153, max cpu: 28.042841, count: 55590"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.09375,
            "unit": "median mem",
            "extra": "avg mem: 141.12733349073574, max mem: 146.09375, count: 55590"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 13.793103,
            "unit": "median cpu",
            "extra": "avg cpu: 12.675502330836936, max cpu: 36.74641, count: 55590"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 153.73828125,
            "unit": "median mem",
            "extra": "avg mem: 129.27766410606674, max mem: 163.63671875, count: 55590"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20233,
            "unit": "median block_count",
            "extra": "avg block_count: 20437.951681957187, max block_count: 40381.0, count: 55590"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.64666,
            "unit": "median cpu",
            "extra": "avg cpu: 4.559105242426123, max cpu: 4.660194, count: 55590"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 101.11328125,
            "unit": "median mem",
            "extra": "avg mem: 88.75789077959165, max mem: 129.38671875, count: 55590"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 31.27118186724231, max segment_count: 49.0, count: 55590"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.9265,
            "unit": "median cpu",
            "extra": "avg cpu: 15.009402694963436, max cpu: 46.198265, count: 111180"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 160.5625,
            "unit": "median mem",
            "extra": "avg mem: 147.0315297406233, max mem: 173.11328125, count: 111180"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.806328,
            "unit": "median cpu",
            "extra": "avg cpu: 12.791939124845559, max cpu: 28.125, count: 55590"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 153.68359375,
            "unit": "median mem",
            "extra": "avg mem: 151.22916645585985, max mem: 155.109375, count: 55590"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dff960a8a7741a4d7f8cb5ca537a7765a36afb3",
          "message": "fix: excluded sub-queries from filter-pushdown (on non-indexed fields). (#3045)\n\n# Ticket(s) Closed\n\n- Closes #3043 \n\n## What\n\nPrevents system crashes when `paradedb.enable_filter_pushdown` is\nenabled and heap filter expressions contain subqueries.\n\n## Why\n\nWhen `enable_filter_pushdown` is enabled, expressions that cannot be\npushed down to the index are converted to `Qual::HeapExpr` for\nheap-based evaluation. However, `HeapFieldFilter` uses\n`CreateStandaloneExprContext()` which lacks the infrastructure needed\nfor subquery evaluation (subplans, proper executor state), causing\nsystem crashes when subqueries are present.\n\n## How\n\nAdded subquery detection in `try_pushdown()` using the existing\n`contains_exec_param()` function to identify expressions containing EXEC\nparameters (subqueries). When subqueries are detected, the function\nreturns `None` instead of creating a `Qual::HeapExpr`, causing\nPostgreSQL's regular executor to handle the expression safely.\n\n## Tests\n\n- Added test cases in `unified_expression_comprehensive.sql` with\nsubqueries in heap filter expressions\n\n---------\n\nCo-authored-by: Stu Hood <stuhood@paradedb.com>",
          "timestamp": "2025-08-25T16:36:12-07:00",
          "tree_id": "0a678547f62504cd9bd542b71bb6e30d3d6fbdf3",
          "url": "https://github.com/paradedb/paradedb/commit/9dff960a8a7741a4d7f8cb5ca537a7765a36afb3"
        },
        "date": 1756167909146,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 19.03778418822659, max cpu: 41.65863, count: 55674"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 156.63671875,
            "unit": "median mem",
            "extra": "avg mem: 142.8731847451234, max mem: 157.77734375, count: 55674"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.571926878468215, max cpu: 28.015566, count: 55674"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 147.6328125,
            "unit": "median mem",
            "extra": "avg mem: 142.55399709693933, max mem: 147.6328125, count: 55674"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 13.753581,
            "unit": "median cpu",
            "extra": "avg cpu: 12.57233028382671, max cpu: 38.208954, count: 55674"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 152.021484375,
            "unit": "median mem",
            "extra": "avg mem: 125.793237894933, max mem: 160.5703125, count: 55674"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20056,
            "unit": "median block_count",
            "extra": "avg block_count: 20303.759905880663, max block_count: 40292.0, count: 55674"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6065254,
            "unit": "median cpu",
            "extra": "avg cpu: 3.6366828560141586, max cpu: 4.660194, count: 55674"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 101.07421875,
            "unit": "median mem",
            "extra": "avg mem: 88.55397436415562, max mem: 128.4609375, count: 55674"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 30.907173905234043, max segment_count: 49.0, count: 55674"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.93998,
            "unit": "median cpu",
            "extra": "avg cpu: 15.157429729642326, max cpu: 37.029896, count: 111348"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 163.2109375,
            "unit": "median mem",
            "extra": "avg mem: 147.7638797326288, max mem: 175.3515625, count: 111348"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.819577,
            "unit": "median cpu",
            "extra": "avg cpu: 12.951732477890495, max cpu: 27.906979, count: 55674"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 154.5390625,
            "unit": "median mem",
            "extra": "avg mem: 152.1899942213825, max mem: 158.54296875, count: 55674"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27eb82ae49479b36488ba8fad67ca1b3c3635fc9",
          "message": "test: Add prop testing of unindexed columns (#3049)\n\n## What\n\nThis change adds property testing for heap-filter pushdown, by:\n\n* Bulking up the `Column` definitions that we use, to make it easier to\ntrack the configuration of the column all the way from creation time to\nuse time (i.e. when generating `WHERE` clauses, in this case).\n* Although we currently always create a static table per proptest, this\nwould also make it easier to proptest the table shape: i.e. create\ndynamically shaped indexes.\n* Converting one of our existing columns to unindexed.\n\n## Why\n\n#3043 highlighted the fact that we don't have property testing for\nheap-filter pushdown.\n\n## Tests\n\nThese changes did not uncover #3043: I think because #3043 involved even\nmore deeply nested subqueries, and those don't seem worth adding here\nquite yet. But they did expose #3050.",
          "timestamp": "2025-08-26T10:56:47-07:00",
          "tree_id": "e0e1b0b3af0ab2fe9fe2aa018bf8577ad4c8867f",
          "url": "https://github.com/paradedb/paradedb/commit/27eb82ae49479b36488ba8fad67ca1b3c3635fc9"
        },
        "date": 1756233970478,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 19.070408568192327, max cpu: 41.982506, count: 55637"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 157.2421875,
            "unit": "median mem",
            "extra": "avg mem: 142.81758366453528, max mem: 159.1171875, count: 55637"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 7.61077415271052, max cpu: 28.070175, count: 55637"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 150.03515625,
            "unit": "median mem",
            "extra": "avg mem: 144.71691296652858, max mem: 150.03515625, count: 55637"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.311348,
            "unit": "median cpu",
            "extra": "avg cpu: 11.589625951541544, max cpu: 33.618675, count: 55637"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 151.2578125,
            "unit": "median mem",
            "extra": "avg mem: 126.83644658961212, max mem: 162.2421875, count: 55637"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20330,
            "unit": "median block_count",
            "extra": "avg block_count: 20479.294390423638, max block_count: 40591.0, count: 55637"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 4.582288452984495, max cpu: 4.6511626, count: 55637"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 99.6171875,
            "unit": "median mem",
            "extra": "avg mem: 88.65516912362726, max mem: 129.25, count: 55637"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 31.152452504628215, max segment_count: 55.0, count: 55637"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.93998,
            "unit": "median cpu",
            "extra": "avg cpu: 15.214920109262962, max cpu: 36.923077, count: 111274"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 162.05078125,
            "unit": "median mem",
            "extra": "avg mem: 146.19409629467575, max mem: 171.8203125, count: 111274"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.819577,
            "unit": "median cpu",
            "extra": "avg cpu: 12.888936931588788, max cpu: 27.826086, count: 55637"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 152.7578125,
            "unit": "median mem",
            "extra": "avg mem: 151.07428594056114, max mem: 155.5546875, count: 55637"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "78bf7aa445454fd8239f6932a37be33be616ab6e",
          "message": "perf: reduce FSM locking overhead",
          "timestamp": "2025-08-28T12:05:51Z",
          "url": "https://github.com/paradedb/paradedb/commit/78bf7aa445454fd8239f6932a37be33be616ab6e"
        },
        "date": 1756386047971,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 19.288037914752085, max cpu: 41.69884, count: 55614"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 156.0390625,
            "unit": "median mem",
            "extra": "avg mem: 141.74393222704714, max mem: 157.2890625, count: 55614"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 7.666644029577544, max cpu: 27.961164, count: 55614"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.01953125,
            "unit": "median mem",
            "extra": "avg mem: 140.98974684881506, max mem: 146.01953125, count: 55614"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.311348,
            "unit": "median cpu",
            "extra": "avg cpu: 11.793137875537585, max cpu: 32.74854, count: 55614"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 156.865234375,
            "unit": "median mem",
            "extra": "avg mem: 131.18261307854138, max mem: 166.49609375, count: 55614"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20466,
            "unit": "median block_count",
            "extra": "avg block_count: 20695.80454561801, max block_count: 41030.0, count: 55614"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.610951,
            "unit": "median cpu",
            "extra": "avg cpu: 3.952222585674518, max cpu: 4.628737, count: 55614"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 100.75390625,
            "unit": "median mem",
            "extra": "avg mem: 88.78446067705524, max mem: 129.26171875, count: 55614"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 31.043388355450066, max segment_count: 48.0, count: 55614"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.913043,
            "unit": "median cpu",
            "extra": "avg cpu: 14.758740564325215, max cpu: 33.267326, count: 111228"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 161.43359375,
            "unit": "median mem",
            "extra": "avg mem: 146.94583047462194, max mem: 172.69140625, count: 111228"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.806328,
            "unit": "median cpu",
            "extra": "avg cpu: 12.798339174482953, max cpu: 27.906979, count: 55614"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 151.44921875,
            "unit": "median mem",
            "extra": "avg mem: 149.76702471499982, max mem: 154.0859375, count: 55614"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "committer": {
            "name": "Eric B. Ridge",
            "username": "eeeebbbbrrrr",
            "email": "eebbrr@paradedb.com"
          },
          "id": "5cab4aa559a5cd11b90ceb4fb346d42f43b8db07",
          "message": "bugfixes and cleanup work",
          "timestamp": "2025-08-28T16:00:38Z",
          "url": "https://github.com/paradedb/paradedb/commit/5cab4aa559a5cd11b90ceb4fb346d42f43b8db07"
        },
        "date": 1756403719014,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 19.023636303917183, max cpu: 41.458733, count: 55624"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.18359375,
            "unit": "median mem",
            "extra": "avg mem: 141.27015162632136, max mem: 155.18359375, count: 55624"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 7.618103263534727, max cpu: 28.015566, count: 55624"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 147.625,
            "unit": "median mem",
            "extra": "avg mem: 142.61236002557348, max mem: 147.625, count: 55624"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 9.320388,
            "unit": "median cpu",
            "extra": "avg cpu: 11.70840850721514, max cpu: 36.958614, count: 55624"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 157.17578125,
            "unit": "median mem",
            "extra": "avg mem: 130.99439266604793, max mem: 166.140625, count: 55624"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20255,
            "unit": "median block_count",
            "extra": "avg block_count: 20520.546382856322, max block_count: 40589.0, count: 55624"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 3.6476399797984826, max cpu: 4.7197638, count: 55624"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 98.5703125,
            "unit": "median mem",
            "extra": "avg mem: 86.96801459352078, max mem: 128.671875, count: 55624"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 31.051524521789155, max segment_count: 50.0, count: 55624"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.9265,
            "unit": "median cpu",
            "extra": "avg cpu: 15.066349784458621, max cpu: 32.74854, count: 111248"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 167.9453125,
            "unit": "median mem",
            "extra": "avg mem: 152.57074649656624, max mem: 176.16015625, count: 111248"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.819577,
            "unit": "median cpu",
            "extra": "avg cpu: 12.591254084404541, max cpu: 27.934044, count: 55624"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 152.16015625,
            "unit": "median mem",
            "extra": "avg mem: 150.48813988509906, max mem: 153.44921875, count: 55624"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3b22de0bdee25950b89ad8356f8dac38d06f5f9b",
          "message": "fix: cleanup fsm overhead and fix `content.header.empty` bug (#3061)\n\n## What\n\nFixes a bug where pages weren't properly being marked as empty.\n\nAlso optimizes the `pop()/drain()` codepaths so that they're not holding\na lock as long.\n\n\n## Why\n\n## How\n\n## Tests",
          "timestamp": "2025-08-28T13:40:46-04:00",
          "tree_id": "2ba678ad022bf0f3bb1222be35535135d3ea6a44",
          "url": "https://github.com/paradedb/paradedb/commit/3b22de0bdee25950b89ad8356f8dac38d06f5f9b"
        },
        "date": 1756405889153,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.568666,
            "unit": "median cpu",
            "extra": "avg cpu: 19.327501679861, max cpu: 41.73913, count: 55668"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 156.8984375,
            "unit": "median mem",
            "extra": "avg mem: 142.47186037647302, max mem: 158.3984375, count: 55668"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.673278284681791, max cpu: 28.180038, count: 55668"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 147.484375,
            "unit": "median mem",
            "extra": "avg mem: 142.18919300304933, max mem: 147.484375, count: 55668"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 13.72736,
            "unit": "median cpu",
            "extra": "avg cpu: 11.961066194091119, max cpu: 27.961164, count: 55668"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 152.7265625,
            "unit": "median mem",
            "extra": "avg mem: 126.58237683958917, max mem: 161.42578125, count: 55668"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 19955,
            "unit": "median block_count",
            "extra": "avg block_count: 20180.58847093483, max block_count: 39855.0, count: 55668"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6153846,
            "unit": "median cpu",
            "extra": "avg cpu: 4.17463005186272, max cpu: 4.655674, count: 55668"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 101,
            "unit": "median mem",
            "extra": "avg mem: 88.46447858284832, max mem: 129.19140625, count: 55668"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 31.137026658044118, max segment_count: 50.0, count: 55668"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.953489,
            "unit": "median cpu",
            "extra": "avg cpu: 15.346444916047782, max cpu: 38.095238, count: 111336"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 160.40234375,
            "unit": "median mem",
            "extra": "avg mem: 146.25699434734722, max mem: 175.2890625, count: 111336"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.872832,
            "unit": "median cpu",
            "extra": "avg cpu: 12.993660899742054, max cpu: 28.68526, count: 55668"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 155.81640625,
            "unit": "median mem",
            "extra": "avg mem: 153.1105639685277, max mem: 155.96875, count: 55668"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mdashti@gmail.com",
            "name": "Moe",
            "username": "mdashti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b98d839a9c36c3c87946083ffb296ae8a234942",
          "message": "fix: conversion error from non-string JSON group-by columns (#2999)\n\n# Ticket(s) Closed\n\n- Closes #\n\n## What\n\nFixes `UnsupportedIntoConversion(\"String\")` error when grouping by\nnon-string JSON fields in aggregate custom scan.\n\n## Why\n\nWhen grouping by JSON fields that contain non-string values (integers,\nbooleans, etc.), Tantivy returns `OwnedValue` types like `I64`, `U64`,\n`Bool`, etc., but PostgreSQL expects string output for JSON extraction\noperators (`->>` always returns text). The generic\n`TryFrom<TantivyValue> for String` implementation only handles\n`OwnedValue::Str`, causing conversion failures.\n\n## How\n\nAdded targeted error handling in `convert_group_value_to_datum()` to\ncatch `UnsupportedIntoConversion(\"String\")` errors and route them\nthrough `TantivyValue(group_val).to_string()` for JSON GROUP BY\naggregates.\n\n## Tests\n\n- Added deep nested JSON path tests in `json_groupby_aggregate.sql`\n- Nested query now returns proper results instead of conversion errors\n\n```sql\n-- Example: GROUP BY JSON field containing integers\nSELECT config->'database'->>'port' AS db_port, COUNT(*) \nFROM table \nGROUP BY config->'database'->>'port';\n\n-- Before: ERROR: Failed to convert TantivyValue to datum: UnsupportedIntoConversion(\"String\")  \n-- After:  \n db_port | count \n---------+-------\n 3306    |     1\n 5432    |     4\n```",
          "timestamp": "2025-08-28T14:22:15-07:00",
          "tree_id": "debdd2fb280f11b731712b43d21706d7c911ed6a",
          "url": "https://github.com/paradedb/paradedb/commit/8b98d839a9c36c3c87946083ffb296ae8a234942"
        },
        "date": 1756419164615,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.568666,
            "unit": "median cpu",
            "extra": "avg cpu: 19.366754782037507, max cpu: 37.982197, count: 55676"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 158.546875,
            "unit": "median mem",
            "extra": "avg mem: 156.78195904092428, max mem: 160.1640625, count: 55676"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.65505612043154, max cpu: 28.070175, count: 55676"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 147.37890625,
            "unit": "median mem",
            "extra": "avg mem: 142.44896048959606, max mem: 147.37890625, count: 55676"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 13.714285,
            "unit": "median cpu",
            "extra": "avg cpu: 12.483684835701096, max cpu: 41.73913, count: 55676"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 152.84375,
            "unit": "median mem",
            "extra": "avg mem: 128.59999644988415, max mem: 163.58984375, count: 55676"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 20760,
            "unit": "median block_count",
            "extra": "avg block_count: 20919.358861987213, max block_count: 41646.0, count: 55676"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.550829298533396, max cpu: 4.6829267, count: 55676"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 101.51953125,
            "unit": "median mem",
            "extra": "avg mem: 89.61211967454558, max mem: 130.03125, count: 55676"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 31,
            "unit": "median segment_count",
            "extra": "avg segment_count: 31.29405848121273, max segment_count: 52.0, count: 55676"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 13.913043,
            "unit": "median cpu",
            "extra": "avg cpu: 14.50213751068881, max cpu: 32.71665, count: 111352"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 163.2421875,
            "unit": "median mem",
            "extra": "avg mem: 153.96100313504698, max mem: 183.03125, count: 111352"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.832853,
            "unit": "median cpu",
            "extra": "avg cpu: 12.76183471397968, max cpu: 32.495163, count: 55676"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 157.9296875,
            "unit": "median mem",
            "extra": "avg mem: 156.01594703620052, max mem: 164.125, count: 55676"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eebbrr@gmail.com",
            "name": "Eric Ridge",
            "username": "eeeebbbbrrrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2467050ed25dbfb99f985b5d744f39731299360",
          "message": "chore: cherry-pick PR3013 to main (#3103)\n\nCherry picks PR #3013, which only landed in 0.17.x, to `main` and\n`0.18.x` via the label.",
          "timestamp": "2025-09-02T13:40:37-04:00",
          "tree_id": "1a99392dd5174d5d2b4957f3955d66aecacb68d5",
          "url": "https://github.com/paradedb/paradedb/commit/f2467050ed25dbfb99f985b5d744f39731299360"
        },
        "date": 1756837776757,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.514948,
            "unit": "median cpu",
            "extra": "avg cpu: 18.431291571292572, max cpu: 42.352943, count: 55496"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 155.9296875,
            "unit": "median mem",
            "extra": "avg mem: 140.5273526892704, max mem: 157.0546875, count: 55496"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 9.254314991094434, max cpu: 28.042841, count: 55496"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 144.62890625,
            "unit": "median mem",
            "extra": "avg mem: 140.8559021286444, max mem: 144.62890625, count: 55496"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.047231970474606, max cpu: 13.967022, count: 55496"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 151.44140625,
            "unit": "median mem",
            "extra": "avg mem: 122.23177768442771, max mem: 152.19140625, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 24166,
            "unit": "median block_count",
            "extra": "avg block_count: 24944.942878766036, max block_count: 51054.0, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.628737,
            "unit": "median cpu",
            "extra": "avg cpu: 4.527814650785232, max cpu: 4.7058825, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 95.65234375,
            "unit": "median mem",
            "extra": "avg mem: 85.02251992260703, max mem: 127.1640625, count: 55496"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 32,
            "unit": "median segment_count",
            "extra": "avg segment_count: 32.10361107106819, max segment_count: 54.0, count: 55496"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 9.476802,
            "unit": "median cpu",
            "extra": "avg cpu: 12.000703806498766, max cpu: 32.463768, count: 110992"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 155.80078125,
            "unit": "median mem",
            "extra": "avg mem: 141.43205651223738, max mem: 160.0703125, count: 110992"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.899614,
            "unit": "median cpu",
            "extra": "avg cpu: 13.838273810305806, max cpu: 27.961164, count: 55496"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 158.0390625,
            "unit": "median mem",
            "extra": "avg mem: 156.29059991373254, max mem: 159.953125, count: 55496"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "stuhood@paradedb.com",
            "name": "Stu Hood",
            "username": "stuhood"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f3f4aa38ce36160e79c75dec6adaa73f3594b23",
          "message": "feat: EXPLAIN metrics for parallel workers (#3077)\n\n## What\n\nRecord claimed segments and total (re)query counts in the parallel\nworker state, and render it in `EXPLAIN ANALYZE VERBOSE`.\n\n```\nParallel Custom Scan (ParadeDB Scan) on public.benchmark_logs  (cost=10.00..10.12 rows=12 width=221) (actual time=128.030..128.174 rows=88 loops=8)\n   Output: id, message, country, severity, \"timestamp\", metadata\n   Table: benchmark_logs\n   Index: benchmark_logs_idx\n   Segment Count: 8\n   Heap Fetches: 1\n   Virtual Tuples: 0\n   Invisible Tuples: 0\n   Parallel Workers: {\"-1\":{\"query_count\":1,\"claimed_segments\":[\"fb215663\"]},\"0\":{\"query_count\":1,\"claimed_segments\":[\"3fa330ca\"]},\"1\":{\"query_count\":1,\"claimed_segments\":[\"a86ca5f4\"]},\"2\":{\"query_count\":1,\"claimed_segments\":[\"bf4ce4c8\"]},\"3\":{\"query_count\":1,\"claimed_segments\":[\"aba90988\"]},\"4\":{\"query_count\":1,\"claimed_segments\":[\"814b1c11\"]},\"5\":{\"query_count\":1,\"claimed_segments\":[\"0d810284\"]},\"6\":{\"query_count\":1,\"claimed_segments\":[\"5ac67c9e\"]}}\n   Exec Method: TopNScanExecState\n   Scores: false\n      TopN Order By: id asc\n      TopN Limit: 100\n      Queries: 8\n   Full Index Scan: true\n   Tantivy Query: {\"with_index\":{\"query\":\"all\"}}\n   Worker 0:  actual time=115.632..115.850 rows=100 loops=1\n   Worker 1:  actual time=117.287..117.461 rows=100 loops=1\n   Worker 2:  actual time=145.469..145.583 rows=100 loops=1\n   Worker 3:  actual time=123.740..123.936 rows=100 loops=1\n   Worker 4:  actual time=124.626..124.780 rows=100 loops=1\n   Worker 5:  actual time=147.075..147.200 rows=100 loops=1\n   Worker 6:  actual time=143.026..143.182 rows=100 loops=1\n```\n\n## Why\n\n`EXPLAIN` only runs in the parallel worker leader, and so by default\nwill not render any metrics recorded by the parallel workers.\n\nWe suspect that we have lopsided distributions of segments to workers\nand/or re-queries happening in parallel workers, but we don't currently\nhave visibility into it.\n\n## How\n\nAdding additional fields highlighted the fact that our access to `u32`\nfields was not aligned, and that our `transmute`s were resulting in\nslices of the wrong length (a `transmute` of a `&[u8]` to a slice of any\nother type will result in a slice of the original length!). Instead,\nswitched to use `std::alloc::Layout` and the `bytemuck` crate to do\nthese casts more safely.\n\n---------\n\nCo-authored-by: Ming <ming.ying.nyc@gmail.com>",
          "timestamp": "2025-09-03T08:29:12-07:00",
          "tree_id": "2228b5309478fc05a352c2b5062210892466fe02",
          "url": "https://github.com/paradedb/paradedb/commit/1f3f4aa38ce36160e79c75dec6adaa73f3594b23"
        },
        "date": 1756916391988,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Custom scan - Primary - cpu",
            "value": 18.532818,
            "unit": "median cpu",
            "extra": "avg cpu: 18.621202312294432, max cpu: 38.43844, count: 55462"
          },
          {
            "name": "Custom scan - Primary - mem",
            "value": 154.625,
            "unit": "median mem",
            "extra": "avg mem: 143.6982205299349, max mem: 154.625, count: 55462"
          },
          {
            "name": "Delete value - Primary - cpu",
            "value": 4.6376815,
            "unit": "median cpu",
            "extra": "avg cpu: 7.6112539408871385, max cpu: 28.125, count: 55462"
          },
          {
            "name": "Delete value - Primary - mem",
            "value": 146.61328125,
            "unit": "median mem",
            "extra": "avg mem: 142.825970512468, max mem: 146.9921875, count: 55462"
          },
          {
            "name": "Insert value - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 5.061937170593844, max cpu: 14.257426, count: 55462"
          },
          {
            "name": "Insert value - Primary - mem",
            "value": 151.39453125,
            "unit": "median mem",
            "extra": "avg mem: 130.4505583496358, max mem: 152.1484375, count: 55462"
          },
          {
            "name": "Monitor Segment Count - Primary - block_count",
            "value": 25683,
            "unit": "median block_count",
            "extra": "avg block_count: 26188.42273989398, max block_count: 52794.0, count: 55462"
          },
          {
            "name": "Monitor Segment Count - Primary - cpu",
            "value": 4.6332045,
            "unit": "median cpu",
            "extra": "avg cpu: 4.2954009867766025, max cpu: 4.6511626, count: 55462"
          },
          {
            "name": "Monitor Segment Count - Primary - mem",
            "value": 102.2109375,
            "unit": "median mem",
            "extra": "avg mem: 91.7723825124635, max mem: 129.328125, count: 55462"
          },
          {
            "name": "Monitor Segment Count - Primary - segment_count",
            "value": 32,
            "unit": "median segment_count",
            "extra": "avg segment_count: 32.38914932746746, max segment_count: 56.0, count: 55462"
          },
          {
            "name": "Update random values - Primary - cpu",
            "value": 9.29332,
            "unit": "median cpu",
            "extra": "avg cpu: 11.33284743854109, max cpu: 32.463768, count: 110924"
          },
          {
            "name": "Update random values - Primary - mem",
            "value": 156.23046875,
            "unit": "median mem",
            "extra": "avg mem: 144.666740325865, max mem: 162.09375, count: 110924"
          },
          {
            "name": "Vacuum - Primary - cpu",
            "value": 13.9265,
            "unit": "median cpu",
            "extra": "avg cpu: 14.593791711729255, max cpu: 27.988338, count: 55462"
          },
          {
            "name": "Vacuum - Primary - mem",
            "value": 157.83203125,
            "unit": "median mem",
            "extra": "avg mem: 156.02257169041417, max mem: 159.4140625, count: 55462"
          }
        ]
      }
    ]
  }
}